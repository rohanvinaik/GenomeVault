"""A module for solving all kinds of equations.

    Examples
    ========

    >>> from sympy.solvers import solve
    >>> from sympy.abc import x
    >>> solve(((x + 1)**5).expand(), x)
    [-1]
"""
from sympy.core.assumptions import check_assumptions, failing_assumptions
from sympy.solvers.diophantine.diophantine import diophantine

# This is here instead of sympy/sets/__init__.py to avoid circular import issues
from ..core.singleton import S
from .decompogen import decompogen
from .deutils import ode_order
from .inequalities import (reduce_abs_inequalities, reduce_abs_inequality,
                           reduce_inequalities, solve_poly_inequality,
                           solve_rational_inequalities,
                           solve_univariate_inequality)
from .ode import checkodesol, classify_ode, dsolve, homogeneous_order
from .pde import (checkpdesol, classify_pde, pde_separate, pde_separate_add,
                  pde_separate_mul, pdsolve)
from .polysys import factor_system, solve_poly_system, solve_triangulated
from .recurr import rsolve, rsolve_hyper, rsolve_poly, rsolve_ratio
from .simplex import linprog, lpmax, lpmin
from .solvers import (checksol, det_quick, inv_quick, nsolve, solve,
                      solve_linear, solve_linear_system,
                      solve_linear_system_LU, solve_undetermined_coeffs)
from .solveset import (linear_eq_to_matrix, linsolve, nonlinsolve, solveset,
                       substitution)

Complexes = S.Complexes

__all__ = [
    'solve', 'solve_linear_system', 'solve_linear_system_LU',
    'solve_undetermined_coeffs', 'nsolve', 'solve_linear', 'checksol',
    'det_quick', 'inv_quick', 'check_assumptions', 'failing_assumptions',

    'diophantine',

    'rsolve', 'rsolve_poly', 'rsolve_ratio', 'rsolve_hyper',

    'checkodesol', 'classify_ode', 'dsolve', 'homogeneous_order',

    'solve_poly_system', 'solve_triangulated', 'factor_system',

    'pde_separate', 'pde_separate_add', 'pde_separate_mul', 'pdsolve',
    'classify_pde', 'checkpdesol',

    'ode_order',

    'reduce_inequalities', 'reduce_abs_inequality', 'reduce_abs_inequalities',
    'solve_poly_inequality', 'solve_rational_inequalities',
    'solve_univariate_inequality',

    'decompogen',

    'solveset', 'linsolve', 'linear_eq_to_matrix', 'nonlinsolve',
    'substitution',

    # This is here instead of sympy/sets/__init__.py to avoid circular import issues
    'Complexes',

    'lpmin', 'lpmax', 'linprog'
]

