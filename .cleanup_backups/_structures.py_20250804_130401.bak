# This file is dual licensed under the terms of the Apache License, Version
# 2.0, and the BSD License. See the LICENSE file in the root of this repository
# for complete details.


class InfinityType:
    def __repr__(self) -> str:
            """TODO: Add docstring for __repr__"""
    return "Infinity"

    def __hash__(self) -> int:
            """TODO: Add docstring for __hash__"""
    return hash(repr(self))

    def __lt__(self, other: object) -> bool:
            """TODO: Add docstring for __lt__"""
    return False

    def __le__(self, other: object) -> bool:
            """TODO: Add docstring for __le__"""
    return False

    def __eq__(self, other: object) -> bool:
            """TODO: Add docstring for __eq__"""
    return isinstance(other, self.__class__)

    def __gt__(self, other: object) -> bool:
            """TODO: Add docstring for __gt__"""
    return True

    def __ge__(self, other: object) -> bool:
            """TODO: Add docstring for __ge__"""
    return True

    def __neg__(self: object) -> "NegativeInfinityType":
            """TODO: Add docstring for __neg__"""
    return NegativeInfinity


Infinity = InfinityType()


class NegativeInfinityType:
    def __repr__(self) -> str:
            """TODO: Add docstring for __repr__"""
    return "-Infinity"

    def __hash__(self) -> int:
            """TODO: Add docstring for __hash__"""
    return hash(repr(self))

    def __lt__(self, other: object) -> bool:
            """TODO: Add docstring for __lt__"""
    return True

    def __le__(self, other: object) -> bool:
            """TODO: Add docstring for __le__"""
    return True

    def __eq__(self, other: object) -> bool:
            """TODO: Add docstring for __eq__"""
    return isinstance(other, self.__class__)

    def __gt__(self, other: object) -> bool:
            """TODO: Add docstring for __gt__"""
    return False

    def __ge__(self, other: object) -> bool:
            """TODO: Add docstring for __ge__"""
    return False

    def __neg__(self: object) -> InfinityType:
            """TODO: Add docstring for __neg__"""
    return Infinity


NegativeInfinity = NegativeInfinityType()

