from typing import Any, Dict

import logging

logger = logging.getLogger(__name__)

# *** GENERATED BY `setup.py antlr`, DO NOT EDIT BY HAND ***
#
# Generated with antlr4
#    antlr4 is licensed under the BSD-3-Clause License
#    https://github.com/antlr/antlr4/blob/master/LICENSE.txt
from antlr4 import *
if __name__ is not None and "." in __name__:
    from .autolevparser import AutolevParser
else:
    from autolevparser import AutolevParser

# This class defines a complete listener for a parse tree produced by AutolevParser.
class AutolevListener(ParseTreeListener):

    # Enter a parse tree produced by AutolevParser#prog.
    def enterProg(*args, **kwargs) -> None:
       """TODO: Add docstring for enterProg"""
     """TODO: Implement enterProg"""
    logger.debug(f"enterProg called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterProg not yet implemented")

    # Exit a parse tree produced by AutolevParser#prog.
    def exitProg(*args, **kwargs) -> None:
       """TODO: Add docstring for exitProg"""
     """TODO: Implement exitProg"""
    logger.debug(f"exitProg called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitProg not yet implemented")


    # Enter a parse tree produced by AutolevParser#stat.
    def enterStat(*args, **kwargs) -> None:
       """TODO: Add docstring for enterStat"""
     """TODO: Implement enterStat"""
    logger.debug(f"enterStat called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterStat not yet implemented")

    # Exit a parse tree produced by AutolevParser#stat.
    def exitStat(*args, **kwargs) -> None:
       """TODO: Add docstring for exitStat"""
     """TODO: Implement exitStat"""
    logger.debug(f"exitStat called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitStat not yet implemented")


    # Enter a parse tree produced by AutolevParser#vecAssign.
    def enterVecAssign(*args, **kwargs) -> None:
       """TODO: Add docstring for enterVecAssign"""
     """TODO: Implement enterVecAssign"""
    logger.debug(f"enterVecAssign called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterVecAssign not yet implemented")

    # Exit a parse tree produced by AutolevParser#vecAssign.
    def exitVecAssign(*args, **kwargs) -> None:
       """TODO: Add docstring for exitVecAssign"""
     """TODO: Implement exitVecAssign"""
    logger.debug(f"exitVecAssign called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitVecAssign not yet implemented")


    # Enter a parse tree produced by AutolevParser#indexAssign.
    def enterIndexAssign(*args, **kwargs) -> None:
       """TODO: Add docstring for enterIndexAssign"""
     """TODO: Implement enterIndexAssign"""
    logger.debug(f"enterIndexAssign called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterIndexAssign not yet implemented")

    # Exit a parse tree produced by AutolevParser#indexAssign.
    def exitIndexAssign(*args, **kwargs) -> None:
       """TODO: Add docstring for exitIndexAssign"""
     """TODO: Implement exitIndexAssign"""
    logger.debug(f"exitIndexAssign called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitIndexAssign not yet implemented")


    # Enter a parse tree produced by AutolevParser#regularAssign.
    def enterRegularAssign(*args, **kwargs) -> None:
       """TODO: Add docstring for enterRegularAssign"""
     """TODO: Implement enterRegularAssign"""
    logger.debug(f"enterRegularAssign called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterRegularAssign not yet implemented")

    # Exit a parse tree produced by AutolevParser#regularAssign.
    def exitRegularAssign(*args, **kwargs) -> None:
       """TODO: Add docstring for exitRegularAssign"""
     """TODO: Implement exitRegularAssign"""
    logger.debug(f"exitRegularAssign called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitRegularAssign not yet implemented")


    # Enter a parse tree produced by AutolevParser#equals.
    def enterEquals(*args, **kwargs) -> None:
       """TODO: Add docstring for enterEquals"""
     """TODO: Implement enterEquals"""
    logger.debug(f"enterEquals called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterEquals not yet implemented")

    # Exit a parse tree produced by AutolevParser#equals.
    def exitEquals(*args, **kwargs) -> None:
       """TODO: Add docstring for exitEquals"""
     """TODO: Implement exitEquals"""
    logger.debug(f"exitEquals called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitEquals not yet implemented")


    # Enter a parse tree produced by AutolevParser#index.
    def enterIndex(*args, **kwargs) -> None:
       """TODO: Add docstring for enterIndex"""
     """TODO: Implement enterIndex"""
    logger.debug(f"enterIndex called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterIndex not yet implemented")

    # Exit a parse tree produced by AutolevParser#index.
    def exitIndex(*args, **kwargs) -> None:
       """TODO: Add docstring for exitIndex"""
     """TODO: Implement exitIndex"""
    logger.debug(f"exitIndex called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitIndex not yet implemented")


    # Enter a parse tree produced by AutolevParser#diff.
    def enterDiff(*args, **kwargs) -> None:
       """TODO: Add docstring for enterDiff"""
     """TODO: Implement enterDiff"""
    logger.debug(f"enterDiff called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterDiff not yet implemented")

    # Exit a parse tree produced by AutolevParser#diff.
    def exitDiff(*args, **kwargs) -> None:
       """TODO: Add docstring for exitDiff"""
     """TODO: Implement exitDiff"""
    logger.debug(f"exitDiff called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitDiff not yet implemented")


    # Enter a parse tree produced by AutolevParser#functionCall.
    def enterFunctionCall(*args, **kwargs) -> None:
       """TODO: Add docstring for enterFunctionCall"""
     """TODO: Implement enterFunctionCall"""
    logger.debug(f"enterFunctionCall called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterFunctionCall not yet implemented")

    # Exit a parse tree produced by AutolevParser#functionCall.
    def exitFunctionCall(*args, **kwargs) -> None:
       """TODO: Add docstring for exitFunctionCall"""
     """TODO: Implement exitFunctionCall"""
    logger.debug(f"exitFunctionCall called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitFunctionCall not yet implemented")


    # Enter a parse tree produced by AutolevParser#varDecl.
    def enterVarDecl(*args, **kwargs) -> None:
       """TODO: Add docstring for enterVarDecl"""
     """TODO: Implement enterVarDecl"""
    logger.debug(f"enterVarDecl called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterVarDecl not yet implemented")

    # Exit a parse tree produced by AutolevParser#varDecl.
    def exitVarDecl(*args, **kwargs) -> None:
       """TODO: Add docstring for exitVarDecl"""
     """TODO: Implement exitVarDecl"""
    logger.debug(f"exitVarDecl called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitVarDecl not yet implemented")


    # Enter a parse tree produced by AutolevParser#varType.
    def enterVarType(*args, **kwargs) -> None:
       """TODO: Add docstring for enterVarType"""
     """TODO: Implement enterVarType"""
    logger.debug(f"enterVarType called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterVarType not yet implemented")

    # Exit a parse tree produced by AutolevParser#varType.
    def exitVarType(*args, **kwargs) -> None:
       """TODO: Add docstring for exitVarType"""
     """TODO: Implement exitVarType"""
    logger.debug(f"exitVarType called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitVarType not yet implemented")


    # Enter a parse tree produced by AutolevParser#varDecl2.
    def enterVarDecl2(*args, **kwargs) -> None:
       """TODO: Add docstring for enterVarDecl2"""
     """TODO: Implement enterVarDecl2"""
    logger.debug(f"enterVarDecl2 called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterVarDecl2 not yet implemented")

    # Exit a parse tree produced by AutolevParser#varDecl2.
    def exitVarDecl2(*args, **kwargs) -> None:
       """TODO: Add docstring for exitVarDecl2"""
     """TODO: Implement exitVarDecl2"""
    logger.debug(f"exitVarDecl2 called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitVarDecl2 not yet implemented")


    # Enter a parse tree produced by AutolevParser#ranges.
    def enterRanges(*args, **kwargs) -> None:
       """TODO: Add docstring for enterRanges"""
     """TODO: Implement enterRanges"""
    logger.debug(f"enterRanges called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterRanges not yet implemented")

    # Exit a parse tree produced by AutolevParser#ranges.
    def exitRanges(*args, **kwargs) -> None:
       """TODO: Add docstring for exitRanges"""
     """TODO: Implement exitRanges"""
    logger.debug(f"exitRanges called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitRanges not yet implemented")


    # Enter a parse tree produced by AutolevParser#massDecl.
    def enterMassDecl(*args, **kwargs) -> None:
       """TODO: Add docstring for enterMassDecl"""
     """TODO: Implement enterMassDecl"""
    logger.debug(f"enterMassDecl called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterMassDecl not yet implemented")

    # Exit a parse tree produced by AutolevParser#massDecl.
    def exitMassDecl(*args, **kwargs) -> None:
       """TODO: Add docstring for exitMassDecl"""
     """TODO: Implement exitMassDecl"""
    logger.debug(f"exitMassDecl called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitMassDecl not yet implemented")


    # Enter a parse tree produced by AutolevParser#massDecl2.
    def enterMassDecl2(*args, **kwargs) -> None:
       """TODO: Add docstring for enterMassDecl2"""
     """TODO: Implement enterMassDecl2"""
    logger.debug(f"enterMassDecl2 called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterMassDecl2 not yet implemented")

    # Exit a parse tree produced by AutolevParser#massDecl2.
    def exitMassDecl2(*args, **kwargs) -> None:
       """TODO: Add docstring for exitMassDecl2"""
     """TODO: Implement exitMassDecl2"""
    logger.debug(f"exitMassDecl2 called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitMassDecl2 not yet implemented")


    # Enter a parse tree produced by AutolevParser#inertiaDecl.
    def enterInertiaDecl(*args, **kwargs) -> None:
       """TODO: Add docstring for enterInertiaDecl"""
     """TODO: Implement enterInertiaDecl"""
    logger.debug(f"enterInertiaDecl called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterInertiaDecl not yet implemented")

    # Exit a parse tree produced by AutolevParser#inertiaDecl.
    def exitInertiaDecl(*args, **kwargs) -> None:
       """TODO: Add docstring for exitInertiaDecl"""
     """TODO: Implement exitInertiaDecl"""
    logger.debug(f"exitInertiaDecl called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitInertiaDecl not yet implemented")


    # Enter a parse tree produced by AutolevParser#matrix.
    def enterMatrix(*args, **kwargs) -> None:
       """TODO: Add docstring for enterMatrix"""
     """TODO: Implement enterMatrix"""
    logger.debug(f"enterMatrix called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterMatrix not yet implemented")

    # Exit a parse tree produced by AutolevParser#matrix.
    def exitMatrix(*args, **kwargs) -> None:
       """TODO: Add docstring for exitMatrix"""
     """TODO: Implement exitMatrix"""
    logger.debug(f"exitMatrix called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitMatrix not yet implemented")


    # Enter a parse tree produced by AutolevParser#matrixInOutput.
    def enterMatrixInOutput(*args, **kwargs) -> None:
       """TODO: Add docstring for enterMatrixInOutput"""
     """TODO: Implement enterMatrixInOutput"""
    logger.debug(f"enterMatrixInOutput called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterMatrixInOutput not yet implemented")

    # Exit a parse tree produced by AutolevParser#matrixInOutput.
    def exitMatrixInOutput(*args, **kwargs) -> None:
       """TODO: Add docstring for exitMatrixInOutput"""
     """TODO: Implement exitMatrixInOutput"""
    logger.debug(f"exitMatrixInOutput called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitMatrixInOutput not yet implemented")


    # Enter a parse tree produced by AutolevParser#codeCommands.
    def enterCodeCommands(*args, **kwargs) -> None:
       """TODO: Add docstring for enterCodeCommands"""
     """TODO: Implement enterCodeCommands"""
    logger.debug(f"enterCodeCommands called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterCodeCommands not yet implemented")

    # Exit a parse tree produced by AutolevParser#codeCommands.
    def exitCodeCommands(*args, **kwargs) -> None:
       """TODO: Add docstring for exitCodeCommands"""
     """TODO: Implement exitCodeCommands"""
    logger.debug(f"exitCodeCommands called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitCodeCommands not yet implemented")


    # Enter a parse tree produced by AutolevParser#settings.
    def enterSettings(*args, **kwargs) -> None:
       """TODO: Add docstring for enterSettings"""
     """TODO: Implement enterSettings"""
    logger.debug(f"enterSettings called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterSettings not yet implemented")

    # Exit a parse tree produced by AutolevParser#settings.
    def exitSettings(*args, **kwargs) -> None:
       """TODO: Add docstring for exitSettings"""
     """TODO: Implement exitSettings"""
    logger.debug(f"exitSettings called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitSettings not yet implemented")


    # Enter a parse tree produced by AutolevParser#units.
    def enterUnits(*args, **kwargs) -> None:
       """TODO: Add docstring for enterUnits"""
     """TODO: Implement enterUnits"""
    logger.debug(f"enterUnits called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterUnits not yet implemented")

    # Exit a parse tree produced by AutolevParser#units.
    def exitUnits(*args, **kwargs) -> None:
       """TODO: Add docstring for exitUnits"""
     """TODO: Implement exitUnits"""
    logger.debug(f"exitUnits called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitUnits not yet implemented")


    # Enter a parse tree produced by AutolevParser#inputs.
    def enterInputs(*args, **kwargs) -> None:
       """TODO: Add docstring for enterInputs"""
     """TODO: Implement enterInputs"""
    logger.debug(f"enterInputs called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterInputs not yet implemented")

    # Exit a parse tree produced by AutolevParser#inputs.
    def exitInputs(*args, **kwargs) -> None:
       """TODO: Add docstring for exitInputs"""
     """TODO: Implement exitInputs"""
    logger.debug(f"exitInputs called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitInputs not yet implemented")


    # Enter a parse tree produced by AutolevParser#id_diff.
    def enterId_diff(*args, **kwargs) -> None:
       """TODO: Add docstring for enterId_diff"""
     """TODO: Implement enterId_diff"""
    logger.debug(f"enterId_diff called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterId_diff not yet implemented")

    # Exit a parse tree produced by AutolevParser#id_diff.
    def exitId_diff(*args, **kwargs) -> None:
       """TODO: Add docstring for exitId_diff"""
     """TODO: Implement exitId_diff"""
    logger.debug(f"exitId_diff called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitId_diff not yet implemented")


    # Enter a parse tree produced by AutolevParser#inputs2.
    def enterInputs2(*args, **kwargs) -> None:
       """TODO: Add docstring for enterInputs2"""
     """TODO: Implement enterInputs2"""
    logger.debug(f"enterInputs2 called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterInputs2 not yet implemented")

    # Exit a parse tree produced by AutolevParser#inputs2.
    def exitInputs2(*args, **kwargs) -> None:
       """TODO: Add docstring for exitInputs2"""
     """TODO: Implement exitInputs2"""
    logger.debug(f"exitInputs2 called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitInputs2 not yet implemented")


    # Enter a parse tree produced by AutolevParser#outputs.
    def enterOutputs(*args, **kwargs) -> None:
       """TODO: Add docstring for enterOutputs"""
     """TODO: Implement enterOutputs"""
    logger.debug(f"enterOutputs called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterOutputs not yet implemented")

    # Exit a parse tree produced by AutolevParser#outputs.
    def exitOutputs(*args, **kwargs) -> None:
       """TODO: Add docstring for exitOutputs"""
     """TODO: Implement exitOutputs"""
    logger.debug(f"exitOutputs called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitOutputs not yet implemented")


    # Enter a parse tree produced by AutolevParser#outputs2.
    def enterOutputs2(*args, **kwargs) -> None:
       """TODO: Add docstring for enterOutputs2"""
     """TODO: Implement enterOutputs2"""
    logger.debug(f"enterOutputs2 called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterOutputs2 not yet implemented")

    # Exit a parse tree produced by AutolevParser#outputs2.
    def exitOutputs2(*args, **kwargs) -> None:
       """TODO: Add docstring for exitOutputs2"""
     """TODO: Implement exitOutputs2"""
    logger.debug(f"exitOutputs2 called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitOutputs2 not yet implemented")


    # Enter a parse tree produced by AutolevParser#codegen.
    def enterCodegen(*args, **kwargs) -> None:
       """TODO: Add docstring for enterCodegen"""
     """TODO: Implement enterCodegen"""
    logger.debug(f"enterCodegen called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterCodegen not yet implemented")

    # Exit a parse tree produced by AutolevParser#codegen.
    def exitCodegen(*args, **kwargs) -> None:
       """TODO: Add docstring for exitCodegen"""
     """TODO: Implement exitCodegen"""
    logger.debug(f"exitCodegen called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitCodegen not yet implemented")


    # Enter a parse tree produced by AutolevParser#commands.
    def enterCommands(*args, **kwargs) -> None:
       """TODO: Add docstring for enterCommands"""
     """TODO: Implement enterCommands"""
    logger.debug(f"enterCommands called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterCommands not yet implemented")

    # Exit a parse tree produced by AutolevParser#commands.
    def exitCommands(*args, **kwargs) -> None:
       """TODO: Add docstring for exitCommands"""
     """TODO: Implement exitCommands"""
    logger.debug(f"exitCommands called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitCommands not yet implemented")


    # Enter a parse tree produced by AutolevParser#vec.
    def enterVec(*args, **kwargs) -> None:
       """TODO: Add docstring for enterVec"""
     """TODO: Implement enterVec"""
    logger.debug(f"enterVec called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterVec not yet implemented")

    # Exit a parse tree produced by AutolevParser#vec.
    def exitVec(*args, **kwargs) -> None:
       """TODO: Add docstring for exitVec"""
     """TODO: Implement exitVec"""
    logger.debug(f"exitVec called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitVec not yet implemented")


    # Enter a parse tree produced by AutolevParser#parens.
    def enterParens(*args, **kwargs) -> None:
       """TODO: Add docstring for enterParens"""
     """TODO: Implement enterParens"""
    logger.debug(f"enterParens called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterParens not yet implemented")

    # Exit a parse tree produced by AutolevParser#parens.
    def exitParens(*args, **kwargs) -> None:
       """TODO: Add docstring for exitParens"""
     """TODO: Implement exitParens"""
    logger.debug(f"exitParens called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitParens not yet implemented")


    # Enter a parse tree produced by AutolevParser#VectorOrDyadic.
    def enterVectorOrDyadic(*args, **kwargs) -> None:
       """TODO: Add docstring for enterVectorOrDyadic"""
     """TODO: Implement enterVectorOrDyadic"""
    logger.debug(f"enterVectorOrDyadic called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterVectorOrDyadic not yet implemented")

    # Exit a parse tree produced by AutolevParser#VectorOrDyadic.
    def exitVectorOrDyadic(*args, **kwargs) -> None:
       """TODO: Add docstring for exitVectorOrDyadic"""
     """TODO: Implement exitVectorOrDyadic"""
    logger.debug(f"exitVectorOrDyadic called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitVectorOrDyadic not yet implemented")


    # Enter a parse tree produced by AutolevParser#Exponent.
    def enterExponent(*args, **kwargs) -> None:
       """TODO: Add docstring for enterExponent"""
     """TODO: Implement enterExponent"""
    logger.debug(f"enterExponent called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterExponent not yet implemented")

    # Exit a parse tree produced by AutolevParser#Exponent.
    def exitExponent(*args, **kwargs) -> None:
       """TODO: Add docstring for exitExponent"""
     """TODO: Implement exitExponent"""
    logger.debug(f"exitExponent called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitExponent not yet implemented")


    # Enter a parse tree produced by AutolevParser#MulDiv.
    def enterMulDiv(*args, **kwargs) -> None:
       """TODO: Add docstring for enterMulDiv"""
     """TODO: Implement enterMulDiv"""
    logger.debug(f"enterMulDiv called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterMulDiv not yet implemented")

    # Exit a parse tree produced by AutolevParser#MulDiv.
    def exitMulDiv(*args, **kwargs) -> None:
       """TODO: Add docstring for exitMulDiv"""
     """TODO: Implement exitMulDiv"""
    logger.debug(f"exitMulDiv called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitMulDiv not yet implemented")


    # Enter a parse tree produced by AutolevParser#AddSub.
    def enterAddSub(*args, **kwargs) -> None:
       """TODO: Add docstring for enterAddSub"""
     """TODO: Implement enterAddSub"""
    logger.debug(f"enterAddSub called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterAddSub not yet implemented")

    # Exit a parse tree produced by AutolevParser#AddSub.
    def exitAddSub(*args, **kwargs) -> None:
       """TODO: Add docstring for exitAddSub"""
     """TODO: Implement exitAddSub"""
    logger.debug(f"exitAddSub called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitAddSub not yet implemented")


    # Enter a parse tree produced by AutolevParser#float.
    def enterFloat(*args, **kwargs) -> None:
       """TODO: Add docstring for enterFloat"""
     """TODO: Implement enterFloat"""
    logger.debug(f"enterFloat called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterFloat not yet implemented")

    # Exit a parse tree produced by AutolevParser#float.
    def exitFloat(*args, **kwargs) -> None:
       """TODO: Add docstring for exitFloat"""
     """TODO: Implement exitFloat"""
    logger.debug(f"exitFloat called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitFloat not yet implemented")


    # Enter a parse tree produced by AutolevParser#int.
    def enterInt(*args, **kwargs) -> None:
       """TODO: Add docstring for enterInt"""
     """TODO: Implement enterInt"""
    logger.debug(f"enterInt called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterInt not yet implemented")

    # Exit a parse tree produced by AutolevParser#int.
    def exitInt(*args, **kwargs) -> None:
       """TODO: Add docstring for exitInt"""
     """TODO: Implement exitInt"""
    logger.debug(f"exitInt called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitInt not yet implemented")


    # Enter a parse tree produced by AutolevParser#idEqualsExpr.
    def enterIdEqualsExpr(*args, **kwargs) -> None:
       """TODO: Add docstring for enterIdEqualsExpr"""
     """TODO: Implement enterIdEqualsExpr"""
    logger.debug(f"enterIdEqualsExpr called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterIdEqualsExpr not yet implemented")

    # Exit a parse tree produced by AutolevParser#idEqualsExpr.
    def exitIdEqualsExpr(*args, **kwargs) -> None:
       """TODO: Add docstring for exitIdEqualsExpr"""
     """TODO: Implement exitIdEqualsExpr"""
    logger.debug(f"exitIdEqualsExpr called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitIdEqualsExpr not yet implemented")


    # Enter a parse tree produced by AutolevParser#negativeOne.
    def enterNegativeOne(*args, **kwargs) -> None:
       """TODO: Add docstring for enterNegativeOne"""
     """TODO: Implement enterNegativeOne"""
    logger.debug(f"enterNegativeOne called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterNegativeOne not yet implemented")

    # Exit a parse tree produced by AutolevParser#negativeOne.
    def exitNegativeOne(*args, **kwargs) -> None:
       """TODO: Add docstring for exitNegativeOne"""
     """TODO: Implement exitNegativeOne"""
    logger.debug(f"exitNegativeOne called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitNegativeOne not yet implemented")


    # Enter a parse tree produced by AutolevParser#function.
    def enterFunction(*args, **kwargs) -> None:
       """TODO: Add docstring for enterFunction"""
     """TODO: Implement enterFunction"""
    logger.debug(f"enterFunction called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterFunction not yet implemented")

    # Exit a parse tree produced by AutolevParser#function.
    def exitFunction(*args, **kwargs) -> None:
       """TODO: Add docstring for exitFunction"""
     """TODO: Implement exitFunction"""
    logger.debug(f"exitFunction called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitFunction not yet implemented")


    # Enter a parse tree produced by AutolevParser#rangess.
    def enterRangess(*args, **kwargs) -> None:
       """TODO: Add docstring for enterRangess"""
     """TODO: Implement enterRangess"""
    logger.debug(f"enterRangess called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterRangess not yet implemented")

    # Exit a parse tree produced by AutolevParser#rangess.
    def exitRangess(*args, **kwargs) -> None:
       """TODO: Add docstring for exitRangess"""
     """TODO: Implement exitRangess"""
    logger.debug(f"exitRangess called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitRangess not yet implemented")


    # Enter a parse tree produced by AutolevParser#colon.
    def enterColon(*args, **kwargs) -> None:
       """TODO: Add docstring for enterColon"""
     """TODO: Implement enterColon"""
    logger.debug(f"enterColon called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterColon not yet implemented")

    # Exit a parse tree produced by AutolevParser#colon.
    def exitColon(*args, **kwargs) -> None:
       """TODO: Add docstring for exitColon"""
     """TODO: Implement exitColon"""
    logger.debug(f"exitColon called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitColon not yet implemented")


    # Enter a parse tree produced by AutolevParser#id.
    def enterId(*args, **kwargs) -> None:
       """TODO: Add docstring for enterId"""
     """TODO: Implement enterId"""
    logger.debug(f"enterId called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterId not yet implemented")

    # Exit a parse tree produced by AutolevParser#id.
    def exitId(*args, **kwargs) -> None:
       """TODO: Add docstring for exitId"""
     """TODO: Implement exitId"""
    logger.debug(f"exitId called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitId not yet implemented")


    # Enter a parse tree produced by AutolevParser#exp.
    def enterExp(*args, **kwargs) -> None:
       """TODO: Add docstring for enterExp"""
     """TODO: Implement enterExp"""
    logger.debug(f"enterExp called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterExp not yet implemented")

    # Exit a parse tree produced by AutolevParser#exp.
    def exitExp(*args, **kwargs) -> None:
       """TODO: Add docstring for exitExp"""
     """TODO: Implement exitExp"""
    logger.debug(f"exitExp called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitExp not yet implemented")


    # Enter a parse tree produced by AutolevParser#matrices.
    def enterMatrices(*args, **kwargs) -> None:
       """TODO: Add docstring for enterMatrices"""
     """TODO: Implement enterMatrices"""
    logger.debug(f"enterMatrices called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterMatrices not yet implemented")

    # Exit a parse tree produced by AutolevParser#matrices.
    def exitMatrices(*args, **kwargs) -> None:
       """TODO: Add docstring for exitMatrices"""
     """TODO: Implement exitMatrices"""
    logger.debug(f"exitMatrices called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitMatrices not yet implemented")


    # Enter a parse tree produced by AutolevParser#Indexing.
    def enterIndexing(*args, **kwargs) -> None:
       """TODO: Add docstring for enterIndexing"""
     """TODO: Implement enterIndexing"""
    logger.debug(f"enterIndexing called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"enterIndexing not yet implemented")

    # Exit a parse tree produced by AutolevParser#Indexing.
    def exitIndexing(*args, **kwargs) -> None:
       """TODO: Add docstring for exitIndexing"""
     """TODO: Implement exitIndexing"""
    logger.debug(f"exitIndexing called with args={args}, kwargs={kwargs}")
    raise NotImplementedError(f"exitIndexing not yet implemented")



del AutolevParser
