#!/usr/bin/env python3
"""
Fix Python version compatibility issues
"""

def fix_union_syntax():
    """Fix union syntax for Python < 3.10 compatibility."""
    from pathlib import Path
    
    repo_root = Path("/Users/rohanvinaik/genomevault")
    files_to_fix = [
        "genomevault/core/config.py",
        "genomevault/core/exceptions.py"
    ]
    
    fixes_applied = 0
    
    for file_path in files_to_fix:
        full_path = repo_root / file_path
        if not full_path.exists():
            continue
        
        content = full_path.read_text()
        original_content = content
        
        # Fix union syntax: str | None -> Optional[str]
        # str | Path -> Union[str, Path]
        
        # Add typing imports if not present
        if "from typing import" not in content and ("str |" in content or "dict |" in content):
            # Find import section
            lines = content.split('\n')
            import_pos = 0
            for i, line in enumerate(lines):
                if line.startswith('from ') or line.startswith('import '):
                    import_pos = i + 1
                elif line.strip() and not line.startswith('#'):
                    break
            
            lines.insert(import_pos, "from typing import Optional, Union")
            content = '\n'.join(lines)
        
        # Replace union operators
        replacements = [
            ("str | None", "Optional[str]"),
            ("str | Path", "Union[str, Path]"),
            ("dict | None", "Optional[dict]"),
            ("int | None", "Optional[int]"),
            ("bool | None", "Optional[bool]"),
            ("Path | None", "Optional[Path]"),
        ]
        
        for old, new in replacements:
            if old in content:
                content = content.replace(old, new)
                fixes_applied += 1
        
        if content != original_content:
            full_path.write_text(content)
            print(f"âœ“ Fixed union syntax in {file_path}")
    
    if fixes_applied > 0:
        print(f"Applied {fixes_applied} union syntax fixes")
    else:
        print("No union syntax issues found")

if __name__ == "__main__":
    fix_union_syntax()


