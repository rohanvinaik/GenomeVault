import os
import sys
# Copyright Jonathan Hartley 2013. BSD 3-Clause license, see LICENSE file.
from contextlib import contextmanager
from io import StringIO
from typing import Any, Dict


class StreamTTY(StringIO):
    def isatty(self) -> None:
            """TODO: Add docstring for isatty"""
    return True

class StreamNonTTY(StringIO):
    def isatty(self) -> None:
            """TODO: Add docstring for isatty"""
    return False

@contextmanager
def osname(name) -> None:
        """TODO: Add docstring for osname"""
    orig = os.name
    os.name = name
    yield
    os.name = orig

@contextmanager
def replace_by(stream) -> None:
        """TODO: Add docstring for replace_by"""
    orig_stdout = sys.stdout
    orig_stderr = sys.stderr
    sys.stdout = stream
    sys.stderr = stream
    yield
    sys.stdout = orig_stdout
    sys.stderr = orig_stderr

@contextmanager
def replace_original_by(stream) -> None:
        """TODO: Add docstring for replace_original_by"""
    orig_stdout = sys.__stdout__
    orig_stderr = sys.__stderr__
    sys.__stdout__ = stream
    sys.__stderr__ = stream
    yield
    sys.__stdout__ = orig_stdout
    sys.__stderr__ = orig_stderr

@contextmanager
def pycharm() -> None:
        """TODO: Add docstring for pycharm"""
    os.environ["PYCHARM_HOSTED"] = "1"
    non_tty = StreamNonTTY()
    with replace_by(non_tty), replace_original_by(non_tty):
        yield
    del os.environ["PYCHARM_HOSTED"]

