#!/usr/bin/env python3
"""Quick validation script for lint clean implementation."""

import subprocess
import sys
from pathlib import Path


def run_command(cmd, description):
    """Run a command and return success status."""
    print(f"\nüîß {description}")
    print(f"Running: {' '.join(cmd)}")
    print("-" * 50)

    try:
        result = subprocess.run(
            cmd,
            cwd="/Users/rohanvinaik/genomevault",
            capture_output=True,
            text=True,
            timeout=60,
        )

        print(f"Exit code: {result.returncode}")
        if result.stdout:
            print(f"STDOUT:\n{result.stdout}")
        if result.stderr:
            print(f"STDERR:\n{result.stderr}")

        return result.returncode == 0

    except subprocess.TimeoutExpired:
        print("‚ùå Command timed out")
        return False
    except Exception as e:
        print(f"‚ùå Error running command: {e}")
        return False


def main():
    print("GenomeVault Lint Clean Validation")
    print("=" * 50)

    # Check that we're in the right directory
    ruff_config = Path("/Users/rohanvinaik/genomevault/.ruff.toml")
    if not ruff_config.exists():
        print("‚ùå .ruff.toml not found - not in project root")
        sys.exit(1)

    print("‚úÖ Found .ruff.toml - in correct directory")

    # Run validation sequence
    validations = [
        (["ruff", "format", "--check", "."], "Ruff format check"),
        (["ruff", "check", "."], "Ruff lint check"),
    ]

    all_passed = True

    for cmd, desc in validations:
        success = run_command(cmd, desc)
        if success:
            print(f"‚úÖ {desc} PASSED")
        else:
            print(f"‚ùå {desc} FAILED")
            all_passed = False

    # Summary
    print("\n" + "=" * 50)
    if all_passed:
        print("üéâ ALL VALIDATIONS PASSED!")
        print("Lint clean implementation successful.")
    else:
        print("‚ùå Some validations failed.")
        print("Review the output above for details.")

    return 0 if all_passed else 1


if __name__ == "__main__":
    sys.exit(main())



