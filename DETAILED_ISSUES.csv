File,Line,End_Line,Column,Function/Symbol,Issue_Type,Severity,Confidence,Message,Suggestions,Evidence
genomevault/experimental/zk_circuits/recursive_snark.py,37,37,0,,duplicate_function,3,1.00,Exact duplicate: proof_count identical to proof_count in recursive_snark.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/recursive_snark.py:42"", ""function_name"": ""proof_count"", ""duplicate_name"": ""proof_count"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_4bab33fd3cee5da5_ee6d0f07"", ""content_hash"": ""4bab33fd3cee5da5"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_duplicate_function_4bab33fd3cee5da5_d602f8c8""]}"
genomevault/experimental/zk_circuits/catalytic_proof.py,115,115,0,,duplicate_function,3,1.00,Exact duplicate: get_usage_stats identical to get_usage_stats in catalytic_proof.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/catalytic_proof.py:114"", ""function_name"": ""get_usage_stats"", ""duplicate_name"": ""get_usage_stats"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_7528627cba047b4e_7f6edff4"", ""content_hash"": ""7528627cba047b4e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/api/models/updates.py,15,15,0,,duplicate_function,3,1.00,Exact duplicate: dict_for_update identical to dict_for_update in vectors.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/api/models/vectors.py:56"", ""function_name"": ""dict_for_update"", ""duplicate_name"": ""dict_for_update"", ""similarity"": 0.9565217391304348, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_42db0799784dcf29_543ef56d"", ""content_hash"": ""42db0799784dcf29"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/api/models/vectors.py,56,56,0,,duplicate_function,3,1.00,Exact duplicate: dict_for_update identical to dict_for_update in vectors.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/api/models/vectors.py:67"", ""function_name"": ""dict_for_update"", ""duplicate_name"": ""dict_for_update"", ""similarity"": 0.9565217391304348, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_a61b2bf04ce9c590_0e9ca904"", ""content_hash"": ""a61b2bf04ce9c590"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/api/models/updates.py,185,185,0,,semantic_duplicate_function,2,1.00,Semantic duplicate: merge_with_existing similar to merge_with_existing in config.py (similarity: 0.89),,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/api/routers/config.py:217"", ""function_name"": ""merge_with_existing"", ""duplicate_name"": ""merge_with_existing"", ""similarity"": 0.890625, ""match_type"": ""semantic"", ""stable_id"": ""TC_semantic_duplicate_function_0d187fd8571c7588_9cb6a20f"", ""content_hash"": ""0d187fd8571c7588"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/pir_advanced/it_pir.py,36,36,0,,duplicate_function,3,1.00,Exact duplicate: get_server_query identical to get_server_query in it_pir.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/pir/advanced/it_pir.py:35"", ""function_name"": ""get_server_query"", ""duplicate_name"": ""get_server_query"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_4ca292ff534cf4f3_9a9d1483"", ""content_hash"": ""4ca292ff534cf4f3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/pir_advanced/it_pir.py,53,53,0,,duplicate_function,3,1.00,Exact duplicate: is_complete identical to is_complete in it_pir.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/pir/advanced/it_pir.py:52"", ""function_name"": ""is_complete"", ""duplicate_name"": ""is_complete"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_d28cb0f3766a908e_c6537183"", ""content_hash"": ""d28cb0f3766a908e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/pir_advanced/it_pir.py,92,92,0,,duplicate_function,3,1.00,Exact duplicate: generate_query identical to generate_query in it_pir.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/pir/advanced/it_pir.py:91"", ""function_name"": ""generate_query"", ""duplicate_name"": ""generate_query"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_8fda4c97fd4f01c9_6ff31f16"", ""content_hash"": ""8fda4c97fd4f01c9"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/pir_advanced/it_pir.py,161,161,0,,duplicate_function,3,1.00,Exact duplicate: process_server_query identical to process_server_query in it_pir.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/pir/advanced/it_pir.py:160"", ""function_name"": ""process_server_query"", ""duplicate_name"": ""process_server_query"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_90bbf7c431dc52e3_5bd6d3f3"", ""content_hash"": ""90bbf7c431dc52e3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/pir_advanced/it_pir.py,194,194,0,,duplicate_function,3,1.00,Exact duplicate: reconstruct_response identical to reconstruct_response in it_pir.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/pir/advanced/it_pir.py:193"", ""function_name"": ""reconstruct_response"", ""duplicate_name"": ""reconstruct_response"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_795bec03032e0ed5_5c61be9e"", ""content_hash"": ""795bec03032e0ed5"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/pir_advanced/it_pir.py,230,230,0,,duplicate_function,3,1.00,Exact duplicate: create_multi_query identical to create_multi_query in it_pir.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/pir/advanced/it_pir.py:232"", ""function_name"": ""create_multi_query"", ""duplicate_name"": ""create_multi_query"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_b947c5718f5c7c49_6354596d"", ""content_hash"": ""b947c5718f5c7c49"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/pir_advanced/it_pir.py,307,307,0,,duplicate_function,3,1.00,Exact duplicate: process_responses_with_verification identical to process_responses_with_verification in it_pir.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/pir/advanced/it_pir.py:309"", ""function_name"": ""process_responses_with_verification"", ""duplicate_name"": ""process_responses_with_verification"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_bef154aa140b75e8_e85e015a"", ""content_hash"": ""bef154aa140b75e8"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/pir_advanced/robust_it_pir.py,13,13,0,,duplicate_function,3,1.00,Exact duplicate: get identical to get in robust_it_pir.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/pir/advanced/robust_it_pir.py:13"", ""function_name"": ""get"", ""duplicate_name"": ""get"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_867634091ef7e856_637dc33d"", ""content_hash"": ""867634091ef7e856"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/pir_advanced/robust_it_pir.py,53,53,0,,duplicate_function,3,1.00,Exact duplicate: get identical to get in robust_it_pir.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/pir/advanced/robust_it_pir.py:53"", ""function_name"": ""get"", ""duplicate_name"": ""get"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_0888e7623aa57062_c460a89a"", ""content_hash"": ""0888e7623aa57062"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/zk_circuits/catalytic_proof.py,39,39,0,,duplicate_function,3,1.00,Exact duplicate: space_efficiency identical to space_efficiency in catalytic_proof.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/catalytic_proof.py:39"", ""function_name"": ""space_efficiency"", ""duplicate_name"": ""space_efficiency"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_57cfc60b0cf03dce_b70336cf"", ""content_hash"": ""57cfc60b0cf03dce"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/zk_circuits/catalytic_proof.py,73,73,0,,duplicate_function,3,1.00,Exact duplicate: read identical to read in catalytic_proof.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/catalytic_proof.py:72"", ""function_name"": ""read"", ""duplicate_name"": ""read"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_d9d1e009131f5221_49a52b82"", ""content_hash"": ""d9d1e009131f5221"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/zk_circuits/catalytic_proof.py,81,81,0,,duplicate_function,3,1.00,Exact duplicate: write identical to write in catalytic_proof.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/catalytic_proof.py:80"", ""function_name"": ""write"", ""duplicate_name"": ""write"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_6d16b881d6f16272_e485c277"", ""content_hash"": ""6d16b881d6f16272"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/zk_circuits/catalytic_proof.py,89,89,0,,duplicate_function,3,1.00,Exact duplicate: reset identical to reset in catalytic_proof.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/catalytic_proof.py:88"", ""function_name"": ""reset"", ""duplicate_name"": ""reset"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_4b2d42123cf28cfb_634df64e"", ""content_hash"": ""4b2d42123cf28cfb"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/zk_circuits/catalytic_proof.py,215,215,0,,duplicate_function,3,1.00,Exact duplicate: generate_catalytic_proof identical to generate_catalytic_proof in catalytic_proof.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/catalytic_proof.py:214"", ""function_name"": ""generate_catalytic_proof"", ""duplicate_name"": ""generate_catalytic_proof"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_14e1373f8175abc3_eda54dc4"", ""content_hash"": ""14e1373f8175abc3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/zk_circuits/catalytic_proof.py,642,642,0,,duplicate_function,3,1.00,Exact duplicate: get_space_savings identical to get_space_savings in catalytic_proof.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/catalytic_proof.py:673"", ""function_name"": ""get_space_savings"", ""duplicate_name"": ""get_space_savings"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_f56ad4de63c19963_1c671cb9"", ""content_hash"": ""f56ad4de63c19963"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/zk_circuits/post_quantum.py,44,44,0,,duplicate_function,3,1.00,Exact duplicate: prove identical to prove in post_quantum.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/post_quantum.py:44"", ""function_name"": ""prove"", ""duplicate_name"": ""prove"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_19ff446bf520bddb_3b3e2f98"", ""content_hash"": ""19ff446bf520bddb"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/zk_circuits/post_quantum.py,57,57,0,,duplicate_function,3,1.00,Exact duplicate: verify identical to verify in post_quantum.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/post_quantum.py:57"", ""function_name"": ""verify"", ""duplicate_name"": ""verify"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_f2607da0017d12c8_c63abe98"", ""content_hash"": ""f2607da0017d12c8"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/zk_circuits/post_quantum.py,17,17,0,,duplicate_function,3,1.00,Exact duplicate: prove identical to prove in post_quantum.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/post_quantum.py:17"", ""function_name"": ""prove"", ""duplicate_name"": ""prove"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_6f336c3d2ee014f7_da1f5ea4"", ""content_hash"": ""6f336c3d2ee014f7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/zk_circuits/post_quantum.py,31,31,0,,duplicate_function,3,1.00,Exact duplicate: verify identical to verify in post_quantum.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/post_quantum.py:31"", ""function_name"": ""verify"", ""duplicate_name"": ""verify"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_33dfbcb870bb5906_a9dd396b"", ""content_hash"": ""33dfbcb870bb5906"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/zk_circuits/recursive_snark.py,42,42,0,,duplicate_function,3,1.00,Exact duplicate: verification_complexity identical to verification_complexity in recursive_snark.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/recursive_snark.py:47"", ""function_name"": ""verification_complexity"", ""duplicate_name"": ""verification_complexity"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_8329af6e66fc06fa_c1d660ab"", ""content_hash"": ""8329af6e66fc06fa"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_duplicate_function_8329af6e66fc06fa_1a617fed""]}"
genomevault/experimental/zk_circuits/recursive_snark.py,84,84,0,,duplicate_function,3,1.00,Exact duplicate: compose_proofs identical to compose_proofs in recursive_snark.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/recursive_snark.py:86"", ""function_name"": ""compose_proofs"", ""duplicate_name"": ""compose_proofs"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_9f3248276eb3bd53_106cdfd2"", ""content_hash"": ""9f3248276eb3bd53"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_duplicate_function_9f3248276eb3bd53_4f40fb36""]}"
genomevault/utils/monitoring.py,153,153,0,,semantic_duplicate_function,2,1.00,Semantic duplicate: decorator similar to track_processing in monitoring.py (similarity: 0.88),,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/monitoring.py:150"", ""function_name"": ""decorator"", ""duplicate_name"": ""track_processing"", ""similarity"": 0.8775510204081632, ""match_type"": ""semantic"", ""stable_id"": ""TC_semantic_duplicate_function_e92b90388915d6c9_b72a030a"", ""content_hash"": ""e92b90388915d6c9"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector_transform/binding_operations.py,175,175,0,,semantic_duplicate_function,2,1.00,Semantic duplicate: circular_bind similar to fourier_bind in binding_operations.py (similarity: 0.89),,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/hypervector_transform/binding_operations.py:193"", ""function_name"": ""circular_bind"", ""duplicate_name"": ""fourier_bind"", ""similarity"": 0.8909090909090909, ""match_type"": ""semantic"", ""stable_id"": ""TC_semantic_duplicate_function_6013d89fb15f4db0_feeb26f1"", ""content_hash"": ""6013d89fb15f4db0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector_transform/hierarchical.py,231,231,0,,semantic_duplicate_function,2,1.00,Semantic duplicate: forward similar to forward in hierarchical.py (similarity: 0.93),,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/hypervector_transform/hierarchical.py:348"", ""function_name"": ""forward"", ""duplicate_name"": ""forward"", ""similarity"": 0.9285714285714286, ""match_type"": ""semantic"", ""stable_id"": ""TC_semantic_duplicate_function_3d8e3a1db67535bc_111ce38d"", ""content_hash"": ""3d8e3a1db67535bc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/epigenetics.py,5,5,0,,duplicate_function,3,1.00,Exact duplicate: normalize_methylation identical to normalize_methylation in plonk_circuits.py,"IMMEDIATE: These functions are structurally identical. Options:
1. Delete all but one and update imports
2. If they need different names, use aliasing:
   ```python
   # Keep one implementation
   def original_function(...):
       ...

   # Create aliases for other names
   alternative_name = original_function
   ``` | CHECK: Run this command to find all usages:
```bash
grep -r 'function_name' --include='*.py' .
```","{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/plonk_circuits.py:5"", ""function_name"": ""normalize_methylation"", ""duplicate_name"": ""normalize_methylation"", ""similarity"": 1.0, ""match_type"": ""exact"", ""stable_id"": ""TC_duplicate_function_2be661cd294837c5_f9729053"", ""content_hash"": ""2be661cd294837c5"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/monitoring.py,221,221,0,,semantic_duplicate_function,2,1.00,Semantic duplicate: decorator similar to track_hypervector_operation in monitoring.py (similarity: 0.86),,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/monitoring.py:218"", ""function_name"": ""decorator"", ""duplicate_name"": ""track_hypervector_operation"", ""similarity"": 0.859375, ""match_type"": ""semantic"", ""stable_id"": ""TC_semantic_duplicate_function_b295f2d43ff52c13_f92b2687"", ""content_hash"": ""b295f2d43ff52c13"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/post_quantum_crypto.py,56,56,0,,semantic_duplicate_function,2,1.00,Semantic duplicate: generate_keypair similar to generate_keypair in post_quantum_crypto.py (similarity: 0.91),,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/post_quantum_crypto.py:81"", ""function_name"": ""generate_keypair"", ""duplicate_name"": ""generate_keypair"", ""similarity"": 0.9130434782608695, ""match_type"": ""semantic"", ""stable_id"": ""TC_semantic_duplicate_function_b0c0c70729de94dd_27aad6fe"", ""content_hash"": ""b0c0c70729de94dd"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/cleanup_root_directory.py,16,16,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca""]}"
devtools/debug_genomevault.py,18,18,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""__init__"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_cf5a9c7e1c9647c0_5feac25c"", ""content_hash"": ""cf5a9c7e1c9647c0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_cf5a9c7e1c9647c0_cbb94f43"", ""TC_missing_symbol_cf5a9c7e1c9647c0_b7d36764"", ""TC_missing_symbol_cf5a9c7e1c9647c0_6d7d9562"", ""TC_missing_symbol_cf5a9c7e1c9647c0_dfd4afba"", ""TC_missing_symbol_cf5a9c7e1c9647c0_6f1e5149""]}"
devtools/diagnostic.py,13,13,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2""]}"
devtools/setup_dev.py,122,122,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""setup_virtual_environment"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_6f4f50703bc5b480_9d9a4d44"", ""content_hash"": ""6f4f50703bc5b480"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/setup_dev.py,173,173,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""install_dependencies"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_d0ff91a598b9f2cd_06cee2ca"", ""content_hash"": ""d0ff91a598b9f2cd"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/setup_dev.py,234,234,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""setup_pre_commit_hooks"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_87b294bdcac89271_e882a253"", ""content_hash"": ""87b294bdcac89271"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/setup_dev.py,263,263,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""run_initial_tests"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_2e70b7b2655a2b3d_504ec2f0"", ""content_hash"": ""2e70b7b2655a2b3d"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/setup_dev.py,296,296,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""create_local_env_file"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_910eec8f13c820d9_b9e74393"", ""content_hash"": ""910eec8f13c820d9"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
examples/minimal_verification.py,1,1,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_1acea495"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566""]}"
examples/simple_test.py,15,15,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_780c3650"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495""]}"
genomevault/api/routers/metrics.py,1,1,0,,missing_symbol,2,1.00,Reference to undefined symbol 'Info',,"{""context"": ""<module>"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e6cce47897712c2a_ec7f08c0"", ""content_hash"": ""e6cce47897712c2a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e6cce47897712c2a_98f80e93"", ""TC_missing_symbol_e6cce47897712c2a_6aa0bc46"", ""TC_missing_symbol_e6cce47897712c2a_a93e66f1"", ""TC_missing_symbol_e6cce47897712c2a_0914eb4f""]}"
genomevault/blockchain/hipaa/integration.py,208,208,0,,missing_symbol,2,1.00,Reference to undefined symbol '_hipaa_committee',,"{""context"": ""create_hipaa_committee"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_a33fe2f4a9c9c0f5_51b6d8c2"", ""content_hash"": ""a33fe2f4a9c9c0f5"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_a33fe2f4a9c9c0f5_b9ea8254""]}"
genomevault/blockchain/hipaa/integration.py,233,233,0,,missing_symbol,2,1.00,Reference to undefined symbol '_hipaa_proposals',,"{""context"": ""add_hipaa_proposal_types"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_343be18bbf1a6e29_a509a787"", ""content_hash"": ""343be18bbf1a6e29"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_343be18bbf1a6e29_03e2cd7f""]}"
genomevault/blockchain/hipaa/integration.py,250,250,0,,missing_symbol,2,1.00,Reference to undefined symbol '_verifier',,"{""context"": ""test_hipaa_integration"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_5680639c83fc2225_046a5d67"", ""content_hash"": ""5680639c83fc2225"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_5680639c83fc2225_da419675"", ""TC_missing_symbol_5680639c83fc2225_78d11910""]}"
genomevault/blockchain/hipaa/integration.py,250,250,0,,missing_symbol,2,1.00,Reference to undefined symbol '_governance',,"{""context"": ""test_hipaa_integration"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_5680639c83fc2225_046a5d67"", ""content_hash"": ""5680639c83fc2225"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_5680639c83fc2225_da419675"", ""TC_missing_symbol_5680639c83fc2225_78d11910""]}"
genomevault/blockchain/hipaa/integration.py,269,269,0,,missing_symbol,2,1.00,Reference to undefined symbol '_credentials',,"{""context"": ""test_hipaa_integration"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_5680639c83fc2225_56d9841c"", ""content_hash"": ""5680639c83fc2225"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_5680639c83fc2225_da419675"", ""TC_missing_symbol_5680639c83fc2225_78d11910"", ""TC_missing_symbol_5680639c83fc2225_046a5d67""]}"
genomevault/blockchain/hipaa/integration.py,269,269,0,,missing_symbol,2,1.00,Reference to undefined symbol '_node_config',,"{""context"": ""test_hipaa_integration"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_5680639c83fc2225_56d9841c"", ""content_hash"": ""5680639c83fc2225"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_5680639c83fc2225_da419675"", ""TC_missing_symbol_5680639c83fc2225_78d11910"", ""TC_missing_symbol_5680639c83fc2225_046a5d67""]}"
genomevault/clinical/eval/harness.py,52,52,0,,missing_symbol,2,1.00,Reference to undefined symbol 'calibrator',,"{""context"": ""compute_report"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_18384a6064200425_441a62f5"", ""content_hash"": ""18384a6064200425"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/config/paths.py,3,3,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_f6aa3059"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650""]}"
genomevault/core/exceptions.py,18,18,0,,missing_symbol,2,1.00,Reference to undefined symbol 'details',,"{""context"": ""__init__"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_cf5a9c7e1c9647c0_955a243b"", ""content_hash"": ""cf5a9c7e1c9647c0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_cf5a9c7e1c9647c0_cbb94f43"", ""TC_missing_symbol_cf5a9c7e1c9647c0_b7d36764"", ""TC_missing_symbol_cf5a9c7e1c9647c0_6d7d9562"", ""TC_missing_symbol_cf5a9c7e1c9647c0_dfd4afba"", ""TC_missing_symbol_cf5a9c7e1c9647c0_6f1e5149"", ""TC_missing_symbol_cf5a9c7e1c9647c0_5feac25c""]}"
genomevault/core/exceptions.py,108,108,0,,missing_symbol,2,1.00,Reference to undefined symbol 'details',,"{""context"": ""__init__"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_cf5a9c7e1c9647c0_58407f95"", ""content_hash"": ""cf5a9c7e1c9647c0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_cf5a9c7e1c9647c0_cbb94f43"", ""TC_missing_symbol_cf5a9c7e1c9647c0_b7d36764"", ""TC_missing_symbol_cf5a9c7e1c9647c0_6d7d9562"", ""TC_missing_symbol_cf5a9c7e1c9647c0_dfd4afba"", ""TC_missing_symbol_cf5a9c7e1c9647c0_6f1e5149"", ""TC_missing_symbol_cf5a9c7e1c9647c0_5feac25c"", ""TC_missing_symbol_cf5a9c7e1c9647c0_955a243b""]}"
genomevault/crypto/types.py,1,1,0,,missing_symbol,2,1.00,Reference to undefined symbol 'Ed25519PublicKey',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059""]}"
genomevault/crypto/types.py,1,1,0,,missing_symbol,2,1.00,Reference to undefined symbol 'Ed25519PrivateKey',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059""]}"
genomevault/crypto/types.py,1,1,0,,missing_symbol,2,1.00,Reference to undefined symbol 'RSAPrivateKey',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059""]}"
genomevault/crypto/types.py,1,1,0,,missing_symbol,2,1.00,Reference to undefined symbol 'RSAPublicKey',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059""]}"
genomevault/crypto/types.py,1,1,0,,missing_symbol,2,1.00,Reference to undefined symbol 'EllipticCurvePrivateKey',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059""]}"
genomevault/crypto/types.py,1,1,0,,missing_symbol,2,1.00,Reference to undefined symbol 'EllipticCurvePublicKey',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059""]}"
genomevault/hypervector/operations/hamming_lut.py,1,1,0,,missing_symbol,2,1.00,Reference to undefined symbol '__attribute__',,"{""context"": ""<module>"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e6cce47897712c2a_45c166de"", ""content_hash"": ""e6cce47897712c2a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e6cce47897712c2a_98f80e93"", ""TC_missing_symbol_e6cce47897712c2a_6aa0bc46"", ""TC_missing_symbol_e6cce47897712c2a_a93e66f1"", ""TC_missing_symbol_e6cce47897712c2a_0914eb4f"", ""TC_missing_symbol_e6cce47897712c2a_ec7f08c0""]}"
genomevault/hypervector/operations/hamming_lut.py,1,1,0,,missing_symbol,2,1.00,Reference to undefined symbol 'section',,"{""context"": ""<module>"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e6cce47897712c2a_45c166de"", ""content_hash"": ""e6cce47897712c2a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e6cce47897712c2a_98f80e93"", ""TC_missing_symbol_e6cce47897712c2a_6aa0bc46"", ""TC_missing_symbol_e6cce47897712c2a_a93e66f1"", ""TC_missing_symbol_e6cce47897712c2a_0914eb4f"", ""TC_missing_symbol_e6cce47897712c2a_ec7f08c0""]}"
genomevault/hypervector/operations/hamming_lut.py,1,1,0,,missing_symbol,2,1.00,Reference to undefined symbol 'endmodule',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_45c166de"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059"", ""TC_missing_symbol_b6b5203270481309_bbe4bd48""]}"
genomevault/integration/proof_of_training.py,306,306,0,,missing_symbol,2,1.00,Reference to undefined symbol 'DatabaseError',,"{""context"": ""submit_attestation"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_9d9dfe9372de0e00_7a4df48c"", ""content_hash"": ""9d9dfe9372de0e00"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/proteomics.py,383,383,0,,missing_symbol,2,1.00,Reference to undefined symbol 'mods',,"{""context"": ""_generate_random_modifications"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_88c3ebd991d7f3eb_dbbbf5cc"", ""content_hash"": ""88c3ebd991d7f3eb"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/proteomics.py,419,419,0,,missing_symbol,2,1.00,Reference to undefined symbol '_modifications',,"{""context"": ""_create_protein_measurements"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_c49dc1cdef92fa45_339e2f66"", ""content_hash"": ""c49dc1cdef92fa45"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/proteomics.py,420,420,0,,missing_symbol,2,1.00,Reference to undefined symbol '_mod_counts',,"{""context"": ""_create_protein_measurements"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_c49dc1cdef92fa45_c2997a54"", ""content_hash"": ""c49dc1cdef92fa45"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_c49dc1cdef92fa45_339e2f66""]}"
genomevault/local_processing/proteomics.py,434,434,0,,missing_symbol,2,1.00,Reference to undefined symbol 'peptide',,"{""context"": ""_create_protein_measurements"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_c49dc1cdef92fa45_c5573581"", ""content_hash"": ""c49dc1cdef92fa45"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_c49dc1cdef92fa45_339e2f66"", ""TC_missing_symbol_c49dc1cdef92fa45_c2997a54""]}"
genomevault/local_processing/proteomics.py,446,446,0,,missing_symbol,2,1.00,Reference to undefined symbol '_mod_counts',,"{""context"": ""_create_protein_measurements"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_c49dc1cdef92fa45_8aafd631"", ""content_hash"": ""c49dc1cdef92fa45"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_c49dc1cdef92fa45_339e2f66"", ""TC_missing_symbol_c49dc1cdef92fa45_c2997a54"", ""TC_missing_symbol_c49dc1cdef92fa45_c5573581""]}"
genomevault/local_processing/proteomics.py,464,464,0,,missing_symbol,2,1.00,Reference to undefined symbol '_filtered',,"{""context"": ""_apply_fdr_filter"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_6f226ca860ec9b5f_7989a3b8"", ""content_hash"": ""6f226ca860ec9b5f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/proteomics.py,467,467,0,,missing_symbol,2,1.00,Reference to undefined symbol 'n_decoys',,"{""context"": ""_apply_fdr_filter"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_6f226ca860ec9b5f_5129702e"", ""content_hash"": ""6f226ca860ec9b5f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_6f226ca860ec9b5f_7989a3b8""]}"
genomevault/local_processing/proteomics.py,468,468,0,,missing_symbol,2,1.00,Reference to undefined symbol '_filtered',,"{""context"": ""_apply_fdr_filter"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_6f226ca860ec9b5f_c0bee1fd"", ""content_hash"": ""6f226ca860ec9b5f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_6f226ca860ec9b5f_7989a3b8"", ""TC_missing_symbol_6f226ca860ec9b5f_5129702e""]}"
genomevault/local_processing/proteomics.py,468,468,0,,missing_symbol,2,1.00,Reference to undefined symbol '_n_decoys',,"{""context"": ""_apply_fdr_filter"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_6f226ca860ec9b5f_c0bee1fd"", ""content_hash"": ""6f226ca860ec9b5f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_6f226ca860ec9b5f_7989a3b8"", ""TC_missing_symbol_6f226ca860ec9b5f_5129702e""]}"
genomevault/local_processing/proteomics.py,469,469,0,,missing_symbol,2,1.00,Reference to undefined symbol '_filtered',,"{""context"": ""_apply_fdr_filter"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_6f226ca860ec9b5f_bcbfbcfb"", ""content_hash"": ""6f226ca860ec9b5f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_6f226ca860ec9b5f_7989a3b8"", ""TC_missing_symbol_6f226ca860ec9b5f_5129702e"", ""TC_missing_symbol_6f226ca860ec9b5f_c0bee1fd""]}"
genomevault/local_processing/proteomics.py,471,471,0,,missing_symbol,2,1.00,Reference to undefined symbol 'filtered',,"{""context"": ""_apply_fdr_filter"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_6f226ca860ec9b5f_b9301367"", ""content_hash"": ""6f226ca860ec9b5f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_6f226ca860ec9b5f_7989a3b8"", ""TC_missing_symbol_6f226ca860ec9b5f_5129702e"", ""TC_missing_symbol_6f226ca860ec9b5f_c0bee1fd"", ""TC_missing_symbol_6f226ca860ec9b5f_bcbfbcfb""]}"
genomevault/local_processing/proteomics.py,472,472,0,,missing_symbol,2,1.00,Reference to undefined symbol 'filtered',,"{""context"": ""_apply_fdr_filter"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_6f226ca860ec9b5f_db00dc44"", ""content_hash"": ""6f226ca860ec9b5f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_6f226ca860ec9b5f_7989a3b8"", ""TC_missing_symbol_6f226ca860ec9b5f_5129702e"", ""TC_missing_symbol_6f226ca860ec9b5f_c0bee1fd"", ""TC_missing_symbol_6f226ca860ec9b5f_bcbfbcfb"", ""TC_missing_symbol_6f226ca860ec9b5f_b9301367""]}"
genomevault/local_processing/proteomics.py,485,485,0,,missing_symbol,2,1.00,Reference to undefined symbol '_abundances',,"{""context"": ""_normalize_abundances"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_53d9ff1e726a1994_cdafb9b1"", ""content_hash"": ""53d9ff1e726a1994"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/proteomics.py,492,492,0,,missing_symbol,2,1.00,Reference to undefined symbol '_abundances',,"{""context"": ""_normalize_abundances"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_53d9ff1e726a1994_5241e8cb"", ""content_hash"": ""53d9ff1e726a1994"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_53d9ff1e726a1994_cdafb9b1""]}"
genomevault/local_processing/proteomics.py,493,493,0,,missing_symbol,2,1.00,Reference to undefined symbol '_abundances',,"{""context"": ""_normalize_abundances"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_53d9ff1e726a1994_959cf281"", ""content_hash"": ""53d9ff1e726a1994"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_53d9ff1e726a1994_cdafb9b1"", ""TC_missing_symbol_53d9ff1e726a1994_5241e8cb""]}"
genomevault/local_processing/proteomics.py,497,497,0,,missing_symbol,2,1.00,Reference to undefined symbol '_abundances',,"{""context"": ""_normalize_abundances"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_53d9ff1e726a1994_b46b2a85"", ""content_hash"": ""53d9ff1e726a1994"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_53d9ff1e726a1994_cdafb9b1"", ""TC_missing_symbol_53d9ff1e726a1994_5241e8cb"", ""TC_missing_symbol_53d9ff1e726a1994_959cf281""]}"
genomevault/local_processing/proteomics.py,498,498,0,,missing_symbol,2,1.00,Reference to undefined symbol '_abundances',,"{""context"": ""_normalize_abundances"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_53d9ff1e726a1994_b4b9e3f2"", ""content_hash"": ""53d9ff1e726a1994"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_53d9ff1e726a1994_cdafb9b1"", ""TC_missing_symbol_53d9ff1e726a1994_5241e8cb"", ""TC_missing_symbol_53d9ff1e726a1994_959cf281"", ""TC_missing_symbol_53d9ff1e726a1994_b46b2a85""]}"
genomevault/local_processing/proteomics.py,502,502,0,,missing_symbol,2,1.00,Reference to undefined symbol '_normalized',,"{""context"": ""_normalize_abundances"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_53d9ff1e726a1994_f80343cb"", ""content_hash"": ""53d9ff1e726a1994"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_53d9ff1e726a1994_cdafb9b1"", ""TC_missing_symbol_53d9ff1e726a1994_5241e8cb"", ""TC_missing_symbol_53d9ff1e726a1994_959cf281"", ""TC_missing_symbol_53d9ff1e726a1994_b46b2a85"", ""TC_missing_symbol_53d9ff1e726a1994_b4b9e3f2""]}"
genomevault/local_processing/proteomics.py,521,521,0,,missing_symbol,2,1.00,Reference to undefined symbol '_coverages',,"{""context"": ""_calculate_quality_metrics"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_99353e7989eab5ef_bd929a40"", ""content_hash"": ""99353e7989eab5ef"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/proteomics.py,522,522,0,,missing_symbol,2,1.00,Reference to undefined symbol 'abundances',,"{""context"": ""_calculate_quality_metrics"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_99353e7989eab5ef_10565fc0"", ""content_hash"": ""99353e7989eab5ef"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_99353e7989eab5ef_bd929a40""]}"
genomevault/local_processing/sequencing.py,166,166,0,,missing_symbol,2,1.00,Reference to undefined symbol '_log_operation',,"{""context"": ""process"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_bbb0a9239033ead1_77ab7499"", ""content_hash"": ""bbb0a9239033ead1"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_bbb0a9239033ead1_09160086""]}"
genomevault/local_processing/sequencing.py,252,252,0,,missing_symbol,2,1.00,Reference to undefined symbol '_gzip',,"{""context"": ""_run_quality_control"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_2a1a4d9fd42fc050_9957d7d1"", ""content_hash"": ""2a1a4d9fd42fc050"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_2a1a4d9fd42fc050_00b04915""]}"
genomevault/pir/client/pir_client.py,167,167,0,,missing_symbol,2,1.00,Reference to undefined symbol 'RequestException',,"{""context"": ""_query_server"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_3f657a74113d6a53_89ca1e62"", ""content_hash"": ""3f657a74113d6a53"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_3f657a74113d6a53_4bc2a4c5""]}"
genomevault/pir/client/pir_client.py,349,349,0,,missing_symbol,2,1.00,Reference to undefined symbol 'RequestException',,"{""context"": ""_query_server_v2"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_e4bd3ca400b386b3_134dea74"", ""content_hash"": ""e4bd3ca400b386b3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e4bd3ca400b386b3_89628897""]}"
genomevault/pir/examples/integration_demo.py,332,332,0,,missing_symbol,2,1.00,Reference to undefined symbol 'timing_variance',,"{""context"": ""demonstrate_security_features"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_370805d975f7135a_ec524a48"", ""content_hash"": ""370805d975f7135a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/security/headers.py,45,45,0,,missing_symbol,2,1.00,Reference to undefined symbol 'allow_origins',,"{""context"": ""register_security"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_7daf110807db0a58_7e04300d"", ""content_hash"": ""7daf110807db0a58"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_7daf110807db0a58_29bef9bc"", ""TC_missing_symbol_7daf110807db0a58_76891f1b""]}"
genomevault/security/headers.py,48,48,0,,missing_symbol,2,1.00,Reference to undefined symbol 'allow_origins',,"{""context"": ""register_security"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_7daf110807db0a58_91af654b"", ""content_hash"": ""7daf110807db0a58"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_7daf110807db0a58_29bef9bc"", ""TC_missing_symbol_7daf110807db0a58_76891f1b"", ""TC_missing_symbol_7daf110807db0a58_7e04300d""]}"
genomevault/security/rate_limit.py,50,50,0,,missing_symbol,2,1.00,Reference to undefined symbol 'rate',,"{""context"": ""__init__"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_cf5a9c7e1c9647c0_436afd90"", ""content_hash"": ""cf5a9c7e1c9647c0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_cf5a9c7e1c9647c0_cbb94f43"", ""TC_missing_symbol_cf5a9c7e1c9647c0_b7d36764"", ""TC_missing_symbol_cf5a9c7e1c9647c0_6d7d9562"", ""TC_missing_symbol_cf5a9c7e1c9647c0_dfd4afba"", ""TC_missing_symbol_cf5a9c7e1c9647c0_6f1e5149"", ""TC_missing_symbol_cf5a9c7e1c9647c0_5feac25c"", ""TC_missing_symbol_cf5a9c7e1c9647c0_955a243b"", ""TC_missing_symbol_cf5a9c7e1c9647c0_58407f95""]}"
genomevault/security/rate_limit.py,51,51,0,,missing_symbol,2,1.00,Reference to undefined symbol 'burst',,"{""context"": ""__init__"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_cf5a9c7e1c9647c0_fc8f3d1a"", ""content_hash"": ""cf5a9c7e1c9647c0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_cf5a9c7e1c9647c0_cbb94f43"", ""TC_missing_symbol_cf5a9c7e1c9647c0_b7d36764"", ""TC_missing_symbol_cf5a9c7e1c9647c0_6d7d9562"", ""TC_missing_symbol_cf5a9c7e1c9647c0_dfd4afba"", ""TC_missing_symbol_cf5a9c7e1c9647c0_6f1e5149"", ""TC_missing_symbol_cf5a9c7e1c9647c0_5feac25c"", ""TC_missing_symbol_cf5a9c7e1c9647c0_955a243b"", ""TC_missing_symbol_cf5a9c7e1c9647c0_58407f95"", ""TC_missing_symbol_cf5a9c7e1c9647c0_436afd90""]}"
genomevault/utils/backup.py,80,80,0,,missing_symbol,2,1.00,Reference to undefined symbol '_compressed_data',,"{""context"": ""create_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_4372cfacea1428bc_0119ebe2"", ""content_hash"": ""4372cfacea1428bc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/backup.py,84,84,0,,missing_symbol,2,1.00,Reference to undefined symbol 'backup_id',,"{""context"": ""create_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_4372cfacea1428bc_68462fda"", ""content_hash"": ""4372cfacea1428bc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_4372cfacea1428bc_0119ebe2""]}"
genomevault/utils/backup.py,95,95,0,,missing_symbol,2,1.00,Reference to undefined symbol '_backup_id',,"{""context"": ""create_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_4372cfacea1428bc_022fe582"", ""content_hash"": ""4372cfacea1428bc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_4372cfacea1428bc_0119ebe2"", ""TC_missing_symbol_4372cfacea1428bc_68462fda""]}"
genomevault/utils/backup.py,95,95,0,,missing_symbol,2,1.00,Reference to undefined symbol '_backup_package',,"{""context"": ""create_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_4372cfacea1428bc_022fe582"", ""content_hash"": ""4372cfacea1428bc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_4372cfacea1428bc_0119ebe2"", ""TC_missing_symbol_4372cfacea1428bc_68462fda""]}"
genomevault/utils/backup.py,99,99,0,,missing_symbol,2,1.00,Reference to undefined symbol 'backup_id',,"{""context"": ""create_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_4372cfacea1428bc_0eea5e7c"", ""content_hash"": ""4372cfacea1428bc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_4372cfacea1428bc_0119ebe2"", ""TC_missing_symbol_4372cfacea1428bc_68462fda"", ""TC_missing_symbol_4372cfacea1428bc_022fe582""]}"
genomevault/utils/backup.py,99,99,0,,missing_symbol,2,1.00,Reference to undefined symbol 'backup_package',,"{""context"": ""create_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_4372cfacea1428bc_0eea5e7c"", ""content_hash"": ""4372cfacea1428bc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_4372cfacea1428bc_0119ebe2"", ""TC_missing_symbol_4372cfacea1428bc_68462fda"", ""TC_missing_symbol_4372cfacea1428bc_022fe582""]}"
genomevault/utils/backup.py,102,102,0,,missing_symbol,2,1.00,Reference to undefined symbol 'backup_id',,"{""context"": ""create_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_4372cfacea1428bc_76b45e81"", ""content_hash"": ""4372cfacea1428bc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_4372cfacea1428bc_0119ebe2"", ""TC_missing_symbol_4372cfacea1428bc_68462fda"", ""TC_missing_symbol_4372cfacea1428bc_022fe582"", ""TC_missing_symbol_4372cfacea1428bc_0eea5e7c""]}"
genomevault/utils/backup.py,107,107,0,,missing_symbol,2,1.00,Reference to undefined symbol 'backup_id',,"{""context"": ""create_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_4372cfacea1428bc_77955adb"", ""content_hash"": ""4372cfacea1428bc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_4372cfacea1428bc_0119ebe2"", ""TC_missing_symbol_4372cfacea1428bc_68462fda"", ""TC_missing_symbol_4372cfacea1428bc_022fe582"", ""TC_missing_symbol_4372cfacea1428bc_0eea5e7c"", ""TC_missing_symbol_4372cfacea1428bc_76b45e81""]}"
genomevault/utils/backup.py,109,109,0,,missing_symbol,2,1.00,Reference to undefined symbol '_encrypted_data',,"{""context"": ""create_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_4372cfacea1428bc_be75cca3"", ""content_hash"": ""4372cfacea1428bc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_4372cfacea1428bc_0119ebe2"", ""TC_missing_symbol_4372cfacea1428bc_68462fda"", ""TC_missing_symbol_4372cfacea1428bc_022fe582"", ""TC_missing_symbol_4372cfacea1428bc_0eea5e7c"", ""TC_missing_symbol_4372cfacea1428bc_76b45e81"", ""TC_missing_symbol_4372cfacea1428bc_77955adb""]}"
genomevault/utils/backup.py,115,115,0,,missing_symbol,2,1.00,Reference to undefined symbol '_backup_id',,"{""context"": ""create_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_4372cfacea1428bc_5f67e19b"", ""content_hash"": ""4372cfacea1428bc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_4372cfacea1428bc_0119ebe2"", ""TC_missing_symbol_4372cfacea1428bc_68462fda"", ""TC_missing_symbol_4372cfacea1428bc_022fe582"", ""TC_missing_symbol_4372cfacea1428bc_0eea5e7c"", ""TC_missing_symbol_4372cfacea1428bc_76b45e81"", ""TC_missing_symbol_4372cfacea1428bc_77955adb"", ""TC_missing_symbol_4372cfacea1428bc_be75cca3""]}"
genomevault/utils/backup.py,120,120,0,,missing_symbol,2,1.00,Reference to undefined symbol 'backup_id',,"{""context"": ""create_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_4372cfacea1428bc_a20049d3"", ""content_hash"": ""4372cfacea1428bc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_4372cfacea1428bc_0119ebe2"", ""TC_missing_symbol_4372cfacea1428bc_68462fda"", ""TC_missing_symbol_4372cfacea1428bc_022fe582"", ""TC_missing_symbol_4372cfacea1428bc_0eea5e7c"", ""TC_missing_symbol_4372cfacea1428bc_76b45e81"", ""TC_missing_symbol_4372cfacea1428bc_77955adb"", ""TC_missing_symbol_4372cfacea1428bc_be75cca3"", ""TC_missing_symbol_4372cfacea1428bc_5f67e19b""]}"
genomevault/utils/backup.py,135,135,0,,missing_symbol,2,1.00,Reference to undefined symbol '_backup_package',,"{""context"": ""restore_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_47485b6cac9206b0_e0ea6164"", ""content_hash"": ""47485b6cac9206b0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/backup.py,140,140,0,,missing_symbol,2,1.00,Reference to undefined symbol '_backup_package',,"{""context"": ""restore_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_47485b6cac9206b0_c3a46098"", ""content_hash"": ""47485b6cac9206b0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_47485b6cac9206b0_e0ea6164""]}"
genomevault/utils/backup.py,151,151,0,,missing_symbol,2,1.00,Reference to undefined symbol '_backup_package',,"{""context"": ""restore_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_47485b6cac9206b0_6ce4510f"", ""content_hash"": ""47485b6cac9206b0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_47485b6cac9206b0_e0ea6164"", ""TC_missing_symbol_47485b6cac9206b0_c3a46098""]}"
genomevault/utils/backup.py,202,202,0,,missing_symbol,2,1.00,Reference to undefined symbol 'backups',,"{""context"": ""list_backups"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_0de03ceaa99b80d8_434bb298"", ""content_hash"": ""0de03ceaa99b80d8"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/backup.py,210,210,0,,missing_symbol,2,1.00,Reference to undefined symbol '_backup_package',,"{""context"": ""verify_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_9d3bdc3564f29c79_31def044"", ""content_hash"": ""9d3bdc3564f29c79"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/backup.py,214,214,0,,missing_symbol,2,1.00,Reference to undefined symbol '_backup_package',,"{""context"": ""verify_backup"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_9d3bdc3564f29c79_d65d06cc"", ""content_hash"": ""9d3bdc3564f29c79"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_9d3bdc3564f29c79_31def044""]}"
genomevault/utils/backup.py,241,241,0,,missing_symbol,2,1.00,Reference to undefined symbol 'removed_count',,"{""context"": ""cleanup_old_backups"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_086a741869a9f3a2_a281030f"", ""content_hash"": ""086a741869a9f3a2"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/backup.py,245,245,0,,missing_symbol,2,1.00,Reference to undefined symbol 'removed_count',,"{""context"": ""cleanup_old_backups"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_086a741869a9f3a2_6c1cd3d6"", ""content_hash"": ""086a741869a9f3a2"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_086a741869a9f3a2_a281030f""]}"
genomevault/utils/backup.py,265,265,0,,missing_symbol,2,1.00,Reference to undefined symbol '_data_provider',,"{""context"": ""run_scheduled_backup"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_3d3908f34e0f9fc7_536faff4"", ""content_hash"": ""3d3908f34e0f9fc7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/monitoring.py,29,29,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Histogram',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/monitoring.py,35,35,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Counter',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67""]}"
genomevault/utils/monitoring.py,42,42,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Counter',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1""]}"
genomevault/utils/monitoring.py,48,48,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Gauge',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13""]}"
genomevault/utils/monitoring.py,55,55,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Histogram',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b""]}"
genomevault/utils/monitoring.py,61,61,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Histogram',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_121be8ea"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269""]}"
genomevault/utils/monitoring.py,67,67,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Histogram',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_06fce5c4"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269"", ""TC_missing_symbol_e10aaabacaa9d82a_121be8ea""]}"
genomevault/utils/monitoring.py,74,74,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Histogram',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_11e67f97"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269"", ""TC_missing_symbol_e10aaabacaa9d82a_121be8ea"", ""TC_missing_symbol_e10aaabacaa9d82a_06fce5c4""]}"
genomevault/utils/monitoring.py,80,80,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Gauge',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_f8e0a824"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269"", ""TC_missing_symbol_e10aaabacaa9d82a_121be8ea"", ""TC_missing_symbol_e10aaabacaa9d82a_06fce5c4"", ""TC_missing_symbol_e10aaabacaa9d82a_11e67f97""]}"
genomevault/utils/monitoring.py,85,85,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Gauge',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_efd60af9"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269"", ""TC_missing_symbol_e10aaabacaa9d82a_121be8ea"", ""TC_missing_symbol_e10aaabacaa9d82a_06fce5c4"", ""TC_missing_symbol_e10aaabacaa9d82a_11e67f97"", ""TC_missing_symbol_e10aaabacaa9d82a_f8e0a824""]}"
genomevault/utils/monitoring.py,92,92,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Histogram',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_ff72b4df"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269"", ""TC_missing_symbol_e10aaabacaa9d82a_121be8ea"", ""TC_missing_symbol_e10aaabacaa9d82a_06fce5c4"", ""TC_missing_symbol_e10aaabacaa9d82a_11e67f97"", ""TC_missing_symbol_e10aaabacaa9d82a_f8e0a824"", ""TC_missing_symbol_e10aaabacaa9d82a_efd60af9""]}"
genomevault/utils/monitoring.py,96,96,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Gauge',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_97b76542"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269"", ""TC_missing_symbol_e10aaabacaa9d82a_121be8ea"", ""TC_missing_symbol_e10aaabacaa9d82a_06fce5c4"", ""TC_missing_symbol_e10aaabacaa9d82a_11e67f97"", ""TC_missing_symbol_e10aaabacaa9d82a_f8e0a824"", ""TC_missing_symbol_e10aaabacaa9d82a_efd60af9"", ""TC_missing_symbol_e10aaabacaa9d82a_ff72b4df""]}"
genomevault/utils/monitoring.py,102,102,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Counter',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_461e7c12"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269"", ""TC_missing_symbol_e10aaabacaa9d82a_121be8ea"", ""TC_missing_symbol_e10aaabacaa9d82a_06fce5c4"", ""TC_missing_symbol_e10aaabacaa9d82a_11e67f97"", ""TC_missing_symbol_e10aaabacaa9d82a_f8e0a824"", ""TC_missing_symbol_e10aaabacaa9d82a_efd60af9"", ""TC_missing_symbol_e10aaabacaa9d82a_ff72b4df"", ""TC_missing_symbol_e10aaabacaa9d82a_97b76542""]}"
genomevault/utils/monitoring.py,106,106,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Counter',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_f7ed3097"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269"", ""TC_missing_symbol_e10aaabacaa9d82a_121be8ea"", ""TC_missing_symbol_e10aaabacaa9d82a_06fce5c4"", ""TC_missing_symbol_e10aaabacaa9d82a_11e67f97"", ""TC_missing_symbol_e10aaabacaa9d82a_f8e0a824"", ""TC_missing_symbol_e10aaabacaa9d82a_efd60af9"", ""TC_missing_symbol_e10aaabacaa9d82a_ff72b4df"", ""TC_missing_symbol_e10aaabacaa9d82a_97b76542"", ""TC_missing_symbol_e10aaabacaa9d82a_461e7c12""]}"
genomevault/utils/monitoring.py,113,113,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Gauge',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_77eb9b21"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269"", ""TC_missing_symbol_e10aaabacaa9d82a_121be8ea"", ""TC_missing_symbol_e10aaabacaa9d82a_06fce5c4"", ""TC_missing_symbol_e10aaabacaa9d82a_11e67f97"", ""TC_missing_symbol_e10aaabacaa9d82a_f8e0a824"", ""TC_missing_symbol_e10aaabacaa9d82a_efd60af9"", ""TC_missing_symbol_e10aaabacaa9d82a_ff72b4df"", ""TC_missing_symbol_e10aaabacaa9d82a_97b76542"", ""TC_missing_symbol_e10aaabacaa9d82a_461e7c12"", ""TC_missing_symbol_e10aaabacaa9d82a_f7ed3097""]}"
genomevault/utils/monitoring.py,119,119,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Counter',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_77c537d9"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269"", ""TC_missing_symbol_e10aaabacaa9d82a_121be8ea"", ""TC_missing_symbol_e10aaabacaa9d82a_06fce5c4"", ""TC_missing_symbol_e10aaabacaa9d82a_11e67f97"", ""TC_missing_symbol_e10aaabacaa9d82a_f8e0a824"", ""TC_missing_symbol_e10aaabacaa9d82a_efd60af9"", ""TC_missing_symbol_e10aaabacaa9d82a_ff72b4df"", ""TC_missing_symbol_e10aaabacaa9d82a_97b76542"", ""TC_missing_symbol_e10aaabacaa9d82a_461e7c12"", ""TC_missing_symbol_e10aaabacaa9d82a_f7ed3097"", ""TC_missing_symbol_e10aaabacaa9d82a_77eb9b21""]}"
genomevault/utils/monitoring.py,126,126,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Gauge',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_1d02f46a"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269"", ""TC_missing_symbol_e10aaabacaa9d82a_121be8ea"", ""TC_missing_symbol_e10aaabacaa9d82a_06fce5c4"", ""TC_missing_symbol_e10aaabacaa9d82a_11e67f97"", ""TC_missing_symbol_e10aaabacaa9d82a_f8e0a824"", ""TC_missing_symbol_e10aaabacaa9d82a_efd60af9"", ""TC_missing_symbol_e10aaabacaa9d82a_ff72b4df"", ""TC_missing_symbol_e10aaabacaa9d82a_97b76542"", ""TC_missing_symbol_e10aaabacaa9d82a_461e7c12"", ""TC_missing_symbol_e10aaabacaa9d82a_f7ed3097"", ""TC_missing_symbol_e10aaabacaa9d82a_77eb9b21"", ""TC_missing_symbol_e10aaabacaa9d82a_77c537d9""]}"
genomevault/utils/monitoring.py,132,132,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Counter',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_9df3655b"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269"", ""TC_missing_symbol_e10aaabacaa9d82a_121be8ea"", ""TC_missing_symbol_e10aaabacaa9d82a_06fce5c4"", ""TC_missing_symbol_e10aaabacaa9d82a_11e67f97"", ""TC_missing_symbol_e10aaabacaa9d82a_f8e0a824"", ""TC_missing_symbol_e10aaabacaa9d82a_efd60af9"", ""TC_missing_symbol_e10aaabacaa9d82a_ff72b4df"", ""TC_missing_symbol_e10aaabacaa9d82a_97b76542"", ""TC_missing_symbol_e10aaabacaa9d82a_461e7c12"", ""TC_missing_symbol_e10aaabacaa9d82a_f7ed3097"", ""TC_missing_symbol_e10aaabacaa9d82a_77eb9b21"", ""TC_missing_symbol_e10aaabacaa9d82a_77c537d9"", ""TC_missing_symbol_e10aaabacaa9d82a_1d02f46a""]}"
genomevault/utils/monitoring.py,139,139,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Gauge',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_307575bd"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269"", ""TC_missing_symbol_e10aaabacaa9d82a_121be8ea"", ""TC_missing_symbol_e10aaabacaa9d82a_06fce5c4"", ""TC_missing_symbol_e10aaabacaa9d82a_11e67f97"", ""TC_missing_symbol_e10aaabacaa9d82a_f8e0a824"", ""TC_missing_symbol_e10aaabacaa9d82a_efd60af9"", ""TC_missing_symbol_e10aaabacaa9d82a_ff72b4df"", ""TC_missing_symbol_e10aaabacaa9d82a_97b76542"", ""TC_missing_symbol_e10aaabacaa9d82a_461e7c12"", ""TC_missing_symbol_e10aaabacaa9d82a_f7ed3097"", ""TC_missing_symbol_e10aaabacaa9d82a_77eb9b21"", ""TC_missing_symbol_e10aaabacaa9d82a_77c537d9"", ""TC_missing_symbol_e10aaabacaa9d82a_1d02f46a"", ""TC_missing_symbol_e10aaabacaa9d82a_9df3655b""]}"
genomevault/utils/monitoring.py,141,141,0,,missing_symbol,2,1.00,Reference to undefined symbol '_Gauge',,"{""context"": ""__init__"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e10aaabacaa9d82a_2c15fe11"", ""content_hash"": ""e10aaabacaa9d82a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e10aaabacaa9d82a_e42dfc67"", ""TC_missing_symbol_e10aaabacaa9d82a_329da1f1"", ""TC_missing_symbol_e10aaabacaa9d82a_16b69d13"", ""TC_missing_symbol_e10aaabacaa9d82a_f3053f2b"", ""TC_missing_symbol_e10aaabacaa9d82a_08f3f269"", ""TC_missing_symbol_e10aaabacaa9d82a_121be8ea"", ""TC_missing_symbol_e10aaabacaa9d82a_06fce5c4"", ""TC_missing_symbol_e10aaabacaa9d82a_11e67f97"", ""TC_missing_symbol_e10aaabacaa9d82a_f8e0a824"", ""TC_missing_symbol_e10aaabacaa9d82a_efd60af9"", ""TC_missing_symbol_e10aaabacaa9d82a_ff72b4df"", ""TC_missing_symbol_e10aaabacaa9d82a_97b76542"", ""TC_missing_symbol_e10aaabacaa9d82a_461e7c12"", ""TC_missing_symbol_e10aaabacaa9d82a_f7ed3097"", ""TC_missing_symbol_e10aaabacaa9d82a_77eb9b21"", ""TC_missing_symbol_e10aaabacaa9d82a_77c537d9"", ""TC_missing_symbol_e10aaabacaa9d82a_1d02f46a"", ""TC_missing_symbol_e10aaabacaa9d82a_9df3655b"", ""TC_missing_symbol_e10aaabacaa9d82a_307575bd""]}"
genomevault/utils/post_quantum_crypto.py,111,111,0,,missing_symbol,2,1.00,Reference to undefined symbol '_ciphertext',,"{""context"": ""encrypt"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_d93b36c183016609_4c217a18"", ""content_hash"": ""d93b36c183016609"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_d93b36c183016609_0fac876e"", ""TC_missing_symbol_d93b36c183016609_711211a1""]}"
genomevault/utils/post_quantum_crypto.py,115,115,0,,missing_symbol,2,1.00,Reference to undefined symbol '_encapsulated',,"{""context"": ""encrypt"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_d93b36c183016609_0fac876e"", ""content_hash"": ""d93b36c183016609"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_d93b36c183016609_711211a1"", ""TC_missing_symbol_d93b36c183016609_4c217a18""]}"
genomevault/utils/post_quantum_crypto.py,116,116,0,,missing_symbol,2,1.00,Reference to undefined symbol '_signature',,"{""context"": ""encrypt"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_d93b36c183016609_711211a1"", ""content_hash"": ""d93b36c183016609"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_d93b36c183016609_4c217a18"", ""TC_missing_symbol_d93b36c183016609_0fac876e""]}"
genomevault/utils/post_quantum_crypto.py,135,135,0,,missing_symbol,2,1.00,Reference to undefined symbol '_start',,"{""context"": ""benchmark_post_quantum_crypto"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_1f86aa7a03097fcc_23d809d8"", ""content_hash"": ""1f86aa7a03097fcc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_1f86aa7a03097fcc_48a6b333"", ""TC_missing_symbol_1f86aa7a03097fcc_a271ad9c"", ""TC_missing_symbol_1f86aa7a03097fcc_0a7825e5"", ""TC_missing_symbol_1f86aa7a03097fcc_2ff48276"", ""TC_missing_symbol_1f86aa7a03097fcc_a5ee0eb3""]}"
genomevault/utils/post_quantum_crypto.py,139,139,0,,missing_symbol,2,1.00,Reference to undefined symbol '_plaintext',,"{""context"": ""benchmark_post_quantum_crypto"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_1f86aa7a03097fcc_48a6b333"", ""content_hash"": ""1f86aa7a03097fcc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_1f86aa7a03097fcc_a271ad9c"", ""TC_missing_symbol_1f86aa7a03097fcc_0a7825e5"", ""TC_missing_symbol_1f86aa7a03097fcc_2ff48276"", ""TC_missing_symbol_1f86aa7a03097fcc_a5ee0eb3"", ""TC_missing_symbol_1f86aa7a03097fcc_23d809d8""]}"
genomevault/utils/post_quantum_crypto.py,139,139,0,,missing_symbol,2,1.00,Reference to undefined symbol '_keypair',,"{""context"": ""benchmark_post_quantum_crypto"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_1f86aa7a03097fcc_48a6b333"", ""content_hash"": ""1f86aa7a03097fcc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_1f86aa7a03097fcc_a271ad9c"", ""TC_missing_symbol_1f86aa7a03097fcc_0a7825e5"", ""TC_missing_symbol_1f86aa7a03097fcc_2ff48276"", ""TC_missing_symbol_1f86aa7a03097fcc_a5ee0eb3"", ""TC_missing_symbol_1f86aa7a03097fcc_23d809d8""]}"
genomevault/utils/post_quantum_crypto.py,140,140,0,,missing_symbol,2,1.00,Reference to undefined symbol '_start',,"{""context"": ""benchmark_post_quantum_crypto"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_1f86aa7a03097fcc_a271ad9c"", ""content_hash"": ""1f86aa7a03097fcc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_1f86aa7a03097fcc_0a7825e5"", ""TC_missing_symbol_1f86aa7a03097fcc_2ff48276"", ""TC_missing_symbol_1f86aa7a03097fcc_a5ee0eb3"", ""TC_missing_symbol_1f86aa7a03097fcc_23d809d8"", ""TC_missing_symbol_1f86aa7a03097fcc_48a6b333""]}"
genomevault/utils/post_quantum_crypto.py,144,144,0,,missing_symbol,2,1.00,Reference to undefined symbol '_keypair',,"{""context"": ""benchmark_post_quantum_crypto"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_1f86aa7a03097fcc_0a7825e5"", ""content_hash"": ""1f86aa7a03097fcc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_1f86aa7a03097fcc_2ff48276"", ""TC_missing_symbol_1f86aa7a03097fcc_a5ee0eb3"", ""TC_missing_symbol_1f86aa7a03097fcc_23d809d8"", ""TC_missing_symbol_1f86aa7a03097fcc_48a6b333"", ""TC_missing_symbol_1f86aa7a03097fcc_a271ad9c""]}"
genomevault/utils/post_quantum_crypto.py,145,145,0,,missing_symbol,2,1.00,Reference to undefined symbol '_start',,"{""context"": ""benchmark_post_quantum_crypto"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_1f86aa7a03097fcc_2ff48276"", ""content_hash"": ""1f86aa7a03097fcc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_1f86aa7a03097fcc_a5ee0eb3"", ""TC_missing_symbol_1f86aa7a03097fcc_23d809d8"", ""TC_missing_symbol_1f86aa7a03097fcc_48a6b333"", ""TC_missing_symbol_1f86aa7a03097fcc_a271ad9c"", ""TC_missing_symbol_1f86aa7a03097fcc_0a7825e5""]}"
genomevault/utils/post_quantum_crypto.py,153,153,0,,missing_symbol,2,1.00,Reference to undefined symbol '_plaintext',,"{""context"": ""benchmark_post_quantum_crypto"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_1f86aa7a03097fcc_a5ee0eb3"", ""content_hash"": ""1f86aa7a03097fcc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_1f86aa7a03097fcc_23d809d8"", ""TC_missing_symbol_1f86aa7a03097fcc_48a6b333"", ""TC_missing_symbol_1f86aa7a03097fcc_a271ad9c"", ""TC_missing_symbol_1f86aa7a03097fcc_0a7825e5"", ""TC_missing_symbol_1f86aa7a03097fcc_2ff48276""]}"
genomevault/utils/post_quantum_crypto.py,172,172,0,,missing_symbol,2,1.00,Reference to undefined symbol '_genomic_data',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059"", ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""TC_missing_symbol_b6b5203270481309_45c166de""]}"
genomevault/utils/post_quantum_crypto.py,172,172,0,,missing_symbol,2,1.00,Reference to undefined symbol '_recipient_keypair',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059"", ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""TC_missing_symbol_b6b5203270481309_45c166de""]}"
genomevault/utils/post_quantum_crypto.py,176,176,0,,missing_symbol,2,1.00,Reference to undefined symbol '_recipient_keypair',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_19b34551"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059"", ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""TC_missing_symbol_b6b5203270481309_45c166de"", ""TC_missing_symbol_b6b5203270481309_79239cb9""]}"
genomevault/utils/post_quantum_crypto.py,177,177,0,,missing_symbol,2,1.00,Reference to undefined symbol '_genomic_data',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059"", ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""TC_missing_symbol_b6b5203270481309_45c166de"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551""]}"
genomevault/utils/security_monitor.py,511,511,0,,missing_symbol,2,1.00,Reference to undefined symbol '_datetime',,"{""context"": ""get_compliance_report"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_bc9ddd1beda378a9_435d7ba0"", ""content_hash"": ""bc9ddd1beda378a9"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk/engine.py,76,76,0,,missing_symbol,2,1.00,Reference to undefined symbol 'inputs',,"{""context"": ""create_proof"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_309c811f6198f359_791d1934"", ""content_hash"": ""309c811f6198f359"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_309c811f6198f359_a25e5c7b"", ""TC_missing_symbol_309c811f6198f359_eab64c99"", ""TC_missing_symbol_309c811f6198f359_1f53e780""]}"
genomevault/zk/real_engine.py,193,193,0,,missing_symbol,2,1.00,Reference to undefined symbol 'inputs',,"{""context"": ""create_proof"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_309c811f6198f359_209bbffa"", ""content_hash"": ""309c811f6198f359"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_309c811f6198f359_a25e5c7b"", ""TC_missing_symbol_309c811f6198f359_eab64c99"", ""TC_missing_symbol_309c811f6198f359_1f53e780"", ""TC_missing_symbol_309c811f6198f359_791d1934""]}"
genomevault/zk/real_engine.py,223,223,0,,missing_symbol,2,1.00,Reference to undefined symbol 'inputs',,"{""context"": ""create_proof"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_309c811f6198f359_d8e3bab8"", ""content_hash"": ""309c811f6198f359"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_309c811f6198f359_a25e5c7b"", ""TC_missing_symbol_309c811f6198f359_eab64c99"", ""TC_missing_symbol_309c811f6198f359_1f53e780"", ""TC_missing_symbol_309c811f6198f359_791d1934"", ""TC_missing_symbol_309c811f6198f359_209bbffa""]}"
genomevault/zk_proofs/advanced/test_merkle_fix.py,12,12,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_7feb5d87"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059"", ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""TC_missing_symbol_b6b5203270481309_45c166de"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec""]}"
genomevault/zk_proofs/advanced/test_merkle_fix.py,18,18,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_fcce2ee5"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059"", ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""TC_missing_symbol_b6b5203270481309_45c166de"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_7feb5d87""]}"
genomevault/zk_proofs/examples/integration_demo.py,15,15,0,,missing_symbol,2,1.00,Reference to undefined symbol '_get_logger',,"{""context"": ""<module>"", ""node_type"": ""call"", ""stable_id"": ""TC_missing_symbol_e6cce47897712c2a_5e4a3eec"", ""content_hash"": ""e6cce47897712c2a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_e6cce47897712c2a_98f80e93"", ""TC_missing_symbol_e6cce47897712c2a_6aa0bc46"", ""TC_missing_symbol_e6cce47897712c2a_a93e66f1"", ""TC_missing_symbol_e6cce47897712c2a_0914eb4f"", ""TC_missing_symbol_e6cce47897712c2a_ec7f08c0"", ""TC_missing_symbol_e6cce47897712c2a_45c166de""]}"
scripts/bench.py,251,251,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""run_all"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_4f429b9d94772a6d_1c5cc4b6"", ""content_hash"": ""4f429b9d94772a6d"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/organize_documentation.py,11,11,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059"", ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""TC_missing_symbol_b6b5203270481309_45c166de"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_7feb5d87"", ""TC_missing_symbol_b6b5203270481309_fcce2ee5""]}"
scripts/test_logging_config.py,11,11,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059"", ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""TC_missing_symbol_b6b5203270481309_45c166de"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_7feb5d87"", ""TC_missing_symbol_b6b5203270481309_fcce2ee5"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb""]}"
scripts/test_stub_fixes.py,9,9,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_34780b89"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059"", ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""TC_missing_symbol_b6b5203270481309_45c166de"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_7feb5d87"", ""TC_missing_symbol_b6b5203270481309_fcce2ee5"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267""]}"
scripts/test_zk_system.py,9,9,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_dc4a1a4e"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059"", ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""TC_missing_symbol_b6b5203270481309_45c166de"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_7feb5d87"", ""TC_missing_symbol_b6b5203270481309_fcce2ee5"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89""]}"
setup.py,10,10,0,,missing_symbol,2,1.00,Reference to undefined symbol '__file__',,"{""context"": ""<module>"", ""node_type"": ""name"", ""stable_id"": ""TC_missing_symbol_b6b5203270481309_f31137ca"", ""content_hash"": ""b6b5203270481309"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_missing_symbol_b6b5203270481309_084d8e68"", ""TC_missing_symbol_b6b5203270481309_ac353c34"", ""TC_missing_symbol_b6b5203270481309_94899e49"", ""TC_missing_symbol_b6b5203270481309_6f8a3c7e"", ""TC_missing_symbol_b6b5203270481309_5c3d9de2"", ""TC_missing_symbol_b6b5203270481309_daaf1566"", ""TC_missing_symbol_b6b5203270481309_1acea495"", ""TC_missing_symbol_b6b5203270481309_780c3650"", ""TC_missing_symbol_b6b5203270481309_f6aa3059"", ""TC_missing_symbol_b6b5203270481309_bbe4bd48"", ""TC_missing_symbol_b6b5203270481309_45c166de"", ""TC_missing_symbol_b6b5203270481309_79239cb9"", ""TC_missing_symbol_b6b5203270481309_19b34551"", ""TC_missing_symbol_b6b5203270481309_49bc10ec"", ""TC_missing_symbol_b6b5203270481309_7feb5d87"", ""TC_missing_symbol_b6b5203270481309_fcce2ee5"", ""TC_missing_symbol_b6b5203270481309_df6ecdeb"", ""TC_missing_symbol_b6b5203270481309_43d5c267"", ""TC_missing_symbol_b6b5203270481309_34780b89"", ""TC_missing_symbol_b6b5203270481309_dc4a1a4e""]}"
genomevault/api/app.py,0,0,0,,tail_chasing_chain,3,1.00,Suspicious chain of 3 fixes in 3 file(s) over 4 hours - possible tail-chasing,,"{""chain_length"": 3, ""commits"": [""2025-07-24: fix: Apply linting fixes for HDC error handling"", ""2025-07-24: fix: Fix syntax error in app.py and format genomic"", ""2025-07-24: fix: Fix import ordering in app.py with isort""], ""affected_files"": [""genomevault/core/constants.py"", ""genomevault/hypervector/encoding/genomic.py"", ""genomevault/api/app.py""], ""duration"": ""4 hours"", ""patterns_found"": [""fix import"", ""fix...error""], ""stable_id"": ""TC_tail_chasing_chain_9370072286cdd189_92c80a45"", ""content_hash"": ""9370072286cdd189"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/analyze_old_scripts.py,67,67,0,,semantic_hv_exact,3,1.00,Exact hypervector match: referenced identical to referenced in analyze_root_files.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/devtools/analyze_old_scripts.py:67 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/devtools/analyze_root_files.py:113"", ""function_name"": ""referenced"", ""duplicate_name"": ""referenced"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_c1506afe9982513c_b1e35c62"", ""content_hash"": ""c1506afe9982513c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/analyze_old_scripts.py,76,76,0,,semantic_hv_exact,3,1.00,Exact hypervector match: last_commit_days identical to last_commit_days in analyze_root_files.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/devtools/analyze_old_scripts.py:76 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/devtools/analyze_root_files.py:84"", ""function_name"": ""last_commit_days"", ""duplicate_name"": ""last_commit_days"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_4e53a38a35cd8d21_4096666d"", ""content_hash"": ""4e53a38a35cd8d21"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/comprehensive_cleanup.py,778,778,0,,semantic_hv_exact,3,1.00,Exact hypervector match: main identical to main in enhanced_cleanup.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/devtools/comprehensive_cleanup.py:778 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/devtools/enhanced_cleanup.py:1374"", ""function_name"": ""main"", ""duplicate_name"": ""main"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_e64a99c7beb32315_41077da8"", ""content_hash"": ""e64a99c7beb32315"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/comprehensive_cleanup.py,33,33,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in genomevault_cleanup.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/devtools/comprehensive_cleanup.py:33 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/devtools/genomevault_cleanup.py:34"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_27a879fc695202ff_de92faed"", ""content_hash"": ""27a879fc695202ff"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/comprehensive_cleanup.py,38,38,0,,semantic_hv_exact,3,1.00,Exact hypervector match: log_fix identical to log_fix in focused_cleanup.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/devtools/comprehensive_cleanup.py:38 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/devtools/focused_cleanup.py:28"", ""function_name"": ""log_fix"", ""duplicate_name"": ""log_fix"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_ed6435fd3bb02170_f88e80c0"", ""content_hash"": ""ed6435fd3bb02170"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/setup_dev.py,59,59,0,,semantic_hv_exact,3,1.00,Exact hypervector match: print_error identical to print_header in setup_dev.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/devtools/setup_dev.py:59 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/devtools/setup_dev.py:42"", ""function_name"": ""print_error"", ""duplicate_name"": ""print_header"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_35873afab35a0307_f6a57fc2"", ""content_hash"": ""35873afab35a0307"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/setup_dev.py,42,42,0,,semantic_hv_exact,3,1.00,Exact hypervector match: print_header identical to print_step in setup_dev.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/devtools/setup_dev.py:42 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/devtools/setup_dev.py:49"", ""function_name"": ""print_header"", ""duplicate_name"": ""print_step"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_7807ed39f290e841_c3fb1193"", ""content_hash"": ""7807ed39f290e841"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/setup_dev.py,49,49,0,,semantic_hv_exact,3,1.00,Exact hypervector match: print_step identical to print_success in setup_dev.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/devtools/setup_dev.py:49 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/devtools/setup_dev.py:54"", ""function_name"": ""print_step"", ""duplicate_name"": ""print_success"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_1048d8667c5f2d53_0b4e57b4"", ""content_hash"": ""1048d8667c5f2d53"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/setup_dev.py,54,54,0,,semantic_hv_exact,3,1.00,Exact hypervector match: print_success identical to print_warning in setup_dev.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/devtools/setup_dev.py:54 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/devtools/setup_dev.py:64"", ""function_name"": ""print_success"", ""duplicate_name"": ""print_warning"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_5a74eee8bcbd0c82_61785d45"", ""content_hash"": ""5a74eee8bcbd0c82"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/genomevault_cleanup.py,34,34,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in green_toolchain_impl.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/devtools/genomevault_cleanup.py:34 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/devtools/green_toolchain_impl.py:17"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_6694cdc881c0a38e_0c00ec59"", ""content_hash"": ""6694cdc881c0a38e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/proper_ruff_upgrade.py,16,16,0,,semantic_hv_duplicate,2,1.00,Semantic duplicate (HV): find_all_ruff similar to uninstall_old_ruff in proper_ruff_upgrade.py (similarity: 0.85),Review semantic_hv_duplicate issue at /Users/rohanvinaik/genomevault/devtools/proper_ruff_upgrade.py:16 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/devtools/proper_ruff_upgrade.py:35"", ""function_name"": ""find_all_ruff"", ""duplicate_name"": ""uninstall_old_ruff"", ""similarity"": 0.8509803921568627, ""match_type"": ""semantic"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_duplicate_b62aecf786dc4353_f93a05ab"", ""content_hash"": ""b62aecf786dc4353"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/proper_ruff_upgrade.py,167,167,0,,semantic_hv_exact,3,1.00,Exact hypervector match: update_ruff_config identical to update_ruff_config in upgrade_ruff.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/devtools/proper_ruff_upgrade.py:167 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/devtools/upgrade_ruff.py:59"", ""function_name"": ""update_ruff_config"", ""duplicate_name"": ""update_ruff_config"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_afec8b4453784f83_5a5d6813"", ""content_hash"": ""afec8b4453784f83"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/proper_ruff_upgrade.py,195,195,0,,semantic_hv_exact,3,1.00,Exact hypervector match: main identical to main in upgrade_ruff.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/devtools/proper_ruff_upgrade.py:195 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/devtools/upgrade_ruff.py:128"", ""function_name"": ""main"", ""duplicate_name"": ""main"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_2a5b0bbeeed3ea89_d16fb91f"", ""content_hash"": ""2a5b0bbeeed3ea89"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/advanced_analysis/federated_learning/client.py,446,446,0,,semantic_hv_exact,3,1.00,Exact hypervector match: load_state identical to save_state in client.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/advanced_analysis/federated_learning/client.py:446 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/advanced_analysis/federated_learning/client.py:432"", ""function_name"": ""load_state"", ""duplicate_name"": ""save_state"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_4b5cbd4e99783bd7_52fa890e"", ""content_hash"": ""4b5cbd4e99783bd7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/api/models/hv.py,197,197,0,,semantic_hv_exact,3,1.00,Exact hypervector match: validate_dimension identical to validate_dimension in hv.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/api/models/hv.py:197 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/api/models/hv.py:272"", ""function_name"": ""validate_dimension"", ""duplicate_name"": ""validate_dimension"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_bfbd9ac28dbfb6b4_7d1d19e5"", ""content_hash"": ""bfbd9ac28dbfb6b4"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/api/models/updates.py,15,15,0,,semantic_hv_exact,3,1.00,Exact hypervector match: dict_for_update identical to dict_for_update in vectors.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/api/models/updates.py:15 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/api/models/vectors.py:67"", ""function_name"": ""dict_for_update"", ""duplicate_name"": ""dict_for_update"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_21c7017659b4593f_543ef56d"", ""content_hash"": ""21c7017659b4593f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/api/routers/clinical.py,19,19,0,,semantic_hv_duplicate,2,1.00,Semantic duplicate (HV): clinical_eval similar to encode_vector in vectors.py (similarity: 0.93),Review semantic_hv_duplicate issue at /Users/rohanvinaik/genomevault/genomevault/api/routers/clinical.py:19 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/api/routers/vectors.py:24"", ""function_name"": ""clinical_eval"", ""duplicate_name"": ""encode_vector"", ""similarity"": 0.9264705882352942, ""match_type"": ""semantic"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_duplicate_d55b67c5959a5149_6ff40e25"", ""content_hash"": ""d55b67c5959a5149"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/api/routers/governance.py,17,17,0,,semantic_hv_exact,3,1.00,Exact hypervector match: consent_grant identical to consent_revoke in governance.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/api/routers/governance.py:17 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/api/routers/governance.py:37"", ""function_name"": ""consent_grant"", ""duplicate_name"": ""consent_revoke"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_2ddd2bf4e47f777f_aa8dc3fc"", ""content_hash"": ""2ddd2bf4e47f777f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/blockchain/contracts/training_attestation.py,341,341,0,,semantic_hv_exact,3,1.00,Exact hypervector match: add_verifier identical to remove_verifier in training_attestation.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/blockchain/contracts/training_attestation.py:341 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/blockchain/contracts/training_attestation.py:358"", ""function_name"": ""add_verifier"", ""duplicate_name"": ""remove_verifier"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_304c707a9b1013e9_954314c6"", ""content_hash"": ""304c707a9b1013e9"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/blockchain/contracts/training_attestation.py,379,379,0,,semantic_hv_exact,3,1.00,Exact hypervector match: pause_contract identical to unpause_contract in training_attestation.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/blockchain/contracts/training_attestation.py:379 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/blockchain/contracts/training_attestation.py:390"", ""function_name"": ""pause_contract"", ""duplicate_name"": ""unpause_contract"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_8c5743315520a61a_66c298fe"", ""content_hash"": ""8c5743315520a61a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/clinical/calibration/calibrators.py,123,123,0,,semantic_hv_exact,3,1.00,Exact hypervector match: predict_proba identical to predict_proba in calibrators.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/clinical/calibration/calibrators.py:123 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/clinical/calibration/calibrators.py:57"", ""function_name"": ""predict_proba"", ""duplicate_name"": ""predict_proba"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_c166cf9f535d69e9_83feb9ea"", ""content_hash"": ""c166cf9f535d69e9"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/clinical/diabetes_pilot/risk_calculator.py,103,103,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in risk_calculator.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/clinical/diabetes_pilot/risk_calculator.py:103 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/clinical/diabetes_pilot/risk_calculator.py:420"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_f956f77667dc0a5e_b081243a"", ""content_hash"": ""f956f77667dc0a5e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/clinical/diabetes_pilot/risk_calculator.py,482,482,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _extract_genetic_variants identical to _extract_glucose_readings in risk_calculator.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/clinical/diabetes_pilot/risk_calculator.py:482 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/clinical/diabetes_pilot/risk_calculator.py:502"", ""function_name"": ""_extract_genetic_variants"", ""duplicate_name"": ""_extract_glucose_readings"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_cb45d2fad75b193c_1b0f004a"", ""content_hash"": ""cb45d2fad75b193c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/config/logging_config.py,9,9,0,,semantic_hv_exact,3,1.00,Exact hypervector match: get_development_config identical to get_production_config in logging_config.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/config/logging_config.py:9 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/config/logging_config.py:21"", ""function_name"": ""get_development_config"", ""duplicate_name"": ""get_production_config"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_0f3877922a00b9f3_e5aec857"", ""content_hash"": ""0f3877922a00b9f3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/config/logging_config.py,21,21,0,,semantic_hv_exact,3,1.00,Exact hypervector match: get_production_config identical to get_staging_config in logging_config.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/config/logging_config.py:21 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/config/logging_config.py:45"", ""function_name"": ""get_production_config"", ""duplicate_name"": ""get_staging_config"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_c8c6992a21941a2e_3b9fe092"", ""content_hash"": ""c8c6992a21941a2e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/config/logging_config.py,45,45,0,,semantic_hv_exact,3,1.00,Exact hypervector match: get_staging_config identical to get_testing_config in logging_config.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/config/logging_config.py:45 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/config/logging_config.py:33"", ""function_name"": ""get_staging_config"", ""duplicate_name"": ""get_testing_config"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_819b52cd7b56fc28_aa7ddf14"", ""content_hash"": ""819b52cd7b56fc28"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/zk_circuits/stark_prover.py,63,63,0,,semantic_hv_exact,3,1.00,Exact hypervector match: append_u32 identical to append_u64 in stark_prover.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/experimental/zk_circuits/stark_prover.py:63 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/experimental/zk_circuits/stark_prover.py:67"", ""function_name"": ""append_u32"", ""duplicate_name"": ""append_u64"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_830bd6cbc6f8df40_94c80aa8"", ""content_hash"": ""830bd6cbc6f8df40"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/zk_circuits/test_training_proof.py,166,166,0,,semantic_hv_exact,3,1.00,Exact hypervector match: multi_modal_data identical to sample_training_data in test_training_proof.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/experimental/zk_circuits/test_training_proof.py:166 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/experimental/zk_circuits/test_training_proof.py:22"", ""function_name"": ""multi_modal_data"", ""duplicate_name"": ""sample_training_data"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_9148952fe628a735_1f513327"", ""content_hash"": ""9148952fe628a735"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector_transform/binding_operations.py,175,175,0,,semantic_hv_exact,3,1.00,Exact hypervector match: circular_bind identical to fourier_bind in binding_operations.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/hypervector_transform/binding_operations.py:175 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/hypervector_transform/binding_operations.py:193"", ""function_name"": ""circular_bind"", ""duplicate_name"": ""fourier_bind"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_68cc596f2dd12dca_feeb26f1"", ""content_hash"": ""68cc596f2dd12dca"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector_transform/binding.py,288,288,0,,semantic_hv_duplicate,2,1.00,Semantic duplicate (HV): protect similar to unprotect in binding.py (similarity: 0.91),Review semantic_hv_duplicate issue at /Users/rohanvinaik/genomevault/genomevault/hypervector_transform/binding.py:288 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/hypervector_transform/binding.py:301"", ""function_name"": ""protect"", ""duplicate_name"": ""unprotect"", ""similarity"": 0.9125364431486881, ""match_type"": ""semantic"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_duplicate_f1ad731ae17c012c_13c3a10a"", ""content_hash"": ""f1ad731ae17c012c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector_transform/hierarchical.py,231,231,0,,semantic_hv_exact,3,1.00,Exact hypervector match: forward identical to forward in hierarchical.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/hypervector_transform/hierarchical.py:231 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/hypervector_transform/hierarchical.py:348"", ""function_name"": ""forward"", ""duplicate_name"": ""forward"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_2f05865325dede4a_111ce38d"", ""content_hash"": ""2f05865325dede4a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector_transform/binding_operations.py,149,149,0,,semantic_hv_exact,3,1.00,Exact hypervector match: bind identical to superpose in binding_operations.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/hypervector_transform/binding_operations.py:149 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/hypervector_transform/binding_operations.py:162"", ""function_name"": ""bind"", ""duplicate_name"": ""superpose"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_713f33f410077696_144ab6e9"", ""content_hash"": ""713f33f410077696"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector_transform/hierarchical.py,179,179,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in hierarchical.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/hypervector_transform/hierarchical.py:179 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/hypervector_transform/hierarchical.py:338"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_ea11e15577f122ee_ae32acdd"", ""content_hash"": ""ea11e15577f122ee"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector_transform/hierarchical.py,250,250,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in hierarchical.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/hypervector_transform/hierarchical.py:250 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/hypervector_transform/hierarchical.py:338"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_ea11e15577f122ee_d3e26a7c"", ""content_hash"": ""ea11e15577f122ee"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_semantic_hv_exact_ea11e15577f122ee_ae32acdd""]}"
genomevault/hypervector_transform/hierarchical.py,287,287,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in hierarchical.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/hypervector_transform/hierarchical.py:287 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/hypervector_transform/hierarchical.py:338"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_ea11e15577f122ee_754203ea"", ""content_hash"": ""ea11e15577f122ee"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_semantic_hv_exact_ea11e15577f122ee_ae32acdd"", ""TC_semantic_hv_exact_ea11e15577f122ee_d3e26a7c""]}"
genomevault/hypervector_transform/mapping.py,353,353,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _chromatin_similarity identical to _pathway_similarity in mapping.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/hypervector_transform/mapping.py:353 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/hypervector_transform/mapping.py:335"", ""function_name"": ""_chromatin_similarity"", ""duplicate_name"": ""_pathway_similarity"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_4fb700cf7c1ac6a9_e6bfe73e"", ""content_hash"": ""4fb700cf7c1ac6a9"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector_transform/mapping.py,335,335,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _pathway_similarity identical to _structural_similarity in mapping.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/hypervector_transform/mapping.py:335 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/hypervector_transform/mapping.py:309"", ""function_name"": ""_pathway_similarity"", ""duplicate_name"": ""_structural_similarity"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_ea9fdc851e6b42e4_7b187954"", ""content_hash"": ""ea9fdc851e6b42e4"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector_transform/registry.py,697,697,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _migrate_dimension_expansion identical to _migrate_dimension_reduction in registry.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/hypervector_transform/registry.py:697 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/hypervector_transform/registry.py:676"", ""function_name"": ""_migrate_dimension_expansion"", ""duplicate_name"": ""_migrate_dimension_reduction"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_9e2112537cc114fd_184fde4d"", ""content_hash"": ""9e2112537cc114fd"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/common.py,25,25,0,,semantic_hv_duplicate,2,1.00,Semantic duplicate (HV): process similar to process in transcriptomics.py (similarity: 0.86),Review semantic_hv_duplicate issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/common.py:25 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/local_processing/transcriptomics.py:9"", ""function_name"": ""process"", ""duplicate_name"": ""process"", ""similarity"": 0.8638392857142857, ""match_type"": ""semantic"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_duplicate_a4c3a199729bc2af_95bca261"", ""content_hash"": ""a4c3a199729bc2af"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/phenotypes.py,162,162,0,,semantic_hv_exact,3,1.00,Exact hypervector match: to_dict identical to to_dict in phenotypes.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/phenotypes.py:162 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/local_processing/phenotypes.py:65"", ""function_name"": ""to_dict"", ""duplicate_name"": ""to_dict"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_185d2f41f0953a25_a9eb8faf"", ""content_hash"": ""185d2f41f0953a25"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/phenotypes.py,65,65,0,,semantic_hv_exact,3,1.00,Exact hypervector match: to_dict identical to to_dict in proteomics.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/phenotypes.py:65 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/local_processing/proteomics.py:70"", ""function_name"": ""to_dict"", ""duplicate_name"": ""to_dict"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_92d312d311e09b22_2f7e140a"", ""content_hash"": ""92d312d311e09b22"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/phenotypes.py,136,136,0,,semantic_hv_exact,3,1.00,Exact hypervector match: to_dict identical to to_dict in phenotypes.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/phenotypes.py:136 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/local_processing/phenotypes.py:65"", ""function_name"": ""to_dict"", ""duplicate_name"": ""to_dict"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_185d2f41f0953a25_7e7dd2a5"", ""content_hash"": ""185d2f41f0953a25"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_semantic_hv_exact_185d2f41f0953a25_a9eb8faf""]}"
genomevault/local_processing/drift_detection.py,526,526,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in drift_detection.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/drift_detection.py:526 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/local_processing/drift_detection.py:588"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_96bde96912a682fc_48a617a6"", ""content_hash"": ""96bde96912a682fc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/drift_detection.py,588,588,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in drift_detection.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/drift_detection.py:588 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/local_processing/drift_detection.py:697"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_364ffdd41487b344_fc7d5f4d"", ""content_hash"": ""364ffdd41487b344"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/drift_detection.py,647,647,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in drift_detection.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/drift_detection.py:647 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/local_processing/drift_detection.py:697"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_364ffdd41487b344_e1e9f6e0"", ""content_hash"": ""364ffdd41487b344"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_semantic_hv_exact_364ffdd41487b344_fc7d5f4d""]}"
genomevault/local_processing/proteomics.py,103,103,0,,semantic_hv_exact,3,1.00,Exact hypervector match: to_dict identical to to_dict in proteomics.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/proteomics.py:103 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/local_processing/proteomics.py:70"", ""function_name"": ""to_dict"", ""duplicate_name"": ""to_dict"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_92d312d311e09b22_812861c8"", ""content_hash"": ""92d312d311e09b22"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_semantic_hv_exact_92d312d311e09b22_2f7e140a""]}"
genomevault/local_processing/phenotypes.py,528,528,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _extract_fhir_medication identical to _extract_fhir_observation in phenotypes.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/phenotypes.py:528 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/local_processing/phenotypes.py:422"", ""function_name"": ""_extract_fhir_medication"", ""duplicate_name"": ""_extract_fhir_observation"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_2d9a9a1ac817a07d_3c93d7e5"", ""content_hash"": ""2d9a9a1ac817a07d"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/phenotypes.py,484,484,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _extract_fhir_condition identical to _extract_fhir_medication in phenotypes.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/phenotypes.py:484 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/local_processing/phenotypes.py:528"", ""function_name"": ""_extract_fhir_condition"", ""duplicate_name"": ""_extract_fhir_medication"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_afde2b8ed9fb3aef_a676e445"", ""content_hash"": ""afde2b8ed9fb3aef"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/phenotypes.py,813,813,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _merge_diagnoses identical to _merge_medications in phenotypes.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/phenotypes.py:813 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/local_processing/phenotypes.py:820"", ""function_name"": ""_merge_diagnoses"", ""duplicate_name"": ""_merge_medications"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_8b2310073ffa51c3_e8dd5adb"", ""content_hash"": ""8b2310073ffa51c3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/pipeline.py,122,122,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _process_genomic identical to _process_transcriptomic in pipeline.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/pipeline.py:122 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/local_processing/pipeline.py:138"", ""function_name"": ""_process_genomic"", ""duplicate_name"": ""_process_transcriptomic"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_935ebe8af6b74538_89f44fa3"", ""content_hash"": ""935ebe8af6b74538"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/pipeline.py,168,168,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _process_proteomic identical to _process_transcriptomic in pipeline.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/pipeline.py:168 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/local_processing/pipeline.py:138"", ""function_name"": ""_process_proteomic"", ""duplicate_name"": ""_process_transcriptomic"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_2c1de8fe243209d9_9fb79d66"", ""content_hash"": ""2c1de8fe243209d9"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/pir/client/query_builder.py,161,161,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _execute_region_scan identical to _execute_variant_lookup in query_builder.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/pir/client/query_builder.py:161 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/pir/client/query_builder.py:112"", ""function_name"": ""_execute_region_scan"", ""duplicate_name"": ""_execute_variant_lookup"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_9d8b47bafb41a4c6_ca024d9f"", ""content_hash"": ""9d8b47bafb41a4c6"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/pir/client/query_builder.py,211,211,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _execute_gene_annotation identical to _execute_variant_lookup in query_builder.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/pir/client/query_builder.py:211 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/pir/client/query_builder.py:112"", ""function_name"": ""_execute_gene_annotation"", ""duplicate_name"": ""_execute_variant_lookup"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_eef674d194265fe6_ed07b69d"", ""content_hash"": ""eef674d194265fe6"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/pir/server/enhanced_pir_server.py,532,532,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _process_annotation_query identical to _process_graph_query in enhanced_pir_server.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/pir/server/enhanced_pir_server.py:532 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/pir/server/enhanced_pir_server.py:540"", ""function_name"": ""_process_annotation_query"", ""duplicate_name"": ""_process_graph_query"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_0c15595c6dcd1ea3_9d70940e"", ""content_hash"": ""0c15595c6dcd1ea3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/post_quantum_crypto.py,66,66,0,,semantic_hv_exact,3,1.00,Exact hypervector match: decapsulate identical to sign in post_quantum_crypto.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/post_quantum_crypto.py:66 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/post_quantum_crypto.py:85"", ""function_name"": ""decapsulate"", ""duplicate_name"": ""sign"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_dac89a328359815a_d8951597"", ""content_hash"": ""dac89a328359815a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/common.py,598,598,0,,semantic_hv_exact,3,1.00,Exact hypervector match: ancestry_composition_circuit identical to diabetes_risk_circuit in common.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/common.py:598 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/common.py:603"", ""function_name"": ""ancestry_composition_circuit"", ""duplicate_name"": ""diabetes_risk_circuit"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_64034215e6046567_f0946da3"", ""content_hash"": ""64034215e6046567"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/common.py,603,603,0,,semantic_hv_exact,3,1.00,Exact hypervector match: diabetes_risk_circuit identical to pathway_enrichment_circuit in common.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/common.py:603 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/common.py:608"", ""function_name"": ""diabetes_risk_circuit"", ""duplicate_name"": ""pathway_enrichment_circuit"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_6b79ba3f97f9d1d3_59dd9ea6"", ""content_hash"": ""6b79ba3f97f9d1d3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/common.py,608,608,0,,semantic_hv_exact,3,1.00,Exact hypervector match: pathway_enrichment_circuit identical to variant_presence_circuit in common.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/common.py:608 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/common.py:623"", ""function_name"": ""pathway_enrichment_circuit"", ""duplicate_name"": ""variant_presence_circuit"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_fbe9fdd684a8d3b3_e1c03878"", ""content_hash"": ""fbe9fdd684a8d3b3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/dependencies.py,138,138,0,,semantic_hv_exact,3,1.00,Exact hypervector match: require_gpu_features identical to require_zk_features in dependencies.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/dependencies.py:138 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/dependencies.py:143"", ""function_name"": ""require_gpu_features"", ""duplicate_name"": ""require_zk_features"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_fee670cc41b78e41_4133f0e0"", ""content_hash"": ""fee670cc41b78e41"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/encryption.py,156,156,0,,semantic_hv_exact,3,1.00,Exact hypervector match: decrypt_file identical to encrypt_file in encryption.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/encryption.py:156 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/encryption.py:140"", ""function_name"": ""decrypt_file"", ""duplicate_name"": ""encrypt_file"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_6c1dbbfb41e4ee0b_fa35d564"", ""content_hash"": ""6c1dbbfb41e4ee0b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/encryption.py,186,186,0,,semantic_hv_exact,3,1.00,Exact hypervector match: decrypt identical to encrypt in encryption.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/encryption.py:186 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/encryption.py:180"", ""function_name"": ""decrypt"", ""duplicate_name"": ""encrypt"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_d51fa7ea15a1dc71_cd42c49e"", ""content_hash"": ""d51fa7ea15a1dc71"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/encryption.py,231,231,0,,semantic_hv_exact,3,1.00,Exact hypervector match: decrypt identical to encrypt in encryption.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/encryption.py:231 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/encryption.py:216"", ""function_name"": ""decrypt"", ""duplicate_name"": ""encrypt"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_db6ab82ebc2c26f1_be72281c"", ""content_hash"": ""db6ab82ebc2c26f1"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/encryption.py,403,403,0,,semantic_hv_exact,3,1.00,Exact hypervector match: generate_nonce identical to generate_token in encryption.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/encryption.py:403 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/encryption.py:413"", ""function_name"": ""generate_nonce"", ""duplicate_name"": ""generate_token"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_c06897278457f3e8_485167ba"", ""content_hash"": ""c06897278457f3e8"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/logging.py,431,431,0,,semantic_hv_exact,3,1.00,Exact hypervector match: critical identical to debug in logging.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/logging.py:431 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/logging.py:411"", ""function_name"": ""critical"", ""duplicate_name"": ""debug"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_56fed4ac2e66d7a0_41fb4d4b"", ""content_hash"": ""56fed4ac2e66d7a0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/logging.py,411,411,0,,semantic_hv_exact,3,1.00,Exact hypervector match: debug identical to warning in logging.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/logging.py:411 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/logging.py:421"", ""function_name"": ""debug"", ""duplicate_name"": ""warning"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_8dd487213213a869_4e79ed0d"", ""content_hash"": ""8dd487213213a869"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/logging.py,426,426,0,,semantic_hv_exact,3,1.00,Exact hypervector match: error identical to info in logging.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/logging.py:426 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/logging.py:416"", ""function_name"": ""error"", ""duplicate_name"": ""info"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_4d48be91f8dd00e7_7ba52a30"", ""content_hash"": ""4d48be91f8dd00e7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/logging.py,405,405,0,,semantic_hv_exact,3,1.00,Exact hypervector match: error identical to info in logging.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/logging.py:405 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/logging.py:397"", ""function_name"": ""error"", ""duplicate_name"": ""info"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_4d17fd050e6efcec_16d9ec89"", ""content_hash"": ""4d17fd050e6efcec"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/logging.py,397,397,0,,semantic_hv_exact,3,1.00,Exact hypervector match: info identical to warning in logging.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/logging.py:397 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/logging.py:401"", ""function_name"": ""info"", ""duplicate_name"": ""warning"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_ab859f29ff41c92e_18e5e3df"", ""content_hash"": ""ab859f29ff41c92e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/metrics.py,33,33,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in metrics.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/metrics.py:33 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/metrics.py:9"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_3c22b9d3d8c86c3f_77afeb9d"", ""content_hash"": ""3c22b9d3d8c86c3f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/metrics.py,21,21,0,,semantic_hv_exact,3,1.00,Exact hypervector match: get identical to get in metrics.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/metrics.py:21 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/metrics.py:45"", ""function_name"": ""get"", ""duplicate_name"": ""get"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_19136beefa784b1d_d113aece"", ""content_hash"": ""19136beefa784b1d"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/metrics.py,57,57,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in metrics.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/metrics.py:57 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/metrics.py:76"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_0febc39b85a91adc_effbd1e5"", ""content_hash"": ""0febc39b85a91adc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/metrics.py,82,82,0,,semantic_hv_exact,3,1.00,Exact hypervector match: counter identical to gauge in metrics.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/metrics.py:82 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/metrics.py:95"", ""function_name"": ""counter"", ""duplicate_name"": ""gauge"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_375be41b4e08ecd9_2e6c681b"", ""content_hash"": ""375be41b4e08ecd9"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/metrics.py,95,95,0,,semantic_hv_exact,3,1.00,Exact hypervector match: gauge identical to histogram in metrics.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/metrics.py:95 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/metrics.py:108"", ""function_name"": ""gauge"", ""duplicate_name"": ""histogram"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_99ee9d6e5733ed5a_d8d88c0e"", ""content_hash"": ""99ee9d6e5733ed5a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/monitoring.py,26,26,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in post_quantum_crypto.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/monitoring.py:26 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/post_quantum_crypto.py:97"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_14b2f5fabf70e5b6_703bcefe"", ""content_hash"": ""14b2f5fabf70e5b6"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/post_quantum_crypto.py,56,56,0,,semantic_hv_exact,3,1.00,Exact hypervector match: generate_keypair identical to generate_keypair in post_quantum_crypto.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/utils/post_quantum_crypto.py:56 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/utils/post_quantum_crypto.py:81"", ""function_name"": ""generate_keypair"", ""duplicate_name"": ""generate_keypair"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_3d3555a6b5e1f6e3_27aad6fe"", ""content_hash"": ""3d3555a6b5e1f6e3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/advanced/catalytic_proof.py,68,68,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _compute_fingerprint identical to _compute_fingerprint in catalytic_space_writelog.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/catalytic_proof.py:68 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/catalytic_space_writelog.py:66"", ""function_name"": ""_compute_fingerprint"", ""duplicate_name"": ""_compute_fingerprint"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_b1a429a53bac0315_164f2d7b"", ""content_hash"": ""b1a429a53bac0315"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/base_circuits.py,172,172,0,,semantic_hv_exact,3,1.00,Exact hypervector match: witness identical to witness in training_proof.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/base_circuits.py:172 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/training_proof.py:27"", ""function_name"": ""witness"", ""duplicate_name"": ""witness"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_4d8e29f1a0cb7da3_facf2829"", ""content_hash"": ""4d8e29f1a0cb7da3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/base_genomic.py,110,110,0,,semantic_hv_exact,3,1.00,Exact hypervector match: setup_constraints identical to setup_constraints in base_genomic.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/base_genomic.py:110 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/base_genomic.py:127"", ""function_name"": ""setup_constraints"", ""duplicate_name"": ""setup_constraints"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_943c6fec8ced7eee_1e956acd"", ""content_hash"": ""943c6fec8ced7eee"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/base_genomic.py,127,127,0,,semantic_hv_exact,3,1.00,Exact hypervector match: setup_constraints identical to setup_constraints in base_genomic.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/base_genomic.py:127 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/base_genomic.py:144"", ""function_name"": ""setup_constraints"", ""duplicate_name"": ""setup_constraints"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_fb176c303c5de846_2cd1131f"", ""content_hash"": ""fb176c303c5de846"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/base_genomic.py,115,115,0,,semantic_hv_exact,3,1.00,Exact hypervector match: generate_witness identical to generate_witness in base_genomic.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/base_genomic.py:115 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/base_genomic.py:166"", ""function_name"": ""generate_witness"", ""duplicate_name"": ""generate_witness"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_c6704a2ab57d678c_8c8eac01"", ""content_hash"": ""c6704a2ab57d678c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/base_genomic.py,132,132,0,,semantic_hv_exact,3,1.00,Exact hypervector match: generate_witness identical to generate_witness in base_genomic.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/base_genomic.py:132 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/base_genomic.py:149"", ""function_name"": ""generate_witness"", ""duplicate_name"": ""generate_witness"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_a0a1c3230771b8bb_16de966c"", ""content_hash"": ""a0a1c3230771b8bb"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/clinical_circuits.py,10,10,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in clinical_circuits.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/clinical_circuits.py:10 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/clinical_circuits.py:22"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_bbe7f9de52c4695b_19f94495"", ""content_hash"": ""bbe7f9de52c4695b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/clinical_circuits.py,22,22,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in clinical_circuits.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/clinical_circuits.py:22 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/clinical_circuits.py:34"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_80f05cfc2577eac7_3b135b8c"", ""content_hash"": ""80f05cfc2577eac7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/clinical_circuits.py,34,34,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in clinical_circuits.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/clinical_circuits.py:34 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/clinical_circuits.py:46"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_b7021b5b9f5bcafe_27d5068a"", ""content_hash"": ""b7021b5b9f5bcafe"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/multi_modal_training_proof.py,177,177,0,,semantic_hv_duplicate,2,1.00,Semantic duplicate (HV): constrain_modality_alignment similar to constrain_modality_integrity in multi_modal_training_proof.py (similarity: 0.86),Review semantic_hv_duplicate issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/multi_modal_training_proof.py:177 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/multi_modal_training_proof.py:147"", ""function_name"": ""constrain_modality_alignment"", ""duplicate_name"": ""constrain_modality_integrity"", ""similarity"": 0.8614130434782609, ""match_type"": ""semantic"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_duplicate_9324030101448239_19548420"", ""content_hash"": ""9324030101448239"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/biological/diabetes.py,71,71,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in diabetes.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/biological/diabetes.py:71 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/biological/diabetes.py:9"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_61f6968dc09dc46c_4832e8d6"", ""content_hash"": ""61f6968dc09dc46c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/biological/multi_omics.py,183,183,0,,semantic_hv_exact,3,1.00,Exact hypervector match: setup identical to setup in multi_omics.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/biological/multi_omics.py:183 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/biological/multi_omics.py:300"", ""function_name"": ""setup"", ""duplicate_name"": ""setup"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_09568666c71aab3e_b04a0935"", ""content_hash"": ""09568666c71aab3e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/biological/multi_omics.py,313,313,0,,semantic_hv_exact,3,1.00,Exact hypervector match: generate_constraints identical to generate_constraints in multi_omics.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/biological/multi_omics.py:313 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/biological/multi_omics.py:63"", ""function_name"": ""generate_constraints"", ""duplicate_name"": ""generate_constraints"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_191eadb77ca9c70f_1d7cb887"", ""content_hash"": ""191eadb77ca9c70f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/implementations/constraint_system.py,48,48,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __add__ identical to __sub__ in constraint_system.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/constraint_system.py:48 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/constraint_system.py:53"", ""function_name"": ""__add__"", ""duplicate_name"": ""__sub__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_8ffe7c1f33921f38_9f31a41d"", ""content_hash"": ""8ffe7c1f33921f38"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/implementations/constraint_system.py,58,58,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __mul__ identical to __sub__ in constraint_system.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/constraint_system.py:58 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/constraint_system.py:53"", ""function_name"": ""__mul__"", ""duplicate_name"": ""__sub__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_b0459af07f79c6d5_b757cc30"", ""content_hash"": ""b0459af07f79c6d5"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/implementations/constraint_system.py,115,115,0,,semantic_hv_exact,3,1.00,Exact hypervector match: is_one identical to is_zero in constraint_system.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/constraint_system.py:115 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/constraint_system.py:107"", ""function_name"": ""is_one"", ""duplicate_name"": ""is_zero"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_34df0408022acd33_710dcb59"", ""content_hash"": ""34df0408022acd33"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/implementations/constraint_system.py,273,273,0,,semantic_hv_exact,3,1.00,Exact hypervector match: enforce_equal identical to enforce_multiplication in constraint_system.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/constraint_system.py:273 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/constraint_system.py:291"", ""function_name"": ""enforce_equal"", ""duplicate_name"": ""enforce_multiplication"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_06b71e7c7fb3276d_e4507767"", ""content_hash"": ""06b71e7c7fb3276d"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/implementations/constraint_system.py,347,347,0,,semantic_hv_exact,3,1.00,Exact hypervector match: num_constraints identical to num_variables in constraint_system.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/constraint_system.py:347 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/constraint_system.py:351"", ""function_name"": ""num_constraints"", ""duplicate_name"": ""num_variables"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_d2d409845aca2d67_fcba6a77"", ""content_hash"": ""d2d409845aca2d67"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/prover.py,46,46,0,,semantic_hv_exact,3,1.00,Exact hypervector match: to_dict identical to to_dict in verifier.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/prover.py:46 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/verifier.py:47"", ""function_name"": ""to_dict"", ""duplicate_name"": ""to_dict"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_633e035c09b0db18_065b0141"", ""content_hash"": ""633e035c09b0db18"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/prover.py,96,96,0,,semantic_hv_exact,3,1.00,Exact hypervector match: to_dict identical to to_dict in verifier.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/prover.py:96 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/verifier.py:47"", ""function_name"": ""to_dict"", ""duplicate_name"": ""to_dict"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_633e035c09b0db18_84bac7e8"", ""content_hash"": ""633e035c09b0db18"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_semantic_hv_exact_633e035c09b0db18_065b0141""]}"
genomevault/zk_proofs/prover.py,213,213,0,,semantic_hv_duplicate,2,1.00,Semantic duplicate (HV): pathway_enrichment_circuit similar to variant_presence_circuit in prover.py (similarity: 0.86),Review semantic_hv_duplicate issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/prover.py:213 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/prover.py:117"", ""function_name"": ""pathway_enrichment_circuit"", ""duplicate_name"": ""variant_presence_circuit"", ""similarity"": 0.8585461689587426, ""match_type"": ""semantic"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_duplicate_68f01265e0650789_e260931c"", ""content_hash"": ""68f01265e0650789"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/prover.py,264,264,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in verifier.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/prover.py:264 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/verifier.py:69"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_492e8ca8240d4095_bc2fcf89"", ""content_hash"": ""492e8ca8240d4095"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/prover.py,276,276,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _load_trusted_setup identical to _load_trusted_setup in verifier.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/prover.py:276 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/verifier.py:112"", ""function_name"": ""_load_trusted_setup"", ""duplicate_name"": ""_load_trusted_setup"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_2455f009283986f6_04c24da9"", ""content_hash"": ""2455f009283986f6"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/prover.py,602,602,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _hash_proof identical to _hash_proof in verifier.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/prover.py:602 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/verifier.py:513"", ""function_name"": ""_hash_proof"", ""duplicate_name"": ""_hash_proof"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_2b294a7622e28bb2_03777a1d"", ""content_hash"": ""2b294a7622e28bb2"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/verifier.py,373,373,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _verify_ancestry_proof identical to _verify_pathway_proof in verifier.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/verifier.py:373 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/zk_proofs/verifier.py:414"", ""function_name"": ""_verify_ancestry_proof"", ""duplicate_name"": ""_verify_pathway_proof"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_91f454d037109bcb_4702b972"", ""content_hash"": ""91f454d037109bcb"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/add_docstrings.py,304,304,0,,semantic_hv_exact,3,1.00,Exact hypervector match: main identical to main in add_docstrings_smart.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/scripts/add_docstrings.py:304 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/scripts/add_docstrings_smart.py:425"", ""function_name"": ""main"", ""duplicate_name"": ""main"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_ebd46374d2ca9fe7_33dd5000"", ""content_hash"": ""ebd46374d2ca9fe7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/add_docstrings.py,17,17,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in remove_debug_prints.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/scripts/add_docstrings.py:17 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/scripts/remove_debug_prints.py:31"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_8019ed2e7ef93e61_64d40e4d"", ""content_hash"": ""8019ed2e7ef93e61"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/add_docstrings.py,228,228,0,,semantic_hv_exact,3,1.00,Exact hypervector match: visit_FunctionDef identical to visit_FunctionDef in analyze_missing_docstrings.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/scripts/add_docstrings.py:228 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/scripts/analyze_missing_docstrings.py:37"", ""function_name"": ""visit_FunctionDef"", ""duplicate_name"": ""visit_FunctionDef"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_a0110fde2b175e8e_82d118e6"", ""content_hash"": ""a0110fde2b175e8e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/bench.py,40,40,0,,semantic_hv_exact,3,1.00,Exact hypervector match: save_results identical to save_results in bench_pir.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/scripts/bench.py:40 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/scripts/bench_pir.py:406"", ""function_name"": ""save_results"", ""duplicate_name"": ""save_results"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_5ee512de40fa7607_94b5e981"", ""content_hash"": ""5ee512de40fa7607"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/bench_hdc.py,56,56,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _get_system_info identical to _get_system_info in bench_pir.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/scripts/bench_hdc.py:56 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/scripts/bench_pir.py:38"", ""function_name"": ""_get_system_info"", ""duplicate_name"": ""_get_system_info"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_57a45da94a449551_1f783731"", ""content_hash"": ""57a45da94a449551"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/bench_hdc.py,563,563,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _plot_binding_comparison identical to _plot_projection_comparison in bench_hdc.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/scripts/bench_hdc.py:563 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/scripts/bench_hdc.py:638"", ""function_name"": ""_plot_binding_comparison"", ""duplicate_name"": ""_plot_projection_comparison"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_90784447d86fce58_84b2fb4e"", ""content_hash"": ""90784447d86fce58"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/bench_pir.py,48,48,0,,semantic_hv_exact,3,1.00,Exact hypervector match: benchmark_query_generation identical to benchmark_server_response in bench_pir.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/scripts/bench_pir.py:48 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/scripts/bench_pir.py:91"", ""function_name"": ""benchmark_query_generation"", ""duplicate_name"": ""benchmark_server_response"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_9b41613d4a62d704_d220de94"", ""content_hash"": ""9b41613d4a62d704"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/clinical_eval_run.py,12,12,0,,semantic_hv_exact,3,1.00,Exact hypervector match: main identical to main in etl_run.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/scripts/clinical_eval_run.py:12 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/scripts/etl_run.py:12"", ""function_name"": ""main"", ""duplicate_name"": ""main"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_66a652f5dbf72ade_0a52a7af"", ""content_hash"": ""66a652f5dbf72ade"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/remove_debug_prints.py,244,244,0,,semantic_hv_exact,3,1.00,Exact hypervector match: process_directory identical to process_directory in remove_debug_prints_simple.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/scripts/remove_debug_prints.py:244 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/scripts/remove_debug_prints_simple.py:179"", ""function_name"": ""process_directory"", ""duplicate_name"": ""process_directory"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_4c3aa6c4e8d1fcfc_3d7c3b6c"", ""content_hash"": ""4c3aa6c4e8d1fcfc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/remove_debug_prints.py,264,264,0,,semantic_hv_exact,3,1.00,Exact hypervector match: main identical to main in remove_debug_prints_simple.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/scripts/remove_debug_prints.py:264 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/scripts/remove_debug_prints_simple.py:198"", ""function_name"": ""main"", ""duplicate_name"": ""main"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_30927849c99b8aeb_7570a757"", ""content_hash"": ""30927849c99b8aeb"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/test_logging_config.py,27,27,0,,semantic_hv_exact,3,1.00,Exact hypervector match: test_basic_logging identical to test_json_logging in test_logging_config.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/scripts/test_logging_config.py:27 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/scripts/test_logging_config.py:215"", ""function_name"": ""test_basic_logging"", ""duplicate_name"": ""test_json_logging"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_6b427cbeddf17cc8_2a092e21"", ""content_hash"": ""6b427cbeddf17cc8"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
tailchasing/calibrate.py,325,325,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _calculate_ast_distance identical to _calculate_git_distance in calibrate.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/tailchasing/calibrate.py:325 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/tailchasing/calibrate.py:338"", ""function_name"": ""_calculate_ast_distance"", ""duplicate_name"": ""_calculate_git_distance"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_093a9f630c7a6edc_f6c58716"", ""content_hash"": ""093a9f630c7a6edc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
tailchasing/cli.py,233,233,0,,semantic_hv_exact,3,1.00,Exact hypervector match: _handle_analyze_command identical to _handle_validate_command in cli.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/tailchasing/cli.py:233 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/tailchasing/cli.py:227"", ""function_name"": ""_handle_analyze_command"", ""duplicate_name"": ""_handle_validate_command"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_b9048acc99b5f46b_5e1c69f6"", ""content_hash"": ""b9048acc99b5f46b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
benchmarks/harness.py,10,10,0,,semantic_hv_exact,3,1.00,Exact hypervector match: bench identical to main in kan_hd_smoke.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/benchmarks/harness.py:10 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/benchmarks/kan_hd_smoke.py:8"", ""function_name"": ""bench"", ""duplicate_name"": ""main"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_8e6c241b11453476_959b7402"", ""content_hash"": ""8e6c241b11453476"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/blockchain/node/base_node.py,12,12,0,,semantic_hv_exact,3,1.00,Exact hypervector match: start identical to stop in base_node.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/blockchain/node/base_node.py:12 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/blockchain/node/base_node.py:16"", ""function_name"": ""start"", ""duplicate_name"": ""stop"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_bf90a5b7cedb47c4_fb47c5a9"", ""content_hash"": ""bf90a5b7cedb47c4"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector/stores/in_memory.py,8,8,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in metrics.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/hypervector/stores/in_memory.py:8 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/observability/metrics.py:11"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_6f695548ac846e13_bf3a8fb9"", ""content_hash"": ""6f695548ac846e13"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/ledger/store.py,31,31,0,,semantic_hv_exact,3,1.00,Exact hypervector match: __init__ identical to __init__ in metrics.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/ledger/store.py:31 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/observability/metrics.py:11"", ""function_name"": ""__init__"", ""duplicate_name"": ""__init__"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_6f695548ac846e13_83fafb2b"", ""content_hash"": ""6f695548ac846e13"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_semantic_hv_exact_6f695548ac846e13_bf3a8fb9""]}"
genomevault/observability/metrics.py,17,17,0,,semantic_hv_exact,3,1.00,Exact hypervector match: counter identical to gauge in metrics.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/observability/metrics.py:17 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/observability/metrics.py:29"", ""function_name"": ""counter"", ""duplicate_name"": ""gauge"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_001cc7a1fff1b3c8_387d4c2f"", ""content_hash"": ""001cc7a1fff1b3c8"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/observability/metrics.py,29,29,0,,semantic_hv_exact,3,1.00,Exact hypervector match: gauge identical to histogram in metrics.py,Review semantic_hv_exact issue at /Users/rohanvinaik/genomevault/genomevault/observability/metrics.py:29 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""duplicate_location"": ""/Users/rohanvinaik/genomevault/genomevault/observability/metrics.py:41"", ""function_name"": ""gauge"", ""duplicate_name"": ""histogram"", ""similarity"": 1.0, ""match_type"": ""exact"", ""analyzer"": ""semantic_hv"", ""stable_id"": ""TC_semantic_hv_exact_0aa22b3bdbe6960a_c06dc442"", ""content_hash"": ""0aa22b3bdbe6960a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/test_autofix_example.py,17,17,0,,phantom_stub_triage,3,1.00,P1_FUNCTIONAL: risky_operation,Review phantom_stub_triage issue at /Users/rohanvinaik/genomevault/devtools/test_autofix_example.py:17 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""priority"": ""P1_FUNCTIONAL"", ""function_name"": ""risky_operation"", ""class_name"": null, ""signature"": ""()"", ""risk_factors"": [], ""suggested_action"": ""Provide minimal, correct implementation"", ""is_allowed"": false, ""is_blocked"": false, ""generated_implementation"": ""def risky_operation():\n    \""\""\""Functional stub - minimal implementation provided.\""\""\""\n    # TODO: Implement proper functionality\n    import warnings\n    warnings.warn(f\""Using stub implementation for {stub.function_name}\"", UserWarning)\n    return None"", ""stable_id"": ""TC_phantom_stub_triage_9f9e453006349ea6_98f80e93"", ""content_hash"": ""9f9e453006349ea6"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/test_autofix_example.py,29,29,0,,phantom_stub_triage,3,1.00,P1_FUNCTIONAL: another_operation,Review phantom_stub_triage issue at /Users/rohanvinaik/genomevault/devtools/test_autofix_example.py:29 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""priority"": ""P1_FUNCTIONAL"", ""function_name"": ""another_operation"", ""class_name"": null, ""signature"": ""()"", ""risk_factors"": [], ""suggested_action"": ""Provide minimal, correct implementation"", ""is_allowed"": false, ""is_blocked"": false, ""generated_implementation"": ""def another_operation():\n    \""\""\""Functional stub - minimal implementation provided.\""\""\""\n    # TODO: Implement proper functionality\n    import warnings\n    warnings.warn(f\""Using stub implementation for {stub.function_name}\"", UserWarning)\n    return None"", ""stable_id"": ""TC_phantom_stub_triage_140a46e98c3b12de_2233e9ae"", ""content_hash"": ""140a46e98c3b12de"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/test_autofix_example.py,49,49,0,,phantom_stub_triage,3,1.00,P1_FUNCTIONAL: initialize_something,Review phantom_stub_triage issue at /Users/rohanvinaik/genomevault/devtools/test_autofix_example.py:49 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""priority"": ""P1_FUNCTIONAL"", ""function_name"": ""initialize_something"", ""class_name"": null, ""signature"": ""()"", ""risk_factors"": [], ""suggested_action"": ""Provide minimal, correct implementation"", ""is_allowed"": false, ""is_blocked"": false, ""generated_implementation"": ""def initialize_something():\n    \""\""\""Functional stub - minimal implementation provided.\""\""\""\n    # TODO: Implement proper functionality\n    import warnings\n    warnings.warn(f\""Using stub implementation for {stub.function_name}\"", UserWarning)\n    return None"", ""stable_id"": ""TC_phantom_stub_triage_8df924d8c7393f6e_2cf48604"", ""content_hash"": ""8df924d8c7393f6e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/blockchain/node/base_node.py,21,21,0,,phantom_stub_triage,3,1.00,P1_FUNCTIONAL: BaseNode.handle,Review phantom_stub_triage issue at /Users/rohanvinaik/genomevault/genomevault/blockchain/node/base_node.py:21 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""priority"": ""P1_FUNCTIONAL"", ""function_name"": ""handle"", ""class_name"": ""BaseNode"", ""signature"": ""(self, msg)"", ""risk_factors"": [], ""suggested_action"": ""Provide minimal, correct implementation"", ""is_allowed"": false, ""is_blocked"": false, ""generated_implementation"": ""def handle(self, msg):\n    \""\""\""Functional stub - minimal implementation provided.\""\""\""\n    # TODO: Implement proper functionality\n    import warnings\n    warnings.warn(f\""Using stub implementation for {stub.function_name}\"", UserWarning)\n    return None"", ""stable_id"": ""TC_phantom_stub_triage_612e6cd4fe825022_979f6aa6"", ""content_hash"": ""612e6cd4fe825022"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_phantom_stub_triage_612e6cd4fe825022_b485c8b7""]}"
genomevault/experimental/zk_circuits/stark_prover.py,956,956,0,,phantom_stub_triage,3,1.00,P1_FUNCTIONAL: STARKProver._get_primitive_root,Review phantom_stub_triage issue at /Users/rohanvinaik/genomevault/genomevault/experimental/zk_circuits/stark_prover.py:956 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""priority"": ""P1_FUNCTIONAL"", ""function_name"": ""_get_primitive_root"", ""class_name"": ""STARKProver"", ""signature"": ""(self)"", ""risk_factors"": [], ""suggested_action"": ""Provide minimal, correct implementation"", ""is_allowed"": false, ""is_blocked"": false, ""generated_implementation"": ""def _get_primitive_root(self):\n    \""\""\""Functional stub - minimal implementation provided.\""\""\""\n    # TODO: Implement proper functionality\n    import warnings\n    warnings.warn(f\""Using stub implementation for {stub.function_name}\"", UserWarning)\n    return None"", ""stable_id"": ""TC_phantom_stub_triage_743b01ecc371a4cc_9a9b03d2"", ""content_hash"": ""743b01ecc371a4cc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_phantom_stub_triage_743b01ecc371a4cc_27a43278""]}"
genomevault/local_processing/sequencing.py,75,75,0,,phantom_stub_triage,3,1.00,P1_FUNCTIONAL: Variant.get_id (Functional requirement: id_generators),Review phantom_stub_triage issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/sequencing.py:75 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""priority"": ""P1_FUNCTIONAL"", ""function_name"": ""get_id"", ""class_name"": ""Variant"", ""signature"": ""(self)"", ""risk_factors"": [""Functional requirement: id_generators""], ""suggested_action"": ""Provide minimal, correct implementation"", ""is_allowed"": false, ""is_blocked"": false, ""generated_implementation"": ""def get_id(self):\n    \""\""\""Minimal ID generation implementation.\""\""\""\n    import uuid\n    import hashlib\n    import time\n    \n    # Generate deterministic ID based on context\n    context_data = f\""{time.time()}{id(self) if hasattr(self, '__class__') else 'global'}\""\n    return hashlib.sha256(context_data.encode()).hexdigest()[:16]"", ""stable_id"": ""TC_phantom_stub_triage_47bd7eb480130773_679e27c7"", ""content_hash"": ""47bd7eb480130773"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_phantom_stub_triage_47bd7eb480130773_0202f55c""]}"
genomevault/logging.py,3,3,0,,phantom_stub_triage,3,1.00,P1_FUNCTIONAL: setup_logging,Review phantom_stub_triage issue at /Users/rohanvinaik/genomevault/genomevault/logging.py:3 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""priority"": ""P1_FUNCTIONAL"", ""function_name"": ""setup_logging"", ""class_name"": null, ""signature"": ""(level)"", ""risk_factors"": [], ""suggested_action"": ""Provide minimal, correct implementation"", ""is_allowed"": false, ""is_blocked"": false, ""generated_implementation"": ""def setup_logging(level):\n    \""\""\""Functional stub - minimal implementation provided.\""\""\""\n    # TODO: Implement proper functionality\n    import warnings\n    warnings.warn(f\""Using stub implementation for {stub.function_name}\"", UserWarning)\n    return None"", ""stable_id"": ""TC_phantom_stub_triage_ffa55d9e7792cc52_ccf7e128"", ""content_hash"": ""ffa55d9e7792cc52"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/logging_utils.py,3,3,0,,phantom_stub_triage,3,1.00,P1_FUNCTIONAL: get_logger (Functional requirement: data_access),Review phantom_stub_triage issue at /Users/rohanvinaik/genomevault/genomevault/logging_utils.py:3 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""priority"": ""P1_FUNCTIONAL"", ""function_name"": ""get_logger"", ""class_name"": null, ""signature"": ""(name)"", ""risk_factors"": [""Functional requirement: data_access""], ""suggested_action"": ""Provide minimal, correct implementation"", ""is_allowed"": false, ""is_blocked"": false, ""generated_implementation"": ""def get_logger(name):\n    \""\""\""Functional stub - minimal implementation provided.\""\""\""\n    # TODO: Implement proper functionality\n    import warnings\n    warnings.warn(f\""Using stub implementation for {stub.function_name}\"", UserWarning)\n    return None"", ""stable_id"": ""TC_phantom_stub_triage_8184e9ff6f54958e_fdafc769"", ""content_hash"": ""8184e9ff6f54958e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/pir/server/pir_server.py,469,469,0,,phantom_stub_triage,5,1.00,P0_SECURITY: TrustedSignatoryServer._verify_hsm (Security risk: crypto_verify),Review phantom_stub_triage issue at /Users/rohanvinaik/genomevault/genomevault/pir/server/pir_server.py:469 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""priority"": ""P0_SECURITY"", ""function_name"": ""_verify_hsm"", ""class_name"": ""TrustedSignatoryServer"", ""signature"": ""(self)"", ""risk_factors"": [""Security risk: crypto_verify""], ""suggested_action"": ""URGENT: Scaffold real implementation with secure defaults"", ""is_allowed"": false, ""is_blocked"": false, ""generated_implementation"": ""def _verify_hsm(self):\n    \""\""\""Security-critical verification function - requires implementation.\n    \n    TODO: Implement proper cryptographic verification logic.\n    This scaffolding is provided to prevent silent failures.\n    \""\""\""\n    import warnings\n    warnings.warn(\n        f\""{stub.function_name} is using a stub implementation. \""\n        f\""Do not use in production!\"",\n        UserWarning,\n        stacklevel=2\n    )\n    \n    # Scaffold implementation - always returns False for safety\n    return False  # SAFE DEFAULT: Fail closed for security"", ""stable_id"": ""TC_phantom_stub_triage_0704b7176b068e1b_f9acfecb"", ""content_hash"": ""0704b7176b068e1b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/backup.py,534,534,0,,phantom_stub_triage,3,1.00,P1_FUNCTIONAL: DisasterRecoveryOrchestrator._restore_component_data,Review phantom_stub_triage issue at /Users/rohanvinaik/genomevault/genomevault/utils/backup.py:534 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""priority"": ""P1_FUNCTIONAL"", ""function_name"": ""_restore_component_data"", ""class_name"": ""DisasterRecoveryOrchestrator"", ""signature"": ""(self, component, data)"", ""risk_factors"": [], ""suggested_action"": ""Provide minimal, correct implementation"", ""is_allowed"": false, ""is_blocked"": false, ""generated_implementation"": ""def _restore_component_data(self, component, data):\n    \""\""\""Functional stub - minimal implementation provided.\""\""\""\n    # TODO: Implement proper functionality\n    import warnings\n    warnings.warn(f\""Using stub implementation for {stub.function_name}\"", UserWarning)\n    return None"", ""stable_id"": ""TC_phantom_stub_triage_194bdbb77b09b19f_d2d75abd"", ""content_hash"": ""194bdbb77b09b19f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/config.py,345,345,0,,phantom_stub_triage,3,1.00,P1_FUNCTIONAL: _StubSecrets.get,Review phantom_stub_triage issue at /Users/rohanvinaik/genomevault/genomevault/utils/config.py:345 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""priority"": ""P1_FUNCTIONAL"", ""function_name"": ""get"", ""class_name"": ""_StubSecrets"", ""signature"": ""(self, *_, **__)"", ""risk_factors"": [], ""suggested_action"": ""Provide minimal, correct implementation"", ""is_allowed"": false, ""is_blocked"": false, ""generated_implementation"": ""def get(self, *_, **__):\n    \""\""\""Functional stub - minimal implementation provided.\""\""\""\n    # TODO: Implement proper functionality\n    import warnings\n    warnings.warn(f\""Using stub implementation for {stub.function_name}\"", UserWarning)\n    return None"", ""stable_id"": ""TC_phantom_stub_triage_5f2030e094865016_1a751d98"", ""content_hash"": ""5f2030e094865016"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_phantom_stub_triage_5f2030e094865016_7925571e""]}"
genomevault/utils/post_quantum_crypto.py,89,89,0,,phantom_stub_triage,5,1.00,P0_SECURITY: MockDilithium.verify (Security risk: crypto_verify),Review phantom_stub_triage issue at /Users/rohanvinaik/genomevault/genomevault/utils/post_quantum_crypto.py:89 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""priority"": ""P0_SECURITY"", ""function_name"": ""verify"", ""class_name"": ""MockDilithium"", ""signature"": ""(self, message, signature, public_key)"", ""risk_factors"": [""Security risk: crypto_verify""], ""suggested_action"": ""URGENT: Scaffold real implementation with secure defaults"", ""is_allowed"": false, ""is_blocked"": false, ""generated_implementation"": ""def verify(self, message, signature, public_key):\n    \""\""\""Security-critical verification function - requires implementation.\n    \n    TODO: Implement proper cryptographic verification logic.\n    This scaffolding is provided to prevent silent failures.\n    \""\""\""\n    import warnings\n    warnings.warn(\n        f\""{stub.function_name} is using a stub implementation. \""\n        f\""Do not use in production!\"",\n        UserWarning,\n        stacklevel=2\n    )\n    \n    # Scaffold implementation - always returns False for safety\n    return False  # SAFE DEFAULT: Fail closed for security"", ""stable_id"": ""TC_phantom_stub_triage_6aad1ea27f0e25e3_1e2c4b94"", ""content_hash"": ""6aad1ea27f0e25e3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/base_circuits.py,40,40,0,,phantom_stub_triage,5,1.00,P0_SECURITY: BaseCircuit.public_statement (Security-related file path),Review phantom_stub_triage issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/base_circuits.py:40 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""priority"": ""P0_SECURITY"", ""function_name"": ""public_statement"", ""class_name"": ""BaseCircuit"", ""signature"": ""(self)"", ""risk_factors"": [""Security-related file path""], ""suggested_action"": ""URGENT: Scaffold real implementation with secure defaults"", ""is_allowed"": false, ""is_blocked"": false, ""generated_implementation"": ""def public_statement(self):\n    \""\""\""Security-critical function requiring implementation.\""\""\""\n    raise NotImplementedError(\n        f\""Security-critical function {stub.function_name} must be implemented before use\""\n    )"", ""stable_id"": ""TC_phantom_stub_triage_c1c0870b90e8b8c9_95ededc0"", ""content_hash"": ""c1c0870b90e8b8c9"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_phantom_stub_triage_c1c0870b90e8b8c9_319f3f82""]}"
genomevault/zk_proofs/circuits/base_circuits.py,44,44,0,,phantom_stub_triage,5,1.00,P0_SECURITY: BaseCircuit.witness (Security-related file path),Review phantom_stub_triage issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/base_circuits.py:44 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""priority"": ""P0_SECURITY"", ""function_name"": ""witness"", ""class_name"": ""BaseCircuit"", ""signature"": ""(self)"", ""risk_factors"": [""Security-related file path""], ""suggested_action"": ""URGENT: Scaffold real implementation with secure defaults"", ""is_allowed"": false, ""is_blocked"": false, ""generated_implementation"": ""def witness(self):\n    \""\""\""Security-critical function requiring implementation.\""\""\""\n    raise NotImplementedError(\n        f\""Security-critical function {stub.function_name} must be implemented before use\""\n    )"", ""stable_id"": ""TC_phantom_stub_triage_9e528bd916901d3b_42b0dcc9"", ""content_hash"": ""9e528bd916901d3b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_phantom_stub_triage_9e528bd916901d3b_15f8ae32""]}"
scripts/test_stub_fixes.py,90,90,0,,phantom_stub_triage,3,1.00,P1_FUNCTIONAL: test_function,Review phantom_stub_triage issue at /Users/rohanvinaik/genomevault/scripts/test_stub_fixes.py:90 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""priority"": ""P1_FUNCTIONAL"", ""function_name"": ""test_function"", ""class_name"": null, ""signature"": ""()"", ""risk_factors"": [], ""suggested_action"": ""Provide minimal, correct implementation"", ""is_allowed"": false, ""is_blocked"": false, ""generated_implementation"": ""def test_function():\n    \""\""\""Functional stub - minimal implementation provided.\""\""\""\n    # TODO: Implement proper functionality\n    import warnings\n    warnings.warn(f\""Using stub implementation for {stub.function_name}\"", UserWarning)\n    return None"", ""stable_id"": ""TC_phantom_stub_triage_fad058d398eac1ab_d18c02c4"", ""content_hash"": ""fad058d398eac1ab"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/api/models/hv.py,197,197,0,,context_window_thrashing,3,1.00,Context-window thrashing cluster: 2 similar functions (primary: validate_dimension),"MERGE DUPLICATES: Functions separated by many lines often duplicate logic.
1. Use IDE's 'Find Similar Code' feature
2. Extract common patterns to module top
3. Add cross-references in docstrings | PREVENT CONTEXT LOSS:
- Keep related functions together
- Use descriptive names that indicate relationships
- Add 'See Also' sections in docstrings
- Create a module-level docstring describing all functions | ORGANIZE CODE:
```python
# Group related functionality
class DataProcessor:
    """"""Groups all data processing functions.""""""

    @staticmethod
    def process_type_a(data):
        """"""Process type A data.""""""
        pass

    @staticmethod
    def process_type_b(data):
        """"""Process type B data (similar to type A).""""""
        pass
```","{""cluster_id"": ""CWT_001"", ""similarity"": 0.878060009940618, ""line_distance"": 75, ""suggested_helper"": ""_validate_dimension_common"", ""function_count"": 3, ""issue_count"": 2, ""extract_playbook"": ""EXTRACT HELPER PLAYBOOK: _validate_dimension_common\n==================================================\n\nFunctions: validate_dimension (line 197) and validate_dimension (line 272)\nSimilarity: 87.8%\nLine distance: 75 lines\n\nSUGGESTED REFACTORING:\n1. Extract common functionality to _validate_dimension_common()\n2. Replace duplicate code with calls to _validate_dimension_common()\n3. Merge both validate_dimension paths using the helper\n\nMINI-DIFF PREVIEW:\n```diff\n+ def _validate_dimension_common(cls, v):\n+     \""\""\""Common functionality extracted from validate_dimension.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def validate_dimension(cls, v):\n-     # Original implementation (lines 197-204)\n+     return self._validate_dimension_common(cls, v)\n\n  def validate_dimension(cls, v):\n-     # Original implementation (lines 272-277)\n+     return self._validate_dimension_common(cls, v)\n```\n\nSAFETY CHECKS:\n- Ensure helper function signature covers all use cases\n- Verify all parameters are properly passed\n- Run tests to confirm behavior is preserved"", ""functions"": [{""name"": ""validate_dimension"", ""class_name"": ""HVEncodeConfigPatch"", ""line_start"": 308, ""line_end"": 314, ""signature"": ""(cls, v)""}, {""name"": ""validate_dimension"", ""class_name"": ""HVEncodeRequest"", ""line_start"": 272, ""line_end"": 277, ""signature"": ""(cls, v)""}, {""name"": ""validate_dimension"", ""class_name"": ""EncodingRequest"", ""line_start"": 197, ""line_end"": 204, ""signature"": ""(cls, v)""}], ""mini_diff"": ""```diff\n+ def _validate_dimension_common(cls, v):\n+     \""\""\""Common functionality extracted from validate_dimension.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def validate_dimension(cls, v):\n-     # Original implementation (lines 197-204)\n+     return self._validate_dimension_common(cls, v)\n\n  def validate_dimension(cls, v):\n-     # Original implementation (lines 272-277)\n+     return self._validate_dimension_common(cls, v)\n```"", ""stable_id"": ""TC_context_window_thrashing_bdd5b2432bdb9ec7_7d1d19e5"", ""content_hash"": ""bdd5b2432bdb9ec7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/clinical/calibration/calibrators.py,57,57,0,,context_window_thrashing,2,1.00,"Context-window thrashing: predict_proba() at lines 57 and 123 (77.5% similar, 66 lines apart)","MERGE DUPLICATES: Functions separated by many lines often duplicate logic.
1. Use IDE's 'Find Similar Code' feature
2. Extract common patterns to module top
3. Add cross-references in docstrings | PREVENT CONTEXT LOSS:
- Keep related functions together
- Use descriptive names that indicate relationships
- Add 'See Also' sections in docstrings
- Create a module-level docstring describing all functions | ORGANIZE CODE:
```python
# Group related functionality
class DataProcessor:
    """"""Groups all data processing functions.""""""

    @staticmethod
    def process_type_a(data):
        """"""Process type A data.""""""
        pass

    @staticmethod
    def process_type_b(data):
        """"""Process type B data (similar to type A).""""""
        pass
```","{""cluster_id"": ""CWT_001"", ""similarity"": 0.775305640282755, ""line_distance"": 66, ""suggested_helper"": ""_predict_proba_common"", ""function_count"": 2, ""issue_count"": 1, ""extract_playbook"": ""EXTRACT HELPER PLAYBOOK: _predict_proba_common\n==================================================\n\nFunctions: predict_proba (line 57) and predict_proba (line 123)\nSimilarity: 77.5%\nLine distance: 66 lines\n\nSUGGESTED REFACTORING:\n1. Extract common functionality to _predict_proba_common()\n2. Replace duplicate code with calls to _predict_proba_common()\n3. Merge both predict_proba paths using the helper\n\nMINI-DIFF PREVIEW:\n```diff\n+ def _predict_proba_common(y_score, self):\n+     \""\""\""Common functionality extracted from predict_proba.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def predict_proba(self, y_score):\n-     # Original implementation (lines 57-69)\n+     return self._predict_proba_common(y_score, self)\n\n  def predict_proba(self, y_score):\n-     # Original implementation (lines 123-137)\n+     return self._predict_proba_common(y_score, self)\n```\n\nSAFETY CHECKS:\n- Ensure helper function signature covers all use cases\n- Verify all parameters are properly passed\n- Run tests to confirm behavior is preserved"", ""functions"": [{""name"": ""predict_proba"", ""class_name"": ""PlattCalibrator"", ""line_start"": 57, ""line_end"": 69, ""signature"": ""(self, y_score)""}, {""name"": ""predict_proba"", ""class_name"": ""IsotonicCalibrator"", ""line_start"": 123, ""line_end"": 137, ""signature"": ""(self, y_score)""}], ""mini_diff"": ""```diff\n+ def _predict_proba_common(y_score, self):\n+     \""\""\""Common functionality extracted from predict_proba.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def predict_proba(self, y_score):\n-     # Original implementation (lines 57-69)\n+     return self._predict_proba_common(y_score, self)\n\n  def predict_proba(self, y_score):\n-     # Original implementation (lines 123-137)\n+     return self._predict_proba_common(y_score, self)\n```"", ""stable_id"": ""TC_context_window_thrashing_5eb891429a3461e8_bd2c1fb1"", ""content_hash"": ""5eb891429a3461e8"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector_transform/hierarchical.py,179,179,0,,context_window_thrashing,3,1.00,Context-window thrashing cluster: 7 similar functions (primary: __init__),"MERGE DUPLICATES: Functions separated by many lines often duplicate logic.
1. Use IDE's 'Find Similar Code' feature
2. Extract common patterns to module top
3. Add cross-references in docstrings | PREVENT CONTEXT LOSS:
- Keep related functions together
- Use descriptive names that indicate relationships
- Add 'See Also' sections in docstrings
- Create a module-level docstring describing all functions | ORGANIZE CODE:
```python
# Group related functionality
class DataProcessor:
    """"""Groups all data processing functions.""""""

    @staticmethod
    def process_type_a(data):
        """"""Process type A data.""""""
        pass

    @staticmethod
    def process_type_b(data):
        """"""Process type B data (similar to type A).""""""
        pass
```","{""cluster_id"": ""CWT_001"", ""similarity"": 0.902839220864972, ""line_distance"": 71, ""suggested_helper"": ""_init_common"", ""function_count"": 5, ""issue_count"": 7, ""extract_playbook"": ""EXTRACT HELPER PLAYBOOK: _init_common\n==================================================\n\nFunctions: __init__ (line 179) and __init__ (line 250)\nSimilarity: 90.3%\nLine distance: 71 lines\n\nSUGGESTED REFACTORING:\n1. Extract common functionality to _init_common()\n2. Replace duplicate code with calls to _init_common()\n3. Merge both __init__ paths using the helper\n\nMINI-DIFF PREVIEW:\n```diff\n+ def _init_common(input_dim, output_dim, self):\n+     \""\""\""Common functionality extracted from __init__.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def __init__(self, input_dim, output_dim):\n-     # Original implementation (lines 179-190)\n+     return self._init_common(input_dim, output_dim, self)\n\n  def __init__(self, input_dim, output_dim):\n-     # Original implementation (lines 250-260)\n+     return self._init_common(input_dim, output_dim, self)\n```\n\nSAFETY CHECKS:\n- Ensure helper function signature covers all use cases\n- Verify all parameters are properly passed\n- Run tests to confirm behavior is preserved"", ""functions"": [{""name"": ""__init__"", ""class_name"": ""HierarchicalEncoder"", ""line_start"": 250, ""line_end"": 260, ""signature"": ""(self, input_dim, output_dim)""}, {""name"": ""__init__"", ""class_name"": ""HierarchicalEncoder"", ""line_start"": 338, ""line_end"": 346, ""signature"": ""(self, input_dim, output_dim)""}, {""name"": ""__init__"", ""class_name"": ""HierarchicalEncoder"", ""line_start"": 216, ""line_end"": 229, ""signature"": ""(self, input_dim, output_dim)""}, {""name"": ""__init__"", ""class_name"": ""HierarchicalEncoder"", ""line_start"": 179, ""line_end"": 190, ""signature"": ""(self, input_dim, output_dim)""}, {""name"": ""__init__"", ""class_name"": ""HierarchicalEncoder"", ""line_start"": 287, ""line_end"": 304, ""signature"": ""(self, input_dim, output_dim)""}], ""mini_diff"": ""```diff\n+ def _init_common(input_dim, output_dim, self):\n+     \""\""\""Common functionality extracted from __init__.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def __init__(self, input_dim, output_dim):\n-     # Original implementation (lines 179-190)\n+     return self._init_common(input_dim, output_dim, self)\n\n  def __init__(self, input_dim, output_dim):\n-     # Original implementation (lines 250-260)\n+     return self._init_common(input_dim, output_dim, self)\n```"", ""stable_id"": ""TC_context_window_thrashing_22aada42f48ab383_ae32acdd"", ""content_hash"": ""22aada42f48ab383"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector_transform/hierarchical.py,231,231,0,,context_window_thrashing,3,1.00,Context-window thrashing cluster: 6 similar functions (primary: forward),"MERGE DUPLICATES: Functions separated by many lines often duplicate logic.
1. Use IDE's 'Find Similar Code' feature
2. Extract common patterns to module top
3. Add cross-references in docstrings | PREVENT CONTEXT LOSS:
- Keep related functions together
- Use descriptive names that indicate relationships
- Add 'See Also' sections in docstrings
- Create a module-level docstring describing all functions | ORGANIZE CODE:
```python
# Group related functionality
class DataProcessor:
    """"""Groups all data processing functions.""""""

    @staticmethod
    def process_type_a(data):
        """"""Process type A data.""""""
        pass

    @staticmethod
    def process_type_b(data):
        """"""Process type B data (similar to type A).""""""
        pass
```","{""cluster_id"": ""CWT_002"", ""similarity"": 0.9599048340002163, ""line_distance"": 117, ""suggested_helper"": ""_forward_common"", ""function_count"": 5, ""issue_count"": 6, ""extract_playbook"": ""EXTRACT HELPER PLAYBOOK: _forward_common\n==================================================\n\nFunctions: forward (line 231) and forward (line 348)\nSimilarity: 96.0%\nLine distance: 117 lines\n\nSUGGESTED REFACTORING:\n1. Extract common functionality to _forward_common()\n2. Replace duplicate code with calls to _forward_common()\n3. Merge both forward paths using the helper\n\nMINI-DIFF PREVIEW:\n```diff\n+ def _forward_common(x, self):\n+     \""\""\""Common functionality extracted from forward.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def forward(self, x):\n-     # Original implementation (lines 231-240)\n+     return self._forward_common(x, self)\n\n  def forward(self, x):\n-     # Original implementation (lines 348-357)\n+     return self._forward_common(x, self)\n```\n\nSAFETY CHECKS:\n- Ensure helper function signature covers all use cases\n- Verify all parameters are properly passed\n- Run tests to confirm behavior is preserved"", ""functions"": [{""name"": ""forward"", ""class_name"": ""HierarchicalEncoder"", ""line_start"": 231, ""line_end"": 240, ""signature"": ""(self, x)""}, {""name"": ""forward"", ""class_name"": ""HierarchicalEncoder"", ""line_start"": 262, ""line_end"": 277, ""signature"": ""(self, x)""}, {""name"": ""forward"", ""class_name"": ""HierarchicalEncoder"", ""line_start"": 192, ""line_end"": 205, ""signature"": ""(self, x)""}, {""name"": ""forward"", ""class_name"": ""HierarchicalEncoder"", ""line_start"": 348, ""line_end"": 357, ""signature"": ""(self, x)""}, {""name"": ""forward"", ""class_name"": ""HierarchicalEncoder"", ""line_start"": 306, ""line_end"": 328, ""signature"": ""(self, x)""}], ""mini_diff"": ""```diff\n+ def _forward_common(x, self):\n+     \""\""\""Common functionality extracted from forward.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def forward(self, x):\n-     # Original implementation (lines 231-240)\n+     return self._forward_common(x, self)\n\n  def forward(self, x):\n-     # Original implementation (lines 348-357)\n+     return self._forward_common(x, self)\n```"", ""stable_id"": ""TC_context_window_thrashing_477c4124cb42dbca_111ce38d"", ""content_hash"": ""477c4124cb42dbca"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/drift_detection.py,526,526,0,,context_window_thrashing,3,1.00,Context-window thrashing cluster: 6 similar functions (primary: __init__),"MERGE DUPLICATES: Functions separated by many lines often duplicate logic.
1. Use IDE's 'Find Similar Code' feature
2. Extract common patterns to module top
3. Add cross-references in docstrings | PREVENT CONTEXT LOSS:
- Keep related functions together
- Use descriptive names that indicate relationships
- Add 'See Also' sections in docstrings
- Create a module-level docstring describing all functions | ORGANIZE CODE:
```python
# Group related functionality
class DataProcessor:
    """"""Groups all data processing functions.""""""

    @staticmethod
    def process_type_a(data):
        """"""Process type A data.""""""
        pass

    @staticmethod
    def process_type_b(data):
        """"""Process type B data (similar to type A).""""""
        pass
```","{""cluster_id"": ""CWT_001"", ""similarity"": 1.0, ""line_distance"": 62, ""suggested_helper"": ""_init_common"", ""function_count"": 4, ""issue_count"": 6, ""extract_playbook"": ""EXTRACT HELPER PLAYBOOK: _init_common\n==================================================\n\nFunctions: __init__ (line 526) and __init__ (line 588)\nSimilarity: 100.0%\nLine distance: 62 lines\n\nSUGGESTED REFACTORING:\n1. Extract common functionality to _init_common()\n2. Replace duplicate code with calls to _init_common()\n3. Merge both __init__ paths using the helper\n\nMINI-DIFF PREVIEW:\n```diff\n+ def _init_common(baseline_stats, self):\n+     \""\""\""Common functionality extracted from __init__.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def __init__(self, baseline_stats):\n-     # Original implementation (lines 526-532)\n+     return self._init_common(baseline_stats, self)\n\n  def __init__(self, baseline_stats):\n-     # Original implementation (lines 588-594)\n+     return self._init_common(baseline_stats, self)\n```\n\nSAFETY CHECKS:\n- Ensure helper function signature covers all use cases\n- Verify all parameters are properly passed\n- Run tests to confirm behavior is preserved"", ""functions"": [{""name"": ""__init__"", ""class_name"": ""PerformanceDriftDetector"", ""line_start"": 647, ""line_end"": 654, ""signature"": ""(self, baseline_stats)""}, {""name"": ""__init__"", ""class_name"": ""CovariateShiftDetector"", ""line_start"": 526, ""line_end"": 532, ""signature"": ""(self, baseline_stats)""}, {""name"": ""__init__"", ""class_name"": ""SemanticDriftDetector"", ""line_start"": 697, ""line_end"": 704, ""signature"": ""(self, baseline_stats)""}, {""name"": ""__init__"", ""class_name"": ""PredictionDriftDetector"", ""line_start"": 588, ""line_end"": 594, ""signature"": ""(self, baseline_stats)""}], ""mini_diff"": ""```diff\n+ def _init_common(baseline_stats, self):\n+     \""\""\""Common functionality extracted from __init__.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def __init__(self, baseline_stats):\n-     # Original implementation (lines 526-532)\n+     return self._init_common(baseline_stats, self)\n\n  def __init__(self, baseline_stats):\n-     # Original implementation (lines 588-594)\n+     return self._init_common(baseline_stats, self)\n```"", ""stable_id"": ""TC_context_window_thrashing_623cb378bb725308_48a617a6"", ""content_hash"": ""623cb378bb725308"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/drift_detection.py,596,596,0,,context_window_thrashing,2,1.00,Context-window thrashing cluster: 6 similar functions (primary: detect_drift),"MERGE DUPLICATES: Functions separated by many lines often duplicate logic.
1. Use IDE's 'Find Similar Code' feature
2. Extract common patterns to module top
3. Add cross-references in docstrings | PREVENT CONTEXT LOSS:
- Keep related functions together
- Use descriptive names that indicate relationships
- Add 'See Also' sections in docstrings
- Create a module-level docstring describing all functions | ORGANIZE CODE:
```python
# Group related functionality
class DataProcessor:
    """"""Groups all data processing functions.""""""

    @staticmethod
    def process_type_a(data):
        """"""Process type A data.""""""
        pass

    @staticmethod
    def process_type_b(data):
        """"""Process type B data (similar to type A).""""""
        pass
```","{""cluster_id"": ""CWT_002"", ""similarity"": 0.7738700825415559, ""line_distance"": 60, ""suggested_helper"": ""_detect_drift_common"", ""function_count"": 4, ""issue_count"": 6, ""extract_playbook"": ""EXTRACT HELPER PLAYBOOK: _detect_drift_common\n==================================================\n\nFunctions: detect_drift (line 596) and detect_drift (line 656)\nSimilarity: 77.4%\nLine distance: 60 lines\n\nSUGGESTED REFACTORING:\n1. Extract common functionality to _detect_drift_common()\n2. Replace duplicate code with calls to _detect_drift_common()\n3. Merge both detect_drift paths using the helper\n\nMINI-DIFF PREVIEW:\n```diff\n+ def _detect_drift_common(prediction_window, feature_windows, model_internal_state, self, performance_window):\n+     \""\""\""Common functionality extracted from detect_drift.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def detect_drift(self, prediction_window, feature_windows, performance_window, model_internal_state):\n-     # Original implementation (lines 596-641)\n+     return self._detect_drift_common(prediction_window, feature_windows, model_internal_state, self, performance_window)\n\n  def detect_drift(self, prediction_window, feature_windows, performance_window, model_internal_state):\n-     # Original implementation (lines 656-691)\n+     return self._detect_drift_common(prediction_window, feature_windows, model_internal_state, self, performance_window)\n```\n\nSAFETY CHECKS:\n- Ensure helper function signature covers all use cases\n- Verify all parameters are properly passed\n- Run tests to confirm behavior is preserved"", ""functions"": [{""name"": ""detect_drift"", ""class_name"": ""CovariateShiftDetector"", ""line_start"": 534, ""line_end"": 582, ""signature"": ""(self, prediction_window, feature_windows, performance_window, model_internal_state)""}, {""name"": ""detect_drift"", ""class_name"": ""PerformanceDriftDetector"", ""line_start"": 656, ""line_end"": 691, ""signature"": ""(self, prediction_window, feature_windows, performance_window, model_internal_state)""}, {""name"": ""detect_drift"", ""class_name"": ""SemanticDriftDetector"", ""line_start"": 706, ""line_end"": 736, ""signature"": ""(self, prediction_window, feature_windows, performance_window, model_internal_state)""}, {""name"": ""detect_drift"", ""class_name"": ""PredictionDriftDetector"", ""line_start"": 596, ""line_end"": 641, ""signature"": ""(self, prediction_window, feature_windows, performance_window, model_internal_state)""}], ""mini_diff"": ""```diff\n+ def _detect_drift_common(prediction_window, feature_windows, model_internal_state, self, performance_window):\n+     \""\""\""Common functionality extracted from detect_drift.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def detect_drift(self, prediction_window, feature_windows, performance_window, model_internal_state):\n-     # Original implementation (lines 596-641)\n+     return self._detect_drift_common(prediction_window, feature_windows, model_internal_state, self, performance_window)\n\n  def detect_drift(self, prediction_window, feature_windows, performance_window, model_internal_state):\n-     # Original implementation (lines 656-691)\n+     return self._detect_drift_common(prediction_window, feature_windows, model_internal_state, self, performance_window)\n```"", ""stable_id"": ""TC_context_window_thrashing_9a89aad8f6c510db_4ade7df6"", ""content_hash"": ""9a89aad8f6c510db"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/pir/it_pir_protocol.py,39,39,0,,context_window_thrashing,3,1.00,"Context-window thrashing: __init__() at lines 39 and 266 (71.8% similar, 227 lines apart)","MERGE DUPLICATES: Functions separated by many lines often duplicate logic.
1. Use IDE's 'Find Similar Code' feature
2. Extract common patterns to module top
3. Add cross-references in docstrings | PREVENT CONTEXT LOSS:
- Keep related functions together
- Use descriptive names that indicate relationships
- Add 'See Also' sections in docstrings
- Create a module-level docstring describing all functions | ORGANIZE CODE:
```python
# Group related functionality
class DataProcessor:
    """"""Groups all data processing functions.""""""

    @staticmethod
    def process_type_a(data):
        """"""Process type A data.""""""
        pass

    @staticmethod
    def process_type_b(data):
        """"""Process type B data (similar to type A).""""""
        pass
```","{""cluster_id"": ""CWT_001"", ""similarity"": 0.7183333333333333, ""line_distance"": 227, ""suggested_helper"": ""_init_common"", ""function_count"": 2, ""issue_count"": 1, ""extract_playbook"": ""EXTRACT HELPER PLAYBOOK: _init_common\n==================================================\n\nFunctions: __init__ (line 39) and __init__ (line 266)\nSimilarity: 71.8%\nLine distance: 227 lines\n\nSUGGESTED REFACTORING:\n1. Extract common functionality to _init_common()\n2. Replace duplicate code with calls to _init_common()\n3. Merge both __init__ paths using the helper\n\nMINI-DIFF PREVIEW:\n```diff\n+ def _init_common(params, self):\n+     \""\""\""Common functionality extracted from __init__.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def __init__(self, params):\n-     # Original implementation (lines 39-47)\n+     return self._init_common(params, self)\n\n  def __init__(self, params):\n-     # Original implementation (lines 266-273)\n+     return self._init_common(params, self)\n```\n\nSAFETY CHECKS:\n- Ensure helper function signature covers all use cases\n- Verify all parameters are properly passed\n- Run tests to confirm behavior is preserved"", ""functions"": [{""name"": ""__init__"", ""class_name"": ""PIRProtocol"", ""line_start"": 39, ""line_end"": 47, ""signature"": ""(self, params)""}, {""name"": ""__init__"", ""class_name"": ""BatchPIRProtocol"", ""line_start"": 266, ""line_end"": 273, ""signature"": ""(self, params)""}], ""mini_diff"": ""```diff\n+ def _init_common(params, self):\n+     \""\""\""Common functionality extracted from __init__.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def __init__(self, params):\n-     # Original implementation (lines 39-47)\n+     return self._init_common(params, self)\n\n  def __init__(self, params):\n-     # Original implementation (lines 266-273)\n+     return self._init_common(params, self)\n```"", ""stable_id"": ""TC_context_window_thrashing_604acc0dcf18e2c2_140c9314"", ""content_hash"": ""604acc0dcf18e2c2"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/base_genomic.py,115,115,0,,context_window_thrashing,2,1.00,"Context-window thrashing: generate_witness() at lines 115 and 166 (82.1% similar, 51 lines apart)","MERGE DUPLICATES: Functions separated by many lines often duplicate logic.
1. Use IDE's 'Find Similar Code' feature
2. Extract common patterns to module top
3. Add cross-references in docstrings | PREVENT CONTEXT LOSS:
- Keep related functions together
- Use descriptive names that indicate relationships
- Add 'See Also' sections in docstrings
- Create a module-level docstring describing all functions | ORGANIZE CODE:
```python
# Group related functionality
class DataProcessor:
    """"""Groups all data processing functions.""""""

    @staticmethod
    def process_type_a(data):
        """"""Process type A data.""""""
        pass

    @staticmethod
    def process_type_b(data):
        """"""Process type B data (similar to type A).""""""
        pass
```","{""cluster_id"": ""CWT_001"", ""similarity"": 0.8210178113936666, ""line_distance"": 51, ""suggested_helper"": ""_generate_witness_common"", ""function_count"": 2, ""issue_count"": 1, ""extract_playbook"": ""EXTRACT HELPER PLAYBOOK: _generate_witness_common\n==================================================\n\nFunctions: generate_witness (line 115) and generate_witness (line 166)\nSimilarity: 82.1%\nLine distance: 51 lines\n\nSUGGESTED REFACTORING:\n1. Extract common functionality to _generate_witness_common()\n2. Replace duplicate code with calls to _generate_witness_common()\n3. Merge both generate_witness paths using the helper\n\nMINI-DIFF PREVIEW:\n```diff\n+ def _generate_witness_common(data, self):\n+     \""\""\""Common functionality extracted from generate_witness.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def generate_witness(self, data):\n-     # Original implementation (lines 115-121)\n+     return self._generate_witness_common(data, self)\n\n  def generate_witness(self, data):\n-     # Original implementation (lines 166-172)\n+     return self._generate_witness_common(data, self)\n```\n\nSAFETY CHECKS:\n- Ensure helper function signature covers all use cases\n- Verify all parameters are properly passed\n- Run tests to confirm behavior is preserved"", ""functions"": [{""name"": ""generate_witness"", ""class_name"": ""PharmacogenomicCircuit"", ""line_start"": 166, ""line_end"": 172, ""signature"": ""(self, data)""}, {""name"": ""generate_witness"", ""class_name"": ""AncestryCompositionCircuit"", ""line_start"": 115, ""line_end"": 121, ""signature"": ""(self, data)""}], ""mini_diff"": ""```diff\n+ def _generate_witness_common(data, self):\n+     \""\""\""Common functionality extracted from generate_witness.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def generate_witness(self, data):\n-     # Original implementation (lines 115-121)\n+     return self._generate_witness_common(data, self)\n\n  def generate_witness(self, data):\n-     # Original implementation (lines 166-172)\n+     return self._generate_witness_common(data, self)\n```"", ""stable_id"": ""TC_context_window_thrashing_33bde6f51d78ce9e_8c8eac01"", ""content_hash"": ""33bde6f51d78ce9e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/biological/multi_omics.py,36,36,0,,context_window_thrashing,3,1.00,Context-window thrashing cluster: 3 similar functions (primary: __init__),"MERGE DUPLICATES: Functions separated by many lines often duplicate logic.
1. Use IDE's 'Find Similar Code' feature
2. Extract common patterns to module top
3. Add cross-references in docstrings | PREVENT CONTEXT LOSS:
- Keep related functions together
- Use descriptive names that indicate relationships
- Add 'See Also' sections in docstrings
- Create a module-level docstring describing all functions | ORGANIZE CODE:
```python
# Group related functionality
class DataProcessor:
    """"""Groups all data processing functions.""""""

    @staticmethod
    def process_type_a(data):
        """"""Process type A data.""""""
        pass

    @staticmethod
    def process_type_b(data):
        """"""Process type B data (similar to type A).""""""
        pass
```","{""cluster_id"": ""CWT_001"", ""similarity"": 0.7711535881958417, ""line_distance"": 138, ""suggested_helper"": ""_init_common"", ""function_count"": 3, ""issue_count"": 3, ""extract_playbook"": ""EXTRACT HELPER PLAYBOOK: _init_common\n==================================================\n\nFunctions: __init__ (line 36) and __init__ (line 174)\nSimilarity: 77.1%\nLine distance: 138 lines\n\nSUGGESTED REFACTORING:\n1. Extract common functionality to _init_common()\n2. Replace duplicate code with calls to _init_common()\n3. Merge both __init__ paths using the helper\n\nMINI-DIFF PREVIEW:\n```diff\n+ def _init_common(self, max_dimensions=None, max_samples=None):\n+     \""\""\""Common functionality extracted from __init__.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def __init__(self, max_dimensions):\n-     # Original implementation (lines 36-43)\n+     return self._init_common(self)\n\n  def __init__(self, max_samples):\n-     # Original implementation (lines 174-181)\n+     return self._init_common(self)\n```\n\nSAFETY CHECKS:\n- Ensure helper function signature covers all use cases\n- Verify all parameters are properly passed\n- Run tests to confirm behavior is preserved"", ""functions"": [{""name"": ""__init__"", ""class_name"": ""MultiOmicsCorrelationCircuit"", ""line_start"": 36, ""line_end"": 43, ""signature"": ""(self, max_dimensions)""}, {""name"": ""__init__"", ""class_name"": ""RareVariantBurdenCircuit"", ""line_start"": 396, ""line_end"": 403, ""signature"": ""(self, max_variants_per_gene)""}, {""name"": ""__init__"", ""class_name"": ""GenotypePhenotypeAssociationCircuit"", ""line_start"": 174, ""line_end"": 181, ""signature"": ""(self, max_samples)""}], ""mini_diff"": ""```diff\n+ def _init_common(self, max_dimensions=None, max_samples=None):\n+     \""\""\""Common functionality extracted from __init__.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def __init__(self, max_dimensions):\n-     # Original implementation (lines 36-43)\n+     return self._init_common(self)\n\n  def __init__(self, max_samples):\n-     # Original implementation (lines 174-181)\n+     return self._init_common(self)\n```"", ""stable_id"": ""TC_context_window_thrashing_e80b31e7407643e3_420401d8"", ""content_hash"": ""e80b31e7407643e3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/biological/multi_omics.py,183,183,0,,context_window_thrashing,3,1.00,Context-window thrashing cluster: 6 similar functions (primary: setup),"MERGE DUPLICATES: Functions separated by many lines often duplicate logic.
1. Use IDE's 'Find Similar Code' feature
2. Extract common patterns to module top
3. Add cross-references in docstrings | PREVENT CONTEXT LOSS:
- Keep related functions together
- Use descriptive names that indicate relationships
- Add 'See Also' sections in docstrings
- Create a module-level docstring describing all functions | ORGANIZE CODE:
```python
# Group related functionality
class DataProcessor:
    """"""Groups all data processing functions.""""""

    @staticmethod
    def process_type_a(data):
        """"""Process type A data.""""""
        pass

    @staticmethod
    def process_type_b(data):
        """"""Process type B data (similar to type A).""""""
        pass
```","{""cluster_id"": ""CWT_002"", ""similarity"": 0.8855298709096366, ""line_distance"": 222, ""suggested_helper"": ""_setup_common"", ""function_count"": 4, ""issue_count"": 6, ""extract_playbook"": ""EXTRACT HELPER PLAYBOOK: _setup_common\n==================================================\n\nFunctions: setup (line 183) and setup (line 405)\nSimilarity: 88.6%\nLine distance: 222 lines\n\nSUGGESTED REFACTORING:\n1. Extract common functionality to _setup_common()\n2. Replace duplicate code with calls to _setup_common()\n3. Merge both setup paths using the helper\n\nMINI-DIFF PREVIEW:\n```diff\n+ def _setup_common(self, private_inputs, public_inputs):\n+     \""\""\""Common functionality extracted from setup.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def setup(self, public_inputs, private_inputs):\n-     # Original implementation (lines 183-195)\n+     return self._setup_common(self, private_inputs, public_inputs)\n\n  def setup(self, public_inputs, private_inputs):\n-     # Original implementation (lines 405-420)\n+     return self._setup_common(self, private_inputs, public_inputs)\n```\n\nSAFETY CHECKS:\n- Ensure helper function signature covers all use cases\n- Verify all parameters are properly passed\n- Run tests to confirm behavior is preserved"", ""functions"": [{""name"": ""setup"", ""class_name"": ""RareVariantBurdenCircuit"", ""line_start"": 405, ""line_end"": 420, ""signature"": ""(self, public_inputs, private_inputs)""}, {""name"": ""setup"", ""class_name"": ""MultiOmicsCorrelationCircuit"", ""line_start"": 45, ""line_end"": 61, ""signature"": ""(self, public_inputs, private_inputs)""}, {""name"": ""setup"", ""class_name"": ""GenotypePhenotypeAssociationCircuit"", ""line_start"": 183, ""line_end"": 195, ""signature"": ""(self, public_inputs, private_inputs)""}, {""name"": ""setup"", ""class_name"": ""ClinicalTrialEligibilityCircuit"", ""line_start"": 300, ""line_end"": 311, ""signature"": ""(self, public_inputs, private_inputs)""}], ""mini_diff"": ""```diff\n+ def _setup_common(self, private_inputs, public_inputs):\n+     \""\""\""Common functionality extracted from setup.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def setup(self, public_inputs, private_inputs):\n-     # Original implementation (lines 183-195)\n+     return self._setup_common(self, private_inputs, public_inputs)\n\n  def setup(self, public_inputs, private_inputs):\n-     # Original implementation (lines 405-420)\n+     return self._setup_common(self, private_inputs, public_inputs)\n```"", ""stable_id"": ""TC_context_window_thrashing_a53d49b9ad41ec62_b04a0935"", ""content_hash"": ""a53d49b9ad41ec62"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/circuits/biological/multi_omics.py,197,197,0,,context_window_thrashing,3,1.00,Context-window thrashing cluster: 6 similar functions (primary: generate_constraints),"MERGE DUPLICATES: Functions separated by many lines often duplicate logic.
1. Use IDE's 'Find Similar Code' feature
2. Extract common patterns to module top
3. Add cross-references in docstrings | PREVENT CONTEXT LOSS:
- Keep related functions together
- Use descriptive names that indicate relationships
- Add 'See Also' sections in docstrings
- Create a module-level docstring describing all functions | ORGANIZE CODE:
```python
# Group related functionality
class DataProcessor:
    """"""Groups all data processing functions.""""""

    @staticmethod
    def process_type_a(data):
        """"""Process type A data.""""""
        pass

    @staticmethod
    def process_type_b(data):
        """"""Process type B data (similar to type A).""""""
        pass
```","{""cluster_id"": ""CWT_003"", ""similarity"": 0.8553639040807741, ""line_distance"": 116, ""suggested_helper"": ""_generate_constraints_common"", ""function_count"": 4, ""issue_count"": 6, ""extract_playbook"": ""EXTRACT HELPER PLAYBOOK: _generate_constraints_common\n==================================================\n\nFunctions: generate_constraints (line 197) and generate_constraints (line 313)\nSimilarity: 85.5%\nLine distance: 116 lines\n\nSUGGESTED REFACTORING:\n1. Extract common functionality to _generate_constraints_common()\n2. Replace duplicate code with calls to _generate_constraints_common()\n3. Merge both generate_constraints paths using the helper\n\nMINI-DIFF PREVIEW:\n```diff\n+ def _generate_constraints_common(self):\n+     \""\""\""Common functionality extracted from generate_constraints.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def generate_constraints(self):\n-     # Original implementation (lines 197-213)\n+     return self._generate_constraints_common(self)\n\n  def generate_constraints(self):\n-     # Original implementation (lines 313-332)\n+     return self._generate_constraints_common(self)\n```\n\nSAFETY CHECKS:\n- Ensure helper function signature covers all use cases\n- Verify all parameters are properly passed\n- Run tests to confirm behavior is preserved"", ""functions"": [{""name"": ""generate_constraints"", ""class_name"": ""RareVariantBurdenCircuit"", ""line_start"": 422, ""line_end"": 447, ""signature"": ""(self)""}, {""name"": ""generate_constraints"", ""class_name"": ""GenotypePhenotypeAssociationCircuit"", ""line_start"": 197, ""line_end"": 213, ""signature"": ""(self)""}, {""name"": ""generate_constraints"", ""class_name"": ""ClinicalTrialEligibilityCircuit"", ""line_start"": 313, ""line_end"": 332, ""signature"": ""(self)""}, {""name"": ""generate_constraints"", ""class_name"": ""MultiOmicsCorrelationCircuit"", ""line_start"": 63, ""line_end"": 83, ""signature"": ""(self)""}], ""mini_diff"": ""```diff\n+ def _generate_constraints_common(self):\n+     \""\""\""Common functionality extracted from generate_constraints.\""\""\""\n+     # TODO: Implement common logic here\n+     pass\n\n  def generate_constraints(self):\n-     # Original implementation (lines 197-213)\n+     return self._generate_constraints_common(self)\n\n  def generate_constraints(self):\n-     # Original implementation (lines 313-332)\n+     return self._generate_constraints_common(self)\n```"", ""stable_id"": ""TC_context_window_thrashing_6b55962674743d6a_d4f30ad6"", ""content_hash"": ""6b55962674743d6a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/comprehensive_cleanup.py,33,33,0,,function_coupling_risk,3,1.00,High coupling risk between ComprehensiveCleanup.__init__ and ComprehensiveCleanup.log_fix,Review function_coupling_risk issue at /Users/rohanvinaik/genomevault/devtools/comprehensive_cleanup.py:33 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""element1"": {""name"": ""ComprehensiveCleanup.__init__"", ""file"": ""/Users/rohanvinaik/genomevault/devtools/comprehensive_cleanup.py"", ""line"": 33, ""type"": ""method""}, ""element2"": {""name"": ""ComprehensiveCleanup.log_fix"", ""file"": ""/Users/rohanvinaik/genomevault/devtools/comprehensive_cleanup.py"", ""line"": 38, ""type"": ""method""}, ""contact_probability"": 0.4472135954999579, ""similarity"": 0.46, ""thrash_risk"": 0.20571825392998067, ""polymer_distance"": 0.047749999999999994, ""stable_id"": ""TC_function_coupling_risk_59a7e6e6427e047f_de92faed"", ""content_hash"": ""59a7e6e6427e047f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/genomevault_autofix.py,56,56,0,,enhanced_placeholder,3,1.00,Function 'parse_args' implies logic but has complexity 1 in parse_args,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/devtools/genomevault_autofix.py:56 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""parse_args"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'parse_args' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": true, ""implies_logic"": true, ""called_by"": [""main"", ""parse_args"", ""TailchasingCLI.run""], ""stable_id"": ""TC_enhanced_placeholder_9fa4bf667aa8fe39_287ba2ed"", ""content_hash"": ""9fa4bf667aa8fe39"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/green_toolchain_impl.py,27,27,0,,enhanced_placeholder,2,1.00,Function 'validate_current_state' implies logic but has complexity 1 in GreenToolchainImplementer.validate_current_state,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/devtools/green_toolchain_impl.py:27 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""validate_current_state"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'validate_current_state' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_5b632076feaab6f4_7bdff054"", ""content_hash"": ""5b632076feaab6f4"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/test_autofix_example.py,29,29,0,,enhanced_placeholder,1,1.00,Function contains only 'pass' in another_operation,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/devtools/test_autofix_example.py:29 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""another_operation"", ""pattern_type"": ""pass_only"", ""description"": ""Function contains only 'pass'"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": false, ""stable_id"": ""TC_enhanced_placeholder_887cdc7022edff5f_2233e9ae"", ""content_hash"": ""887cdc7022edff5f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/test_autofix_example.py,40,40,0,,enhanced_placeholder,2,1.00,Function 'process_data' implies logic but has complexity 1 in process_data,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/devtools/test_autofix_example.py:40 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""process_data"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'process_data' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_ee3179362efb079c_a93e66f1"", ""content_hash"": ""ee3179362efb079c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_ee3179362efb079c_3fefddf3""]}"
devtools/test_autofix_example.py,49,49,0,,enhanced_placeholder,1,1.00,Function contains only 'pass' in initialize_something,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/devtools/test_autofix_example.py:49 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""initialize_something"", ""pattern_type"": ""pass_only"", ""description"": ""Function contains only 'pass'"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": false, ""stable_id"": ""TC_enhanced_placeholder_ec241f7897a8883c_2cf48604"", ""content_hash"": ""ec241f7897a8883c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
examples/basic_usage.py,34,34,0,,enhanced_placeholder,3,1.00,Function 'process_genomic_data_example' implies logic but has complexity 1 in process_genomic_data_example,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/examples/basic_usage.py:34 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""process_genomic_data_example"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'process_genomic_data_example' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": true, ""implies_logic"": true, ""called_by"": [""main""], ""stable_id"": ""TC_enhanced_placeholder_378ea073675dbc8f_58a7e73c"", ""content_hash"": ""378ea073675dbc8f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_378ea073675dbc8f_e45015e8""]}"
examples/basic_usage.py,106,106,0,,enhanced_placeholder,3,1.00,Function 'process_clinical_data_example' implies logic but has complexity 1 in process_clinical_data_example,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/examples/basic_usage.py:106 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""process_clinical_data_example"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'process_clinical_data_example' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": true, ""implies_logic"": true, ""called_by"": [""main""], ""stable_id"": ""TC_enhanced_placeholder_cede3d2ae7fb2a07_7b79ddb3"", ""content_hash"": ""cede3d2ae7fb2a07"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_cede3d2ae7fb2a07_8dd8c453""]}"
examples/hdc_pir_integration_demo.py,205,205,0,,enhanced_placeholder,3,1.00,Function 'calculate_privacy_guarantee' implies logic but has complexity 1 in MockPIRClient.calculate_privacy_guarantee,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/examples/hdc_pir_integration_demo.py:205 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""calculate_privacy_guarantee"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'calculate_privacy_guarantee' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_47eb3975890a5d72_38291c62"", ""content_hash"": ""47eb3975890a5d72"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_47eb3975890a5d72_131ccbf2""]}"
examples/integration_example.py,22,22,0,,enhanced_placeholder,3,1.00,Function 'process_and_encode_genome' implies logic but has complexity 1 in process_and_encode_genome,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/examples/integration_example.py:22 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""process_and_encode_genome"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'process_and_encode_genome' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": true, ""implies_logic"": true, ""called_by"": [""main""], ""stable_id"": ""TC_enhanced_placeholder_06934ef42982ca91_c9e1b9f0"", ""content_hash"": ""06934ef42982ca91"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_06934ef42982ca91_643060f1""]}"
examples/orphan_disease_workflow.py,288,288,0,,enhanced_placeholder,3,1.00,Function '_check_trial_eligibility' implies logic but has complexity 1 in OrphanDiseaseResearchDemo._check_trial_eligibility,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/examples/orphan_disease_workflow.py:288 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_check_trial_eligibility"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_check_trial_eligibility' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_fe154bb44c0b208a_05474b1e"", ""content_hash"": ""fe154bb44c0b208a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_fe154bb44c0b208a_4305a4c7""]}"
examples/proof_of_training_demo.py,301,301,0,,enhanced_placeholder,2,1.00,Function 'verify_training_proof' implies logic but has complexity 1 in verify_training_proof,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/examples/proof_of_training_demo.py:301 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""verify_training_proof"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'verify_training_proof' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_4a899e4ebac10311_68f997bf"", ""content_hash"": ""4a899e4ebac10311"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_4a899e4ebac10311_1a5ec27a""]}"
genomevault/advanced_analysis/federated_learning/coordinator.py,242,242,0,,enhanced_placeholder,3,1.00,Function 'compute_privacy_spent' implies logic but has complexity 1 in DifferentialPrivacyEngine.compute_privacy_spent,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/advanced_analysis/federated_learning/coordinator.py:242 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""compute_privacy_spent"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'compute_privacy_spent' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_ebb5e8ebd69df2d2_26e7c238"", ""content_hash"": ""ebb5e8ebd69df2d2"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/advanced_analysis/federated_learning/coordinator.py,520,520,0,,enhanced_placeholder,3,1.00,Function '_calculate_round_metrics' implies logic but has complexity 1 in FederatedLearningCoordinator._calculate_round_metrics,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/advanced_analysis/federated_learning/coordinator.py:520 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_calculate_round_metrics"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_calculate_round_metrics' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_f520d117d137f4ee_c0295926"", ""content_hash"": ""f520d117d137f4ee"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/advanced_analysis/federated_learning/coordinator.py,656,656,0,,enhanced_placeholder,2,1.00,Function 'preprocess_genomic_data' implies logic but has complexity 1 in GenomicPRSFederatedLearning.preprocess_genomic_data,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/advanced_analysis/federated_learning/coordinator.py:656 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""preprocess_genomic_data"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'preprocess_genomic_data' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_4d63937e7be2ac0c_d53589d0"", ""content_hash"": ""4d63937e7be2ac0c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/advanced_analysis/federated_learning/model_lineage.py,590,590,0,,enhanced_placeholder,2,1.00,Function 'compute_lineage_hash' implies logic but has complexity 1 in FederatedModelLineage.compute_lineage_hash,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/advanced_analysis/federated_learning/model_lineage.py:590 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""compute_lineage_hash"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'compute_lineage_hash' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_ef47db4242d49201_9218de08"", ""content_hash"": ""ef47db4242d49201"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_ef47db4242d49201_3055a286""]}"
genomevault/advanced_analysis/tda/persistence.py,45,45,0,,enhanced_placeholder,2,1.00,Function 'filter_by_persistence' implies logic but has complexity 1 in PersistenceDiagram.filter_by_persistence,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/advanced_analysis/tda/persistence.py:45 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""filter_by_persistence"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'filter_by_persistence' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_d17e755bf320f9af_ad0f54f0"", ""content_hash"": ""d17e755bf320f9af"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_d17e755bf320f9af_7a434770""]}"
genomevault/advanced_analysis/tda/persistence.py,431,431,0,,enhanced_placeholder,2,1.00,Function 'compute_dna_structural_signature' implies logic but has complexity 1 in StructuralSignatureAnalyzer.compute_dna_structural_signature,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/advanced_analysis/tda/persistence.py:431 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""compute_dna_structural_signature"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'compute_dna_structural_signature' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_e35650bd557c8477_c36e59b7"", ""content_hash"": ""e35650bd557c8477"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_e35650bd557c8477_0f1f3c78""]}"
genomevault/api/routers/ledger.py,45,45,0,,enhanced_placeholder,3,1.00,Function 'verify_chain' implies logic but has complexity 1 in verify_chain,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/api/routers/ledger.py:45 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""verify_chain"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'verify_chain' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": true, ""implies_logic"": true, ""called_by"": [""test_accumulator"", ""verify_chain""], ""stable_id"": ""TC_enhanced_placeholder_c4b2f4daadd0dca9_b9aa1c7e"", ""content_hash"": ""c4b2f4daadd0dca9"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_c4b2f4daadd0dca9_cd038137""]}"
genomevault/clinical/diabetes_pilot/risk_calculator.py,188,188,0,,enhanced_placeholder,3,1.00,Function '_has_risk_allele' implies logic but has complexity 1 in DiabetesRiskCalculator._has_risk_allele,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/clinical/diabetes_pilot/risk_calculator.py:188 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_has_risk_allele"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_has_risk_allele' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_8138aa13c992c045_16b05c9d"", ""content_hash"": ""8138aa13c992c045"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_8138aa13c992c045_2083e6b2""]}"
genomevault/clinical/diabetes_pilot/risk_calculator.py,426,426,0,,enhanced_placeholder,2,1.00,Function 'process_clinical_data' implies logic but has complexity 1 in ClinicalIntegration.process_clinical_data,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/clinical/diabetes_pilot/risk_calculator.py:426 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""process_clinical_data"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'process_clinical_data' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_1206c638738419ee_92c60bfe"", ""content_hash"": ""1206c638738419ee"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_1206c638738419ee_00e95887""]}"
genomevault/clinical/eval/harness.py,33,33,0,,enhanced_placeholder,3,1.00,Function 'compute_report' implies logic but has complexity 1 in compute_report,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/clinical/eval/harness.py:33 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""compute_report"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'compute_report' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": true, ""implies_logic"": true, ""called_by"": [""main"", ""clinical_eval""], ""stable_id"": ""TC_enhanced_placeholder_50912e9b1b09cd9e_83ae51e7"", ""content_hash"": ""50912e9b1b09cd9e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/clinical/model_validation.py,149,149,0,,enhanced_placeholder,3,1.00,Function 'validate_model' implies logic but has complexity 1 in ClinicalModelValidator.validate_model,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/clinical/model_validation.py:149 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""validate_model"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'validate_model' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_be62853289c4788d_f5b6cf9d"", ""content_hash"": ""be62853289c4788d"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/clinical/model_validation.py,432,432,0,,enhanced_placeholder,3,1.00,Function '_analyze_dataset' implies logic but has complexity 1 in ClinicalModelValidator._analyze_dataset,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/clinical/model_validation.py:432 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_analyze_dataset"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_analyze_dataset' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_f006429d0e1c702c_4755da0f"", ""content_hash"": ""f006429d0e1c702c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/crypto/hashing.py,60,60,0,,enhanced_placeholder,2,1.00,Function 'verify_hash' implies logic but has complexity 1 in verify_hash,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/crypto/hashing.py:60 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""verify_hash"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'verify_hash' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_98286fa530d6bbf7_3b9f6fb3"", ""content_hash"": ""98286fa530d6bbf7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_98286fa530d6bbf7_d75433c9""]}"
genomevault/experimental/pir_advanced/it_pir.py,335,335,0,,enhanced_placeholder,3,1.00,Function '_verify_response_proof' implies logic but has complexity 1 in RobustITPIR._verify_response_proof,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/experimental/pir_advanced/it_pir.py:335 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_verify_response_proof"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_verify_response_proof' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_c14fd169fd13882c_902ced9c"", ""content_hash"": ""c14fd169fd13882c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_c14fd169fd13882c_4176159b"", ""TC_enhanced_placeholder_c14fd169fd13882c_47c07d5e""]}"
genomevault/experimental/zk_circuits/catalytic_proof.py,69,69,0,,enhanced_placeholder,3,1.00,Function '_compute_fingerprint' implies logic but has complexity 1 in CatalyticSpace._compute_fingerprint,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/experimental/zk_circuits/catalytic_proof.py:69 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_compute_fingerprint"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_compute_fingerprint' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_eaba2ce9d74ce4e3_e12a6d4e"", ""content_hash"": ""eaba2ce9d74ce4e3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_eaba2ce9d74ce4e3_4967812f"", ""TC_enhanced_placeholder_eaba2ce9d74ce4e3_abeafb9f""]}"
genomevault/experimental/zk_circuits/stark_prover.py,174,174,0,,enhanced_placeholder,3,1.00,Function '_compute_query_count' implies logic but has complexity 1 in STARKProver._compute_query_count,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/experimental/zk_circuits/stark_prover.py:174 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_compute_query_count"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_compute_query_count' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_797103ef13ed7a9b_5849e5e8"", ""content_hash"": ""797103ef13ed7a9b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_797103ef13ed7a9b_0c8bef14"", ""TC_enhanced_placeholder_797103ef13ed7a9b_2bd1ceaf""]}"
genomevault/experimental/zk_circuits/stark_prover.py,956,956,0,,enhanced_placeholder,2,1.00,Function only returns constant: 7 in STARKProver._get_primitive_root,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/experimental/zk_circuits/stark_prover.py:956 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_get_primitive_root"", ""pattern_type"": ""return_constant"", ""description"": ""Function only returns constant: 7"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": false, ""stable_id"": ""TC_enhanced_placeholder_5e60d3ea9c0d07ef_9a9b03d2"", ""content_hash"": ""5e60d3ea9c0d07ef"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_5e60d3ea9c0d07ef_27a43278""]}"
genomevault/experimental/zk_circuits/stark_prover.py,1072,1072,0,,enhanced_placeholder,3,1.00,Function '_compute_fri_rounds' implies logic but has complexity 1 in STARKProver._compute_fri_rounds,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/experimental/zk_circuits/stark_prover.py:1072 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_compute_fri_rounds"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_compute_fri_rounds' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_d8a9fc30ebfd83a3_e5760c91"", ""content_hash"": ""d8a9fc30ebfd83a3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_d8a9fc30ebfd83a3_634da7e7"", ""TC_enhanced_placeholder_d8a9fc30ebfd83a3_5c4d6617""]}"
genomevault/hypervector_transform/binding_operations.py,116,116,0,,enhanced_placeholder,2,1.00,Function 'compute_binding_capacity' implies logic but has complexity 1 in HypervectorBinder.compute_binding_capacity,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/hypervector_transform/binding_operations.py:116 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""compute_binding_capacity"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'compute_binding_capacity' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_3fab5450565e066c_7ff8843e"", ""content_hash"": ""3fab5450565e066c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_3fab5450565e066c_254ea1b0""]}"
genomevault/hypervector_transform/mapping.py,109,109,0,,enhanced_placeholder,3,1.00,Function '_compute_similarities' implies logic but has complexity 1 in SimilarityPreservingMapper._compute_similarities,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/hypervector_transform/mapping.py:109 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_compute_similarities"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_compute_similarities' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_25b75db2fe95d299_43e293e0"", ""content_hash"": ""25b75db2fe95d299"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector_transform/mapping.py,189,189,0,,enhanced_placeholder,3,1.00,Function '_compute_angle' implies logic but has complexity 1 in SimilarityPreservingMapper._compute_angle,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/hypervector_transform/mapping.py:189 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_compute_angle"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_compute_angle' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_23911b5128769d8b_d45c3be2"", ""content_hash"": ""23911b5128769d8b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector_transform/mapping.py,276,276,0,,enhanced_placeholder,2,1.00,Function 'compute_biological_similarity' implies logic but has complexity 1 in BiologicalSimilarityMapper.compute_biological_similarity,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/hypervector_transform/mapping.py:276 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""compute_biological_similarity"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'compute_biological_similarity' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_e4d935935270a7b9_6db02c9d"", ""content_hash"": ""e4d935935270a7b9"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/ledger/store.py,35,35,0,,enhanced_placeholder,3,1.00,Function '_compute_hash' implies logic but has complexity 1 in InMemoryLedger._compute_hash,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/ledger/store.py:35 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_compute_hash"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_compute_hash' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_a617f1a9ef1190ac_94e5d667"", ""content_hash"": ""a617f1a9ef1190ac"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_a617f1a9ef1190ac_9d5e1eda""]}"
genomevault/local_processing/compression.py,48,48,0,,enhanced_placeholder,3,1.00,Function 'verify_checksum' implies logic but has complexity 1 in CompressedData.verify_checksum,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/compression.py:48 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""verify_checksum"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'verify_checksum' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_0545ca8ebf6e9098_d41b3e6b"", ""content_hash"": ""0545ca8ebf6e9098"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_0545ca8ebf6e9098_1f823e35""]}"
genomevault/local_processing/compression.py,419,419,0,,enhanced_placeholder,3,1.00,Function '_compute_cross_modal_features' implies logic but has complexity 1 in CompressionEngine._compute_cross_modal_features,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/compression.py:419 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_compute_cross_modal_features"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_compute_cross_modal_features' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_94396653e8fbec27_92e3dcd3"", ""content_hash"": ""94396653e8fbec27"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_94396653e8fbec27_fd6bc780""]}"
genomevault/local_processing/differential_privacy_audit.py,467,467,0,,enhanced_placeholder,3,1.00,Function '_compute_audit_hash' implies logic but has complexity 1 in DifferentialPrivacyAuditor._compute_audit_hash,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/differential_privacy_audit.py:467 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_compute_audit_hash"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_compute_audit_hash' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_9df78d989f7c0631_c72b1d44"", ""content_hash"": ""9df78d989f7c0631"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/phenotypes.py,635,635,0,,enhanced_placeholder,3,1.00,Function '_process_csv_data' implies logic but has complexity 1 in PhenotypeProcessor._process_csv_data,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/phenotypes.py:635 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_process_csv_data"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_process_csv_data' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_5e34f5056436210b_32d0c064"", ""content_hash"": ""5e34f5056436210b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_5e34f5056436210b_f73a10ef""]}"
genomevault/local_processing/phenotypes.py,651,651,0,,enhanced_placeholder,3,1.00,Function '_process_custom_data' implies logic but has complexity 1 in PhenotypeProcessor._process_custom_data,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/phenotypes.py:651 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_process_custom_data"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_process_custom_data' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_78a2cb5356735ffb_31ca55dc"", ""content_hash"": ""78a2cb5356735ffb"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_78a2cb5356735ffb_2e0454cd""]}"
genomevault/local_processing/pipeline.py,92,92,0,,enhanced_placeholder,3,1.00,Function '_process_single_omics' implies logic but has complexity 1 in MultiOmicsPipeline._process_single_omics,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/pipeline.py:92 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_process_single_omics"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_process_single_omics' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_ed20534585da7ea8_3d9e7bb8"", ""content_hash"": ""ed20534585da7ea8"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_ed20534585da7ea8_3b89d4a8""]}"
genomevault/local_processing/pipeline.py,122,122,0,,enhanced_placeholder,2,1.00,Function '_process_genomic' implies logic but has complexity 1 in MultiOmicsPipeline._process_genomic,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/pipeline.py:122 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_process_genomic"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_process_genomic' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_34dcc70aca874714_89f44fa3"", ""content_hash"": ""34dcc70aca874714"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_34dcc70aca874714_88cc4a50""]}"
genomevault/local_processing/pipeline.py,138,138,0,,enhanced_placeholder,2,1.00,Function '_process_transcriptomic' implies logic but has complexity 1 in MultiOmicsPipeline._process_transcriptomic,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/pipeline.py:138 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_process_transcriptomic"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_process_transcriptomic' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_ef4ac78606fd47b7_fc4414c4"", ""content_hash"": ""ef4ac78606fd47b7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_ef4ac78606fd47b7_0181e5a8""]}"
genomevault/local_processing/pipeline.py,154,154,0,,enhanced_placeholder,2,1.00,Function '_process_epigenetic' implies logic but has complexity 1 in MultiOmicsPipeline._process_epigenetic,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/pipeline.py:154 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_process_epigenetic"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_process_epigenetic' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_ba54c444f57d40e0_b9a8d10d"", ""content_hash"": ""ba54c444f57d40e0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_ba54c444f57d40e0_f4582994""]}"
genomevault/local_processing/pipeline.py,168,168,0,,enhanced_placeholder,2,1.00,Function '_process_proteomic' implies logic but has complexity 1 in MultiOmicsPipeline._process_proteomic,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/pipeline.py:168 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_process_proteomic"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_process_proteomic' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_b966e5558864fbe0_9fb79d66"", ""content_hash"": ""b966e5558864fbe0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_b966e5558864fbe0_779b7fab""]}"
genomevault/local_processing/proteomics.py,130,130,0,,enhanced_placeholder,2,1.00,Function 'filter_by_abundance' implies logic but has complexity 1 in ProteomicsProfile.filter_by_abundance,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/proteomics.py:130 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""filter_by_abundance"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'filter_by_abundance' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_4e5408818f70cf5d_fe428848"", ""content_hash"": ""4e5408818f70cf5d"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/proteomics.py,154,154,0,,enhanced_placeholder,2,1.00,Function 'calculate_pathway_enrichment' implies logic but has complexity 1 in ProteomicsProfile.calculate_pathway_enrichment,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/proteomics.py:154 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""calculate_pathway_enrichment"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'calculate_pathway_enrichment' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_054b292a60a2bfa2_546b3eed"", ""content_hash"": ""054b292a60a2bfa2"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/proteomics.py,356,356,0,,enhanced_placeholder,3,1.00,Function '_process_mzml' implies logic but has complexity 1 in ProteomicsProcessor._process_mzml,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/proteomics.py:356 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_process_mzml"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_process_mzml' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_a455279e6e94cbd0_4221035f"", ""content_hash"": ""a455279e6e94cbd0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/sequencing.py,75,75,0,,enhanced_placeholder,2,1.00,Function only returns constant: '{self.chromosome}:{self.position}:{self.reference}>{self.alternate}' in Variant.get_id,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/sequencing.py:75 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""get_id"", ""pattern_type"": ""return_constant"", ""description"": ""Function only returns constant: '{self.chromosome}:{self.position}:{self.reference}>{self.alternate}'"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": false, ""stable_id"": ""TC_enhanced_placeholder_e7e7a79ef33d2bf3_679e27c7"", ""content_hash"": ""e7e7a79ef33d2bf3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_e7e7a79ef33d2bf3_0202f55c""]}"
genomevault/local_processing/sequencing.py,96,96,0,,enhanced_placeholder,3,1.00,Function '_calculate_checksum' implies logic but has complexity 1 in GenomicProfile._calculate_checksum,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/sequencing.py:96 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_calculate_checksum"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_calculate_checksum' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_492fa69874ec1d2c_49cdd8f6"", ""content_hash"": ""492fa69874ec1d2c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_492fa69874ec1d2c_652e2e95""]}"
genomevault/pir/advanced/it_pir.py,337,337,0,,enhanced_placeholder,3,1.00,Function '_verify_response_proof' implies logic but has complexity 1 in RobustITPIR._verify_response_proof,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/pir/advanced/it_pir.py:337 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_verify_response_proof"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_verify_response_proof' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_c14fd169fd13882c_f939f64d"", ""content_hash"": ""c14fd169fd13882c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_c14fd169fd13882c_4176159b"", ""TC_enhanced_placeholder_c14fd169fd13882c_47c07d5e"", ""TC_enhanced_placeholder_c14fd169fd13882c_902ced9c""]}"
genomevault/pir/client/pir_client.py,237,237,0,,enhanced_placeholder,3,1.00,Function 'calculate_privacy_guarantee' implies logic but has complexity 1 in PIRClient.calculate_privacy_guarantee,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/pir/client/pir_client.py:237 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""calculate_privacy_guarantee"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'calculate_privacy_guarantee' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_aee3fab705f48b82_eb73f996"", ""content_hash"": ""aee3fab705f48b82"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_aee3fab705f48b82_d8fa7000""]}"
genomevault/pir/it_pir_protocol.py,224,224,0,,enhanced_placeholder,3,1.00,Function 'calculate_privacy_breach_probability' implies logic but has complexity 1 in PIRProtocol.calculate_privacy_breach_probability,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/pir/it_pir_protocol.py:224 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""calculate_privacy_breach_probability"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'calculate_privacy_breach_probability' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_eb4dc6f3eafe9947_c4b7c534"", ""content_hash"": ""eb4dc6f3eafe9947"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_eb4dc6f3eafe9947_2b99595c""]}"
genomevault/pir/it_pir_protocol.py,241,241,0,,enhanced_placeholder,3,1.00,Function 'calculate_min_servers' implies logic but has complexity 1 in PIRProtocol.calculate_min_servers,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/pir/it_pir_protocol.py:241 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""calculate_min_servers"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'calculate_min_servers' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_360c7f3563393f94_cd64e82a"", ""content_hash"": ""360c7f3563393f94"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_360c7f3563393f94_cd55c1b4""]}"
genomevault/pir/server/enhanced_pir_server.py,532,532,0,,enhanced_placeholder,3,1.00,Function '_process_annotation_query' implies logic but has complexity 1 in EnhancedPIRServer._process_annotation_query,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/pir/server/enhanced_pir_server.py:532 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_process_annotation_query"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_process_annotation_query' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_5085b7c31ad26024_9d70940e"", ""content_hash"": ""5085b7c31ad26024"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_5085b7c31ad26024_33a273ed""]}"
genomevault/pir/server/enhanced_pir_server.py,540,540,0,,enhanced_placeholder,3,1.00,Function '_process_graph_query' implies logic but has complexity 1 in EnhancedPIRServer._process_graph_query,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/pir/server/enhanced_pir_server.py:540 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_process_graph_query"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_process_graph_query' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_ee24ad49544cfcdb_aaa63ad2"", ""content_hash"": ""ee24ad49544cfcdb"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_ee24ad49544cfcdb_6aa6abac""]}"
genomevault/pir/server/handler.py,195,195,0,,enhanced_placeholder,2,1.00,Function 'handle_health' implies logic but has complexity 1 in PIRHandler.handle_health,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/pir/server/handler.py:195 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""handle_health"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'handle_health' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_300fff8919db3092_2f52e930"", ""content_hash"": ""300fff8919db3092"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_300fff8919db3092_4c96b9fd""]}"
genomevault/pir/server/handler.py,209,209,0,,enhanced_placeholder,2,1.00,Function 'handle_info' implies logic but has complexity 1 in PIRHandler.handle_info,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/pir/server/handler.py:209 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""handle_info"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'handle_info' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_2c840c56e6050f5d_5a8eb372"", ""content_hash"": ""2c840c56e6050f5d"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_2c840c56e6050f5d_4b0a1008""]}"
genomevault/pir/server/pir_server.py,300,300,0,,enhanced_placeholder,2,1.00,Function 'batch_process_queries' implies logic but has complexity 1 in PIRServer.batch_process_queries,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/pir/server/pir_server.py:300 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""batch_process_queries"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'batch_process_queries' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_20d3475d418a7015_28e24a8d"", ""content_hash"": ""20d3475d418a7015"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/pir/server/pir_server.py,437,437,0,,enhanced_placeholder,2,1.00,Function 'verify_hipaa_compliance' implies logic but has complexity 1 in TrustedSignatoryServer.verify_hipaa_compliance,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/pir/server/pir_server.py:437 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""verify_hipaa_compliance"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'verify_hipaa_compliance' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_036354630fecc92a_99994227"", ""content_hash"": ""036354630fecc92a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/pir/server/pir_server.py,459,459,0,,enhanced_placeholder,3,1.00,Function '_verify_baa' implies logic but has complexity 1 in TrustedSignatoryServer._verify_baa,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/pir/server/pir_server.py:459 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_verify_baa"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_verify_baa' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_a031f3a4c8d2fabd_fcc0e98b"", ""content_hash"": ""a031f3a4c8d2fabd"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/pir/server/pir_server.py,464,464,0,,enhanced_placeholder,3,1.00,Function '_verify_risk_analysis' implies logic but has complexity 1 in TrustedSignatoryServer._verify_risk_analysis,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/pir/server/pir_server.py:464 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_verify_risk_analysis"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_verify_risk_analysis' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_b2ec80c554b3cb4f_2c38495c"", ""content_hash"": ""b2ec80c554b3cb4f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/pir/server/pir_server.py,469,469,0,,enhanced_placeholder,3,1.00,Function only returns constant: True in TrustedSignatoryServer._verify_hsm,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/pir/server/pir_server.py:469 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_verify_hsm"", ""pattern_type"": ""return_constant"", ""description"": ""Function only returns constant: True"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_e7dc9582e3bf4790_f9acfecb"", ""content_hash"": ""e7dc9582e3bf4790"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/backup.py,534,534,0,,enhanced_placeholder,2,1.00,Function only returns constant: True in DisasterRecoveryOrchestrator._restore_component_data,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/utils/backup.py:534 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_restore_component_data"", ""pattern_type"": ""return_constant"", ""description"": ""Function only returns constant: True"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": false, ""stable_id"": ""TC_enhanced_placeholder_b05ce6cf6d95def2_d2d75abd"", ""content_hash"": ""b05ce6cf6d95def2"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/config.py,345,345,0,,enhanced_placeholder,2,1.00,Function only returns constant: None in _StubSecrets.get,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/utils/config.py:345 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""get"", ""pattern_type"": ""return_constant"", ""description"": ""Function only returns constant: None"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": false, ""stable_id"": ""TC_enhanced_placeholder_f957685c00afbc3e_1a751d98"", ""content_hash"": ""f957685c00afbc3e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_f957685c00afbc3e_7925571e""]}"
genomevault/utils/config.py,390,390,0,,enhanced_placeholder,2,1.00,Function 'calculate_pir_failure_probability' implies logic but has complexity 1 in Config.calculate_pir_failure_probability,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/utils/config.py:390 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""calculate_pir_failure_probability"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'calculate_pir_failure_probability' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_cc697d3c0aa172ef_ce070ac6"", ""content_hash"": ""cc697d3c0aa172ef"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_cc697d3c0aa172ef_27a9939c""]}"
genomevault/utils/post_quantum_crypto.py,89,89,0,,enhanced_placeholder,2,1.00,Function only returns constant: True in MockDilithium.verify,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/utils/post_quantum_crypto.py:89 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""verify"", ""pattern_type"": ""return_constant"", ""description"": ""Function only returns constant: True"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": false, ""stable_id"": ""TC_enhanced_placeholder_c95bcc961c2dfac9_1e2c4b94"", ""content_hash"": ""c95bcc961c2dfac9"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/security_monitor.py,260,260,0,,enhanced_placeholder,3,1.00,Function '_handle_brute_force' implies logic but has complexity 1 in SecurityMonitor._handle_brute_force,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/utils/security_monitor.py:260 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_handle_brute_force"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_handle_brute_force' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_25eef63dd7be4a18_bd04701c"", ""content_hash"": ""25eef63dd7be4a18"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/security_monitor.py,288,288,0,,enhanced_placeholder,3,1.00,Function '_handle_anomaly' implies logic but has complexity 1 in SecurityMonitor._handle_anomaly,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/utils/security_monitor.py:288 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_handle_anomaly"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_handle_anomaly' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_0d6843f5a46956f2_b9b56da3"", ""content_hash"": ""0d6843f5a46956f2"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/security_monitor.py,363,363,0,,enhanced_placeholder,3,1.00,Function '_calculate_severity' implies logic but has complexity 1 in SecurityMonitor._calculate_severity,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/utils/security_monitor.py:363 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_calculate_severity"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_calculate_severity' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_68dcb21716083269_a04712b1"", ""content_hash"": ""68dcb21716083269"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/advanced/catalytic_proof.py,68,68,0,,enhanced_placeholder,3,1.00,Function '_compute_fingerprint' implies logic but has complexity 1 in CatalyticSpace._compute_fingerprint,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/catalytic_proof.py:68 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_compute_fingerprint"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_compute_fingerprint' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_eaba2ce9d74ce4e3_164f2d7b"", ""content_hash"": ""eaba2ce9d74ce4e3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_eaba2ce9d74ce4e3_4967812f"", ""TC_enhanced_placeholder_eaba2ce9d74ce4e3_abeafb9f"", ""TC_enhanced_placeholder_eaba2ce9d74ce4e3_e12a6d4e""]}"
genomevault/zk_proofs/advanced/catalytic_space_writelog.py,66,66,0,,enhanced_placeholder,3,1.00,Function '_compute_fingerprint' implies logic but has complexity 1 in CatalyticSpaceWriteLog._compute_fingerprint,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/catalytic_space_writelog.py:66 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_compute_fingerprint"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_compute_fingerprint' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_4e068f2f558f71b5_01b5d132"", ""content_hash"": ""4e068f2f558f71b5"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_4e068f2f558f71b5_db1e0894""]}"
genomevault/zk_proofs/circuits/base_genomic.py,28,28,0,,enhanced_placeholder,2,1.00,Function only returns empty dict in BaseGenomicCircuit.generate_witness,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/base_genomic.py:28 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""generate_witness"", ""pattern_type"": ""return_empty"", ""description"": ""Function only returns empty dict"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": false, ""stable_id"": ""TC_enhanced_placeholder_62873535e4dd3255_716ccc1b"", ""content_hash"": ""62873535e4dd3255"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_62873535e4dd3255_946e3eb8""]}"
genomevault/zk_proofs/circuits/base_genomic.py,65,65,0,,enhanced_placeholder,3,1.00,Function '_compute_proof' implies logic but has complexity 1 in BaseGenomicCircuit._compute_proof,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/base_genomic.py:65 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_compute_proof"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_compute_proof' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_726e9b7f3b151e8b_a5eb55c1"", ""content_hash"": ""726e9b7f3b151e8b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_726e9b7f3b151e8b_f41eb0c6""]}"
genomevault/zk_proofs/circuits/base_genomic.py,92,92,0,,enhanced_placeholder,3,1.00,Function 'verify_proof' implies logic but has complexity 1 in BaseGenomicCircuit.verify_proof,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/base_genomic.py:92 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""verify_proof"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'verify_proof' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_b5fb8f01db5d1f0e_4af26e61"", ""content_hash"": ""b5fb8f01db5d1f0e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_b5fb8f01db5d1f0e_f4361676""]}"
genomevault/zk_proofs/circuits/biological/multi_omics.py,131,131,0,,enhanced_placeholder,3,1.00,Function '_calculate_t_statistic' implies logic but has complexity 1 in MultiOmicsCorrelationCircuit._calculate_t_statistic,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/biological/multi_omics.py:131 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_calculate_t_statistic"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_calculate_t_statistic' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_848553d739d21ef6_132765ca"", ""content_hash"": ""848553d739d21ef6"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_848553d739d21ef6_e2d4419a""]}"
genomevault/zk_proofs/circuits/biological/multi_omics.py,449,449,0,,enhanced_placeholder,3,1.00,Function '_check_rare_variant' implies logic but has complexity 1 in RareVariantBurdenCircuit._check_rare_variant,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/biological/multi_omics.py:449 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_check_rare_variant"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_check_rare_variant' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_8c073b621f8f5c8b_04c13387"", ""content_hash"": ""8c073b621f8f5c8b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_8c073b621f8f5c8b_d5876151""]}"
genomevault/zk_proofs/circuits/implementations/constraint_system.py,269,269,0,,enhanced_placeholder,3,1.00,Function 'enforce_constraint' implies logic but has complexity 1 in ConstraintSystem.enforce_constraint,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/constraint_system.py:269 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""enforce_constraint"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'enforce_constraint' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_d2104e88449ae417_d99858a0"", ""content_hash"": ""d2104e88449ae417"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_d2104e88449ae417_4bdc057b""]}"
genomevault/zk_proofs/circuits/implementations/constraint_system.py,273,273,0,,enhanced_placeholder,3,1.00,Function 'enforce_equal' implies logic but has complexity 1 in ConstraintSystem.enforce_equal,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/constraint_system.py:273 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""enforce_equal"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'enforce_equal' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_4763b6ad17bd8860_e4507767"", ""content_hash"": ""4763b6ad17bd8860"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_4763b6ad17bd8860_86bbc0ca""]}"
genomevault/zk_proofs/circuits/implementations/constraint_system.py,291,291,0,,enhanced_placeholder,3,1.00,Function 'enforce_multiplication' implies logic but has complexity 1 in ConstraintSystem.enforce_multiplication,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/constraint_system.py:291 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""enforce_multiplication"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'enforce_multiplication' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_4a07455bf9ee9dd9_0fe3c49f"", ""content_hash"": ""4a07455bf9ee9dd9"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_4a07455bf9ee9dd9_ed5b359b""]}"
genomevault/zk_proofs/circuits/implementations/constraint_system.py,305,305,0,,enhanced_placeholder,3,1.00,Function 'enforce_boolean' implies logic but has complexity 1 in ConstraintSystem.enforce_boolean,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/constraint_system.py:305 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""enforce_boolean"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'enforce_boolean' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_b1414d8454a63c02_7fdc45a5"", ""content_hash"": ""b1414d8454a63c02"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_b1414d8454a63c02_3ea50a9e""]}"
genomevault/zk_proofs/circuits/implementations/variant_proof_circuit.py,266,266,0,,enhanced_placeholder,2,1.00,Function 'verify_constraints' implies logic but has complexity 1 in VariantProofCircuit.verify_constraints,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/variant_proof_circuit.py:266 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""verify_constraints"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function 'verify_constraints' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_d20884aff32486c4_84c59817"", ""content_hash"": ""d20884aff32486c4"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_enhanced_placeholder_d20884aff32486c4_8cb02eb1""]}"
scripts/bench_hdc.py,449,449,0,,enhanced_placeholder,3,1.00,Function '_calculate_summary' implies logic but has complexity 1 in HDCBenchmark._calculate_summary,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/scripts/bench_hdc.py:449 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_calculate_summary"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_calculate_summary' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_fc23c738cb5d360e_abd299e9"", ""content_hash"": ""fc23c738cb5d360e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/test_stub_fixes.py,90,90,0,,enhanced_placeholder,2,1.00,Function only returns constant: 'test' in test_function,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/scripts/test_stub_fixes.py:90 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""test_function"", ""pattern_type"": ""return_constant"", ""description"": ""Function only returns constant: 'test'"", ""complexity"": 1, ""is_called"": true, ""implies_logic"": false, ""called_by"": [""test_imports"", ""FederatedLearningCoordinator.evaluate_model""], ""stable_id"": ""TC_enhanced_placeholder_98768586bfaaca0a_d18c02c4"", ""content_hash"": ""98768586bfaaca0a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
tailchasing/calibrate.py,319,319,0,,enhanced_placeholder,3,1.00,Function '_calculate_token_distance' implies logic but has complexity 1 in CalibrationTool._calculate_token_distance,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/tailchasing/calibrate.py:319 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_calculate_token_distance"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_calculate_token_distance' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_2d51cf18eb4d5a77_5934b272"", ""content_hash"": ""2d51cf18eb4d5a77"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
tailchasing/calibrate.py,325,325,0,,enhanced_placeholder,3,1.00,Function '_calculate_ast_distance' implies logic but has complexity 1 in CalibrationTool._calculate_ast_distance,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/tailchasing/calibrate.py:325 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_calculate_ast_distance"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_calculate_ast_distance' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_28b7740e46fde959_f6c58716"", ""content_hash"": ""28b7740e46fde959"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
tailchasing/calibrate.py,331,331,0,,enhanced_placeholder,3,1.00,Function '_calculate_module_distance' implies logic but has complexity 1 in CalibrationTool._calculate_module_distance,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/tailchasing/calibrate.py:331 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_calculate_module_distance"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_calculate_module_distance' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_ca3106cb3833a4a9_7a390a81"", ""content_hash"": ""ca3106cb3833a4a9"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
tailchasing/calibrate.py,338,338,0,,enhanced_placeholder,3,1.00,Function '_calculate_git_distance' implies logic but has complexity 1 in CalibrationTool._calculate_git_distance,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/tailchasing/calibrate.py:338 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_calculate_git_distance"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_calculate_git_distance' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_eefe759d86f47c1d_44f06ed0"", ""content_hash"": ""eefe759d86f47c1d"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
tailchasing/cli.py,227,227,0,,enhanced_placeholder,3,1.00,Function '_handle_validate_command' implies logic but has complexity 1 in TailchasingCLI._handle_validate_command,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/tailchasing/cli.py:227 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_handle_validate_command"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_handle_validate_command' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_2d3458718d238952_4daceede"", ""content_hash"": ""2d3458718d238952"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
tailchasing/cli.py,233,233,0,,enhanced_placeholder,3,1.00,Function '_handle_analyze_command' implies logic but has complexity 1 in TailchasingCLI._handle_analyze_command,Review enhanced_placeholder issue at /Users/rohanvinaik/genomevault/tailchasing/cli.py:233 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""function_name"": ""_handle_analyze_command"", ""pattern_type"": ""low_complexity_logic"", ""description"": ""Function '_handle_analyze_command' implies logic but has complexity 1"", ""complexity"": 1, ""is_called"": false, ""implies_logic"": true, ""stable_id"": ""TC_enhanced_placeholder_f6fe5e78ea9dbf25_5e1c69f6"", ""content_hash"": ""f6fe5e78ea9dbf25"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
benchmarks/benchmark_packed_hypervector.py,20,20,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/benchmarks/benchmark_packed_hypervector.py:20 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""A"", ""T"", ""G"", ""C""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_046d535ec3f424e1_18ab6957"", ""content_hash"": ""046d535ec3f424e1"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_046d535ec3f424e1_f0869df5"", ""TC_llm_filler_sequence_046d535ec3f424e1_acab769e"", ""TC_llm_filler_sequence_046d535ec3f424e1_c66cac6c"", ""TC_llm_filler_sequence_046d535ec3f424e1_bceea731""]}"
comprehensive_fix.py,440,440,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/comprehensive_fix.py:440 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""ruff"", ""check"", ""."", ""--statistics""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_448b23f57b28110b_bda51099"", ""content_hash"": ""448b23f57b28110b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_448b23f57b28110b_3647f472"", ""TC_llm_filler_sequence_448b23f57b28110b_1c28f23d""]}"
comprehensive_fix.py,137,137,0,,llm_filler_json,3,1.00,JSON data contains placeholder/filler content,Review llm_filler_json issue at /Users/rohanvinaik/genomevault/comprehensive_fix.py:137 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""json_keys"": [], ""filler_type"": ""json_placeholders"", ""stable_id"": ""TC_llm_filler_json_b29648658c569d84_4f931878"", ""content_hash"": ""b29648658c569d84"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_json_b29648658c569d84_5f4cec9d""]}"
devtools/comprehensive_cleanup.py,686,686,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/comprehensive_cleanup.py:686 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""genomevault/zk_proofs/verifier.py"", ""genomevault/zk_proofs/circuits/base_circuits.py"", ""genomevault/clinical/calibration.py""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_fd70f895e166cbe7_48df0eb6"", ""content_hash"": ""fd70f895e166cbe7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/comprehensive_cleanup.py,824,824,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/comprehensive_cleanup.py:824 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""1. Update Ruff configuration"", ""2. Triage library code from examples/tooling"", ""3. Fix undefined-name (F821) errors"", ""4. Handle redefinition and import-order issues"", ""5. Clean up tooling scripts"", ""6. Fix syntax errors"", ""7. Validate with available tools""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_1b820b0746b7705e_49a36bd1"", ""content_hash"": ""1b820b0746b7705e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/comprehensive_cleanup.py,110,110,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/comprehensive_cleanup.py:110 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""ruff"", ""check"", ""--version""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_7b88b6e80b86b50b_5796d103"", ""content_hash"": ""7b88b6e80b86b50b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/comprehensive_cleanup.py,67,67,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/comprehensive_cleanup.py:67 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": ["""", ""Command timed out""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_fe2f1f1ac1e0fa30_0c7b25b7"", ""content_hash"": ""fe2f1f1ac1e0fa30"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/comprehensive_cleanup.py,69,69,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/comprehensive_cleanup.py:69 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_a05550de6c84952b_67ea15d3"", ""content_hash"": ""a05550de6c84952b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_a05550de6c84952b_9ca98665"", ""TC_llm_filler_sequence_a05550de6c84952b_f1bc9c18"", ""TC_llm_filler_sequence_a05550de6c84952b_00d0799a""]}"
devtools/comprehensive_status.py,112,112,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/comprehensive_status.py:112 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""ruff"", ""check"", ""--help""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_ab2e2fd249e32b25_4474a8b8"", ""content_hash"": ""ab2e2fd249e32b25"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_ab2e2fd249e32b25_2d74667d""]}"
devtools/comprehensive_status.py,148,148,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/comprehensive_status.py:148 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""python"", ""-c"", ""\nimport os\nimport py_compile\nfrom pathlib import Path\n\nsuccess_count = 0\ntotal_count = 0\n\nfor py_file in Path('genomevault').rglob('*.py'):\n    if 'test' in str(py_file) or 'tools' in str(py_file):\n        continue\n    total_count += 1\n    try:\n        py_compile.compile(py_file, doraise=True)\n        success_count += 1\n    except:\n        pass\n\nlogger.info(f'Syntax check: {success_count}/{total_count} files compile successfully')\n        ""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_ab1aeeaa8b18f8a2_a70404e9"", ""content_hash"": ""ab1aeeaa8b18f8a2"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/comprehensive_status.py,95,95,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/comprehensive_status.py:95 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""python"", ""-c""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_c8ce8584c1f5a7cc_9363365a"", ""content_hash"": ""c8ce8584c1f5a7cc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_c8ce8584c1f5a7cc_e935a10e"", ""TC_llm_filler_sequence_c8ce8584c1f5a7cc_912c09f1""]}"
devtools/enhanced_cleanup.py,854,854,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/enhanced_cleanup.py:854 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""genomevault/core"", ""genomevault/hypervector"", ""genomevault/utils""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_22b147e08aafb39f_485c2fbc"", ""content_hash"": ""22b147e08aafb39f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/enhanced_cleanup.py,884,884,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/enhanced_cleanup.py:884 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""genomevault.core"", ""genomevault.hypervector"", ""genomevault.utils""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_bc46715fa664dc24_310a035a"", ""content_hash"": ""bc46715fa664dc24"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/enhanced_cleanup.py,1186,1186,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/enhanced_cleanup.py:1186 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""1. Run: ruff check . --statistics (should show significant reduction)"", ""2. Test imports: python -c 'import genomevault.core.exceptions'"", ""3. Run: python -m py_compile genomevault/core/*.py"", ""4. Review any remaining F821 errors in ZK proof modules"", ""5. Set up pre-commit hooks for continuous enforcement""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_e7bfa1c296d3ffd2_76e29630"", ""content_hash"": ""e7bfa1c296d3ffd2"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/enhanced_cleanup.py,1426,1426,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/enhanced_cleanup.py:1426 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""0. Create essential stub modules"", ""1. Update Ruff configuration"", ""2. Triage library code from examples/tooling"", ""3. Fix undefined-name (F821) errors"", ""4. Handle redefinition and import-order issues"", ""5. Clean up tooling scripts"", ""6. Fix syntax errors"", ""7. Validate with available tools""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_a9d1dc61d5c3ee6f_5e60c5ba"", ""content_hash"": ""a9d1dc61d5c3ee6f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/enhanced_cleanup.py,874,874,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/enhanced_cleanup.py:874 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""ruff"", ""check"", ""."", ""--statistics""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_448b23f57b28110b_3647f472"", ""content_hash"": ""448b23f57b28110b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_448b23f57b28110b_1c28f23d"", ""TC_llm_filler_sequence_448b23f57b28110b_bda51099""]}"
devtools/enhanced_cleanup.py,104,104,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/enhanced_cleanup.py:104 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_a05550de6c84952b_9ca98665"", ""content_hash"": ""a05550de6c84952b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_a05550de6c84952b_f1bc9c18"", ""TC_llm_filler_sequence_a05550de6c84952b_00d0799a"", ""TC_llm_filler_sequence_a05550de6c84952b_67ea15d3""]}"
devtools/enhanced_cleanup.py,106,106,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/enhanced_cleanup.py:106 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_a05550de6c84952b_f1bc9c18"", ""content_hash"": ""a05550de6c84952b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_a05550de6c84952b_00d0799a"", ""TC_llm_filler_sequence_a05550de6c84952b_67ea15d3"", ""TC_llm_filler_sequence_a05550de6c84952b_9ca98665""]}"
devtools/enhanced_cleanup.py,108,108,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/enhanced_cleanup.py:108 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_a05550de6c84952b_00d0799a"", ""content_hash"": ""a05550de6c84952b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_a05550de6c84952b_67ea15d3"", ""TC_llm_filler_sequence_a05550de6c84952b_9ca98665"", ""TC_llm_filler_sequence_a05550de6c84952b_f1bc9c18""]}"
devtools/enhanced_cleanup.py,629,629,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/enhanced_cleanup.py:629 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""python"", ""-c""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_c8ce8584c1f5a7cc_e935a10e"", ""content_hash"": ""c8ce8584c1f5a7cc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_c8ce8584c1f5a7cc_912c09f1"", ""TC_llm_filler_sequence_c8ce8584c1f5a7cc_9363365a""]}"
devtools/enhanced_cleanup.py,893,893,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/enhanced_cleanup.py:893 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""python"", ""-c""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_c8ce8584c1f5a7cc_912c09f1"", ""content_hash"": ""c8ce8584c1f5a7cc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_c8ce8584c1f5a7cc_9363365a"", ""TC_llm_filler_sequence_c8ce8584c1f5a7cc_e935a10e""]}"
devtools/final_validation.py,35,35,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/final_validation.py:35 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""ruff"", ""check"", ""--help""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_ab2e2fd249e32b25_2d74667d"", ""content_hash"": ""ab2e2fd249e32b25"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_ab2e2fd249e32b25_4474a8b8""]}"
devtools/final_validation.py,45,45,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/final_validation.py:45 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""ruff"", ""check"", ""."", ""--statistics""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_448b23f57b28110b_1c28f23d"", ""content_hash"": ""448b23f57b28110b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_448b23f57b28110b_bda51099"", ""TC_llm_filler_sequence_448b23f57b28110b_3647f472""]}"
devtools/focused_cleanup.py,470,470,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/focused_cleanup.py:470 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""genomevault/core/exceptions.py"", ""genomevault/exceptions.py"", ""genomevault/zk_proofs/circuits/base_circuits.py"", ""genomevault/zk_proofs/post_quantum.py""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_53feaafcef9f3fc5_59df6ea6"", ""content_hash"": ""53feaafcef9f3fc5"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/focused_green_impl.py,30,30,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/focused_green_impl.py:30 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""ruff"", ""check"", "".""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_ad93d10bb2c0589b_99650f04"", ""content_hash"": ""ad93d10bb2c0589b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/focused_green_impl.py,38,38,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/focused_green_impl.py:38 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""mypy"", ""genomevault/hypervector"", ""genomevault/core""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_c98d2f3ac9f1fdb2_ebc0c2f1"", ""content_hash"": ""c98d2f3ac9f1fdb2"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/focused_green_impl.py,48,48,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/focused_green_impl.py:48 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""pytest"", ""-q"", ""--tb=short""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_bb6d4d5cf0e5a37e_c7b57d41"", ""content_hash"": ""bb6d4d5cf0e5a37e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/generate_comparison_report.py,58,58,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/generate_comparison_report.py:58 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""Total files"", ""files_total"", ""files_total""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_521c0fdbb763fdc7_9655d005"", ""content_hash"": ""521c0fdbb763fdc7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/generate_comparison_report.py,59,59,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/generate_comparison_report.py:59 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""Python files"", ""py_files"", ""py_files""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_ef580d5ff726cd74_358dc015"", ""content_hash"": ""ef580d5ff726cd74"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/generate_comparison_report.py,60,60,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/generate_comparison_report.py:60 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""Test files"", ""tests_detected"", ""tests_detected""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_1ccf5f41229a2a38_8647eeae"", ""content_hash"": ""1ccf5f41229a2a38"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/generate_comparison_report.py,61,61,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/generate_comparison_report.py:61 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""Has pyproject.toml"", ""has_pyproject"", ""has_pyproject""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_ad0a59eaa767b2dd_c9cbbf3c"", ""content_hash"": ""ad0a59eaa767b2dd"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/generate_comparison_report.py,62,62,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/generate_comparison_report.py:62 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""Has requirements.txt"", ""has_requirements"", ""has_requirements""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_76c8b0ca7b399b7b_6ece4fc5"", ""content_hash"": ""76c8b0ca7b399b7b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/generate_comparison_report.py,63,63,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/generate_comparison_report.py:63 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""Has README.md"", ""has_readme"", ""has_readme""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_657c79927ac09bbd_64e4cbbe"", ""content_hash"": ""657c79927ac09bbd"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/genomevault_autofix.py,500,500,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/genomevault_autofix.py:500 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""ok""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_e6c2aaac8defdcd4_d7e59e29"", ""content_hash"": ""e6c2aaac8defdcd4"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_e6c2aaac8defdcd4_65e2d830""]}"
devtools/genomevault_cleanup.py,97,97,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/genomevault_cleanup.py:97 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""genomevault_autofix.py"", ""green_toolchain_impl.py"", ""quick_fix_init_files.py""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_f944c6249daa6c47_5516ca56"", ""content_hash"": ""f944c6249daa6c47"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/preflight_check.py,42,42,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/preflight_check.py:42 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""genomevault/blockchain/contracts"", ""genomevault/blockchain/node"", ""genomevault/cli"", ""genomevault/clinical"", ""genomevault/clinical/diabetes_pilot"", ""genomevault/federation"", ""genomevault/governance"", ""genomevault/kan"", ""genomevault/pir/reference_data"", ""genomevault/zk_proofs/examples""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_8b6db876e8d1e72c_2e24e7a9"", ""content_hash"": ""8b6db876e8d1e72c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_8b6db876e8d1e72c_7e16d33a""]}"
devtools/proper_ruff_upgrade.py,128,128,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/proper_ruff_upgrade.py:128 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""ruff"", ""check"", ""."", ""--quiet""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_7379311d0ff7c749_3da843c7"", ""content_hash"": ""7379311d0ff7c749"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_7379311d0ff7c749_c1dbbf60""]}"
devtools/quick_fix_init_files.py,14,14,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/quick_fix_init_files.py:14 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""genomevault/blockchain/contracts"", ""genomevault/blockchain/node"", ""genomevault/cli"", ""genomevault/clinical"", ""genomevault/clinical/diabetes_pilot"", ""genomevault/federation"", ""genomevault/governance"", ""genomevault/kan"", ""genomevault/pir/reference_data"", ""genomevault/zk_proofs/examples""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_8b6db876e8d1e72c_7e16d33a"", ""content_hash"": ""8b6db876e8d1e72c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_8b6db876e8d1e72c_2e24e7a9""]}"
devtools/setup_dev.py,140,140,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/setup_dev.py:140 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""-m"", ""venv""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_d721e63dffaa15af_14b9503e"", ""content_hash"": ""d721e63dffaa15af"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/setup_dev.py,193,193,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/setup_dev.py:193 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""install"", ""-e""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_fe52784a011e3e04_1b72b5f8"", ""content_hash"": ""fe52784a011e3e04"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/setup_dev.py,229,229,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/setup_dev.py:229 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""install"", ""pre-commit""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_ae4465eb32632308_c84ea3da"", ""content_hash"": ""ae4465eb32632308"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
devtools/upgrade_ruff.py,108,108,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/devtools/upgrade_ruff.py:108 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""ruff"", ""check"", ""."", ""--quiet""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_7379311d0ff7c749_c1dbbf60"", ""content_hash"": ""7379311d0ff7c749"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_7379311d0ff7c749_3da843c7""]}"
examples/demo_hypervector_encoding.py,357,357,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/examples/demo_hypervector_encoding.py:357 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""BRCA1_c.5266dupC"", ""CFTR_F508del"", ""HBB_c.20A>T""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_16840f5b9ae761cc_ad647725"", ""content_hash"": ""16840f5b9ae761cc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_16840f5b9ae761cc_244c1e7f""]}"
examples/hdc_error_tuning_example.py,24,24,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/examples/hdc_error_tuning_example.py:24 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""Fast""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_2b7dbf9e06bdd015_aefe888e"", ""content_hash"": ""2b7dbf9e06bdd015"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_2b7dbf9e06bdd015_527deba3""]}"
examples/hdc_error_tuning_example.py,25,25,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/examples/hdc_error_tuning_example.py:25 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""Balanced""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_2829fa7a856777d3_edfeb025"", ""content_hash"": ""2829fa7a856777d3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_2829fa7a856777d3_9d04d4fd""]}"
examples/hdc_error_tuning_example.py,26,26,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/examples/hdc_error_tuning_example.py:26 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""Clinical""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_00d1e7d845739af1_6b57b497"", ""content_hash"": ""00d1e7d845739af1"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_00d1e7d845739af1_aefe888e""]}"
examples/hdc_pir_integration_demo.py,58,58,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/examples/hdc_pir_integration_demo.py:58 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""pir-server-1.genomevault.io:50051"", ""pir-server-2.genomevault.io:50052"", ""pir-server-3.genomevault.io:50053"", ""pir-server-4.genomevault.io:50054"", ""pir-server-5.genomevault.io:50055""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_241084ae5d9b6c89_f9c225ac"", ""content_hash"": ""241084ae5d9b6c89"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_241084ae5d9b6c89_d3d140cf""]}"
examples/hdc_pir_integration_demo.py,157,157,0,,llm_filler_text,2,1.00,Suspiciously low entropy in text (likely synthetic),Review llm_filler_text issue at /Users/rohanvinaik/genomevault/examples/hdc_pir_integration_demo.py:157 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""text_snippet"": ""--------|----------|-----------|---------|---------|----------"", ""entropy"": 0.4044483864864383, ""filler_type"": ""low_entropy"", ""stable_id"": ""TC_llm_filler_text_920d9381f25ab2dc_9f688a4d"", ""content_hash"": ""920d9381f25ab2dc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_text_920d9381f25ab2dc_f9214370""]}"
examples/hdc_pir_zk_integration_demo.py,256,256,0,,llm_filler_text,2,1.00,Suspiciously low entropy in text (likely synthetic),Review llm_filler_text issue at /Users/rohanvinaik/genomevault/examples/hdc_pir_zk_integration_demo.py:256 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""text_snippet"": ""-----------|------------|--------------|------------|-------"", ""entropy"": 0.35335933502142136, ""filler_type"": ""low_entropy"", ""stable_id"": ""TC_llm_filler_text_a976920e61392082_41472bda"", ""content_hash"": ""a976920e61392082"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_text_a976920e61392082_e83adff5""]}"
examples/hv_unified_encoder_demo.py,55,55,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/examples/hv_unified_encoder_demo.py:55 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""ATCGATCG"", ""ATCGATCG"", ""GGCCTTAA"", ""ATATATAT""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_b4c669e2df6d250d_2cb6bf84"", ""content_hash"": ""b4c669e2df6d250d"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
examples/hv_unified_encoder_demo.py,110,110,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/examples/hv_unified_encoder_demo.py:110 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""SNP"", ""INS"", ""DEL""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_304e6592c871519f_577c227b"", ""content_hash"": ""304e6592c871519f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
examples/packed_hypervector_example.py,168,168,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/examples/packed_hypervector_example.py:168 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""A"", ""T"", ""G"", ""C""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_046d535ec3f424e1_fbd4eb8a"", ""content_hash"": ""046d535ec3f424e1"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_046d535ec3f424e1_f0869df5"", ""TC_llm_filler_sequence_046d535ec3f424e1_acab769e"", ""TC_llm_filler_sequence_046d535ec3f424e1_c66cac6c"", ""TC_llm_filler_sequence_046d535ec3f424e1_bceea731"", ""TC_llm_filler_sequence_046d535ec3f424e1_18ab6957""]}"
examples/packed_hypervector_example.py,169,169,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/examples/packed_hypervector_example.py:169 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""A"", ""T"", ""G"", ""C""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_046d535ec3f424e1_4086a0dc"", ""content_hash"": ""046d535ec3f424e1"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_046d535ec3f424e1_f0869df5"", ""TC_llm_filler_sequence_046d535ec3f424e1_acab769e"", ""TC_llm_filler_sequence_046d535ec3f424e1_c66cac6c"", ""TC_llm_filler_sequence_046d535ec3f424e1_bceea731"", ""TC_llm_filler_sequence_046d535ec3f424e1_18ab6957"", ""TC_llm_filler_sequence_046d535ec3f424e1_fbd4eb8a""]}"
genomevault/advanced_analysis/federated_learning/client.py,621,621,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/advanced_analysis/federated_learning/client.py:621 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""Cell cycle regulation"", ""DNA repair"", ""Immune response""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_177aa87b288de171_61bbae2d"", ""content_hash"": ""177aa87b288de171"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_177aa87b288de171_9c46e396""]}"
genomevault/api/models/hv.py,173,173,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/api/models/hv.py:173 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": ["""", """"], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_ffcec643d60b68e7_b554cd66"", ""content_hash"": ""ffcec643d60b68e7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_ffcec643d60b68e7_2279a352""]}"
genomevault/api/models/hv.py,214,214,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/api/models/hv.py:214 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""chr1:123456 A>G"", ""chr2:789012 C>T"", ""chrX:555555 GG>AA""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_d4dbb379e2dff0d2_1477955d"", ""content_hash"": ""d4dbb379e2dff0d2"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_d4dbb379e2dff0d2_c5211d46""]}"
genomevault/api/routers/tuned_query.py,467,467,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/api/routers/tuned_query.py:467 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""TunedQueryRequest"", ""TunedQueryResponse"", ""router""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_ea42f0f63274dc0d_136a892c"", ""content_hash"": ""ea42f0f63274dc0d"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_ea42f0f63274dc0d_0712c2c8""]}"
genomevault/api/routers/tuned_query.py,130,130,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/api/routers/tuned_query.py:130 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""localhost:50051"", ""localhost:50052"", ""localhost:50053""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_4cd0ad07c75d3fd6_260c8bfd"", ""content_hash"": ""4cd0ad07c75d3fd6"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_4cd0ad07c75d3fd6_91c327f4""]}"
genomevault/blockchain/hipaa/integration.py,199,199,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/blockchain/hipaa/integration.py:199 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""Clinical data governance"", ""HIPAA compliance oversight"", ""Healthcare integration standards"", ""Patient privacy protection""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_90466fc50a798c49_5e606c8d"", ""content_hash"": ""90466fc50a798c49"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_90466fc50a798c49_7a5e532d""]}"
genomevault/clinical/diabetes_pilot/risk_calculator.py,386,386,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/clinical/diabetes_pilot/risk_calculator.py:386 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""Consider scheduling an appointment with your healthcare provider"", ""Monitor glucose levels more frequently"", ""Review dietary habits with a nutritionist""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_a0aa65f0e7bdab85_ffc70147"", ""content_hash"": ""a0aa65f0e7bdab85"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_a0aa65f0e7bdab85_d6ec58f8""]}"
genomevault/clinical/diabetes_pilot/risk_calculator.py,509,509,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/clinical/diabetes_pilot/risk_calculator.py:509 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""glucose"", ""blood_glucose"", ""2339-0""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_059455193f67ad49_45973ff3"", ""content_hash"": ""059455193f67ad49"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_059455193f67ad49_9ce313ba""]}"
genomevault/clinical/model_validation.py,158,158,0,,llm_filler_text,2,1.00,Lorem ipsum or placeholder text detected,Review llm_filler_text issue at /Users/rohanvinaik/genomevault/genomevault/clinical/model_validation.py:158 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""text_snippet"": ""\n        Perform clinical validation of a model.\n\n        Args:\n            model: The model to vali"", ""pattern"": ""test\\s+data"", ""filler_type"": ""lorem_ipsum"", ""stable_id"": ""TC_llm_filler_text_3ddbb48d51e0e512_52df855d"", ""content_hash"": ""3ddbb48d51e0e512"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/clinical/model_validation.py,433,433,0,,llm_filler_text,2,1.00,Lorem ipsum or placeholder text detected,Review llm_filler_text issue at /Users/rohanvinaik/genomevault/genomevault/clinical/model_validation.py:433 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""text_snippet"": ""Analyze test dataset characteristics"", ""pattern"": ""test\\s+data"", ""filler_type"": ""lorem_ipsum"", ""stable_id"": ""TC_llm_filler_text_36ccf91e5e7693bc_d779a2f0"", ""content_hash"": ""36ccf91e5e7693bc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/experimental/zk_circuits/catalytic_proof.py,442,442,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/experimental/zk_circuits/catalytic_proof.py:442 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""dp_noise"", ""polygenic_risk_score""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_726bfdc43c4b037b_56189e8a"", ""content_hash"": ""726bfdc43c4b037b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_726bfdc43c4b037b_e959f1f5"", ""TC_llm_filler_sequence_726bfdc43c4b037b_bec49fd8""]}"
genomevault/hypervector/__init__.py,13,13,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/hypervector/__init__.py:13 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""AdaptiveHDCEncoder"", ""ECCEncoderMixin"", ""ErrorBudget"", ""ErrorBudgetAllocator"", ""GenomicEncoder""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_5907d167abeb86f7_e2505e40"", ""content_hash"": ""5907d167abeb86f7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/hypervector/encoding/genomic.py,94,94,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/hypervector/encoding/genomic.py:94 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""SNP"", ""INS"", ""DEL"", ""DUP"", ""INV""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_0fcbd33dec5815c1_604c942f"", ""content_hash"": ""0fcbd33dec5815c1"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_0fcbd33dec5815c1_5759a9f9"", ""TC_llm_filler_sequence_0fcbd33dec5815c1_82999c60""]}"
genomevault/hypervector/encoding/genomic.py,82,82,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/hypervector/encoding/genomic.py:82 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""A"", ""T"", ""G"", ""C""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_046d535ec3f424e1_fb6eba31"", ""content_hash"": ""046d535ec3f424e1"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_046d535ec3f424e1_f0869df5"", ""TC_llm_filler_sequence_046d535ec3f424e1_acab769e"", ""TC_llm_filler_sequence_046d535ec3f424e1_c66cac6c"", ""TC_llm_filler_sequence_046d535ec3f424e1_bceea731"", ""TC_llm_filler_sequence_046d535ec3f424e1_18ab6957"", ""TC_llm_filler_sequence_046d535ec3f424e1_fbd4eb8a"", ""TC_llm_filler_sequence_046d535ec3f424e1_4086a0dc""]}"
genomevault/hypervector/error_handling.py,524,524,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/hypervector/error_handling.py:524 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""AdaptiveHDCEncoder"", ""ECCEncoderMixin"", ""ErrorBudget"", ""ErrorBudgetAllocator"", ""router""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_a488a248b8cbdad5_e8981427"", ""content_hash"": ""a488a248b8cbdad5"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_a488a248b8cbdad5_b8fb0342""]}"
genomevault/hypervector_transform/registry.py,68,68,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/hypervector_transform/registry.py:68 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""Default HDC encoding parameters - Clinical tier"", ""clinical""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_9b66ce67e263080d_10358c22"", ""content_hash"": ""9b66ce67e263080d"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/integration/proof_of_training.py,354,354,0,,llm_filler_text,2,1.00,Lorem ipsum or placeholder text detected,Review llm_filler_text issue at /Users/rohanvinaik/genomevault/genomevault/integration/proof_of_training.py:354 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""text_snippet"": ""\n        Perform clinical validation of a model.\n\n        Args:\n            model_id: Model identifi"", ""pattern"": ""test\\s+data"", ""filler_type"": ""lorem_ipsum"", ""stable_id"": ""TC_llm_filler_text_3514674e548a7464_22926145"", ""content_hash"": ""3514674e548a7464"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/local_processing/sequencing.py,347,347,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/sequencing.py:347 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""samtools"", ""index""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_3f2705006399e88d_947a921e"", ""content_hash"": ""3f2705006399e88d"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_3f2705006399e88d_e9b2243e"", ""TC_llm_filler_sequence_3f2705006399e88d_3bc47b8b""]}"
genomevault/local_processing/sequencing.py,308,308,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/sequencing.py:308 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""bwa"", ""index""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_5f52e97cf7bf88ac_d546e835"", ""content_hash"": ""5f52e97cf7bf88ac"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_5f52e97cf7bf88ac_7c382fa0""]}"
genomevault/local_processing/sequencing.py,381,381,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/sequencing.py:381 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""samtools"", ""markdup"", ""-@""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_65d4be5928c1b184_9e49c536"", ""content_hash"": ""65d4be5928c1b184"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_65d4be5928c1b184_df8d78f4""]}"
genomevault/local_processing/sequencing.py,391,391,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/local_processing/sequencing.py:391 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""samtools"", ""index""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_3f2705006399e88d_d7a2b66a"", ""content_hash"": ""3f2705006399e88d"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_3f2705006399e88d_e9b2243e"", ""TC_llm_filler_sequence_3f2705006399e88d_3bc47b8b"", ""TC_llm_filler_sequence_3f2705006399e88d_947a921e""]}"
genomevault/nanopore/__init__.py,14,14,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/nanopore/__init__.py:14 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""BiologicalSignalDetector"", ""GPUBindingKernel"", ""NanoporeStreamProcessor""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_8e6b4fdc4e92373e_4e5d4991"", ""content_hash"": ""8e6b4fdc4e92373e"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_8e6b4fdc4e92373e_84ce9e78""]}"
genomevault/pir/advanced/__init__.py,5,5,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/pir/advanced/__init__.py:5 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""GraphBasedPIR"", ""InformationTheoreticPIR"", ""PIRQuery"", ""PIRResponse"", ""PangenomeGraph""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_5342d5f29eaff1a3_d3242c64"", ""content_hash"": ""5342d5f29eaff1a3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_5342d5f29eaff1a3_b26c0924""]}"
genomevault/pir/client/__init__.py,12,12,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/pir/client/__init__.py:12 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""AggregationMethod"", ""BatchedPIRQueryBuilder"", ""BatchedQuery"", ""BatchedQueryResult"", ""GenomicQuery"", ""PIRClient"", ""PIRQuery"", ""PIRQueryBuilder"", ""QueryResult"", ""QueryType""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_57e8d91d65e3a297_fbbfd1f3"", ""content_hash"": ""57e8d91d65e3a297"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/pir/client/batched_query_builder.py,597,597,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/pir/client/batched_query_builder.py:597 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""AggregationMethod"", ""BatchedPIRQueryBuilder"", ""BatchedQuery"", ""BatchedQueryResult""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_bdc991f053c231c3_64e5fb54"", ""content_hash"": ""bdc991f053c231c3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_bdc991f053c231c3_f33f78f2""]}"
genomevault/pir/examples/integration_demo.py,53,53,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/pir/examples/integration_demo.py:53 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""ts-east-1"", ""US-EAST""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_fc01ebc0a05e88c8_68f65c99"", ""content_hash"": ""fc01ebc0a05e88c8"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/pir/examples/integration_demo.py,54,54,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/pir/examples/integration_demo.py:54 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""ts-west-1"", ""US-WEST""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_374bb88c9b811b0f_14e58e8c"", ""content_hash"": ""374bb88c9b811b0f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/pir/examples/integration_demo.py,55,55,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/pir/examples/integration_demo.py:55 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""ln-central-1"", ""US-CENTRAL""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_f93a9ae21ef4a188_515ebde6"", ""content_hash"": ""f93a9ae21ef4a188"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/pir/examples/integration_demo.py,56,56,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/pir/examples/integration_demo.py:56 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""ln-eu-1"", ""EU-WEST""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_cdc10fddd73b4e4a_6d73dd08"", ""content_hash"": ""cdc10fddd73b4e4a"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/pir/examples/integration_demo.py,57,57,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/pir/examples/integration_demo.py:57 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""ln-asia-1"", ""ASIA-PACIFIC""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_bfb26794a60e1c9f_e2cfee17"", ""content_hash"": ""bfb26794a60e1c9f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/pir/server/shard_manager.py,521,521,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/pir/server/shard_manager.py:521 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""ts1"", ""ts2"", ""ln1"", ""ln2"", ""ln3""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_ee392d115fa392f4_1c2b4404"", ""content_hash"": ""ee392d115fa392f4"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_ee392d115fa392f4_4dee742c""]}"
genomevault/types.py,227,227,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/types.py:227 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""redis"", ""memcached"", ""in-memory""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_8267ae4f305855be_3f239651"", ""content_hash"": ""8267ae4f305855be"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_8267ae4f305855be_0c261d20""]}"
genomevault/types.py,232,232,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/types.py:232 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""lru"", ""lfu"", ""fifo""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_9597056004871798_6c25d60b"", ""content_hash"": ""9597056004871798"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_9597056004871798_82023563""]}"
genomevault/utils/common.py,114,114,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/utils/common.py:114 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""HSM"", ""TPM"", ""NIT"", ""SGX""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_25226df59d446689_fafe82e5"", ""content_hash"": ""25226df59d446689"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/common.py,280,280,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/utils/common.py:280 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""variant_hash"", ""reference_hash"", ""commitment_root""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_5cfff7824ae79131_ef5c3296"", ""content_hash"": ""5cfff7824ae79131"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_5cfff7824ae79131_290ecfd2"", ""TC_llm_filler_sequence_5cfff7824ae79131_f2f72a76"", ""TC_llm_filler_sequence_5cfff7824ae79131_2d65a82c""]}"
genomevault/utils/common.py,650,650,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/utils/common.py:650 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""get_user_credits""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_f8ca8a6d3599e464_3fdb5cc7"", ""content_hash"": ""f8ca8a6d3599e464"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/common.py,659,659,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/utils/common.py:659 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""verify_hsm"", ""HSM verification successful""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_0d807dd31375e920_7166a7f9"", ""content_hash"": ""0d807dd31375e920"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/common.py,669,669,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/utils/common.py:669 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""create_circuit_template"", ""Template created""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_64793b01b1271eb7_d46e6c0c"", ""content_hash"": ""64793b01b1271eb7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/common.py,679,679,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/utils/common.py:679 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""get_config""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_d9e04d222654bb8f_438de395"", ""content_hash"": ""d9e04d222654bb8f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/common.py,653,653,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/utils/common.py:653 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""get_user_credits""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_f8ca8a6d3599e464_21b69022"", ""content_hash"": ""f8ca8a6d3599e464"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_f8ca8a6d3599e464_3fdb5cc7""]}"
genomevault/utils/common.py,662,662,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/utils/common.py:662 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""verify_hsm""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_f7985835bac0cce4_cefb7e9b"", ""content_hash"": ""f7985835bac0cce4"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/common.py,673,673,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/utils/common.py:673 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""create_circuit_template""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_7d24f3e1dc80e7fd_eadb257d"", ""content_hash"": ""7d24f3e1dc80e7fd"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/utils/common.py,682,682,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/utils/common.py:682 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""get_config""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_d9e04d222654bb8f_a79e93e0"", ""content_hash"": ""d9e04d222654bb8f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_d9e04d222654bb8f_438de395""]}"
genomevault/zk/backends/circom_snarkjs.py,163,163,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk/backends/circom_snarkjs.py:163 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""node""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_440159541164f831_3e2fa044"", ""content_hash"": ""440159541164f831"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_440159541164f831_9dedc690""]}"
genomevault/zk/backends/circom_snarkjs.py,97,97,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk/backends/circom_snarkjs.py:97 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""snarkjs"", ""powersoftau"", ""new"", ""bn128"", ""12"", ""-v""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_b323b66af8fc848f_11bf6a99"", ""content_hash"": ""b323b66af8fc848f"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_b323b66af8fc848f_13fe02cc""]}"
genomevault/zk_proofs/__init__.py,8,8,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/__init__.py:8 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""ZKProver"", ""circuit_manager"", ""post_quantum"", ""prover"", ""verifier""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_ebee5f975b3eaeeb_e14ff17e"", ""content_hash"": ""ebee5f975b3eaeeb"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_ebee5f975b3eaeeb_c2d4c62b""]}"
genomevault/zk_proofs/advanced/__init__.py,6,6,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/__init__.py:6 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""CatalyticProofEngine"", ""PostQuantumVerifier"", ""RecursiveProof"", ""RecursiveSNARKProver"", ""STARKProver""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_015b6a7508e352a0_46e780be"", ""content_hash"": ""015b6a7508e352a0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_015b6a7508e352a0_ecdad073""]}"
genomevault/zk_proofs/advanced/catalytic_proof.py,442,442,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/advanced/catalytic_proof.py:442 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""dp_noise"", ""polygenic_risk_score""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_726bfdc43c4b037b_7ddada53"", ""content_hash"": ""726bfdc43c4b037b"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_726bfdc43c4b037b_e959f1f5"", ""TC_llm_filler_sequence_726bfdc43c4b037b_bec49fd8"", ""TC_llm_filler_sequence_726bfdc43c4b037b_56189e8a""]}"
genomevault/zk_proofs/circuits/__init__.py,71,71,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/__init__.py:71 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""BaseCircuit"", ""ClinicalCircuit"", ""PRSProofCircuit""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_883605d6984bcc87_9f1ebf91"", ""content_hash"": ""883605d6984bcc87"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_883605d6984bcc87_3c32369b""]}"
genomevault/zk_proofs/circuits/biological/multi_omics.py,485,485,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/biological/multi_omics.py:485 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""risk_model"", ""risk_score"", ""confidence""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_33369795e8a511e0_e1fbc4e3"", ""content_hash"": ""33369795e8a511e0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_33369795e8a511e0_a49aa6e2""]}"
genomevault/zk_proofs/circuits/clinical/__init__.py,10,10,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/clinical/__init__.py:10 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""ClinicalBiomarkerCircuit"", ""DiabetesRiskCircuit"", ""ProofData""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_10f12965dc355773_67f11bd0"", ""content_hash"": ""10f12965dc355773"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_10f12965dc355773_8559d752""]}"
genomevault/zk_proofs/circuits/implementations/__init__.py,16,16,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/circuits/implementations/__init__.py:16 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""DiabetesRiskCircuit"", ""MerkleInclusionCircuit"", ""PedersenCommitmentCircuit"", ""PolygeneticRiskScoreCircuit"", ""RangeProofCircuit"", ""VariantProofCircuit""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_b0e011d0ac3c4e0d_eb557bd7"", ""content_hash"": ""b0e011d0ac3c4e0d"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_b0e011d0ac3c4e0d_67f748be""]}"
genomevault/zk_proofs/core/__init__.py,9,9,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/core/__init__.py:9 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""INITIAL_ACC"", ""step"", ""verify_chain""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_fe3afc17a71e5c69_0fe3955e"", ""content_hash"": ""fe3afc17a71e5c69"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/prover.py,122,122,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/prover.py:122 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""variant_hash"", ""reference_hash"", ""commitment_root""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_5cfff7824ae79131_f2f72a76"", ""content_hash"": ""5cfff7824ae79131"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_5cfff7824ae79131_290ecfd2"", ""TC_llm_filler_sequence_5cfff7824ae79131_2d65a82c"", ""TC_llm_filler_sequence_5cfff7824ae79131_ef5c3296""]}"
genomevault/zk_proofs/prover.py,171,171,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/prover.py:171 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""ancestry_model"", ""composition_hash"", ""threshold""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_cbcfe147db5289cc_fd58d62a"", ""content_hash"": ""cbcfe147db5289cc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_cbcfe147db5289cc_07adc7e8""]}"
genomevault/zk_proofs/prover.py,224,224,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/prover.py:224 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""expression_values"", ""gene_sets"", ""permutation_seeds"", ""witness_randomness""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_8c0c84416024024c_2497ceac"", ""content_hash"": ""8c0c84416024024c"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_8c0c84416024024c_285e4747""]}"
genomevault/zk_proofs/prover.py,245,245,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/prover.py:245 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""glucose_reading"", ""risk_score"", ""witness_randomness""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_64df635faf5ab985_e78e9904"", ""content_hash"": ""64df635faf5ab985"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_64df635faf5ab985_20d30d26""]}"
genomevault/zk_proofs/prover.py,635,635,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/prover.py:635 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""hash1"", ""hash2"", ""hash3""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_687e7af1dbe182b6_c05e6955"", ""content_hash"": ""687e7af1dbe182b6"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
genomevault/zk_proofs/verifier.py,260,260,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/verifier.py:260 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""variant_hash"", ""reference_hash"", ""commitment_root""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_5cfff7824ae79131_686a3668"", ""content_hash"": ""5cfff7824ae79131"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_5cfff7824ae79131_290ecfd2"", ""TC_llm_filler_sequence_5cfff7824ae79131_2d65a82c"", ""TC_llm_filler_sequence_5cfff7824ae79131_ef5c3296"", ""TC_llm_filler_sequence_5cfff7824ae79131_f2f72a76""]}"
genomevault/zk_proofs/verifier.py,377,377,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/verifier.py:377 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""ancestry_model"", ""composition_hash"", ""threshold""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_cbcfe147db5289cc_bdaa962b"", ""content_hash"": ""cbcfe147db5289cc"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_cbcfe147db5289cc_07adc7e8"", ""TC_llm_filler_sequence_cbcfe147db5289cc_fd58d62a""]}"
genomevault/zk_proofs/verifier.py,272,272,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/genomevault/zk_proofs/verifier.py:272 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""pi_a"", ""pi_b"", ""pi_c""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_03e19857262191bb_4fd6356e"", ""content_hash"": ""03e19857262191bb"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_03e19857262191bb_d9fa9702""]}"
scripts/add_remaining_docstrings.py,53,53,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/add_remaining_docstrings.py:53 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""genomevault/security/rate_limit.py"", ""check_rate_limit"", ""\""\""\""Check if request is within rate limits.\""\""\""""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_46d5bd32f3c797c7_ea08418d"", ""content_hash"": ""46d5bd32f3c797c7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/add_remaining_docstrings.py,58,58,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/add_remaining_docstrings.py:58 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""genomevault/clinical/calibration/calibrators.py"", ""calibrate_model"", ""\""\""\""Calibrate machine learning model predictions.\""\""\""""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_56b9a21c61fd50c1_67c40b6f"", ""content_hash"": ""56b9a21c61fd50c1"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/analyze_complexity.py,17,17,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/analyze_complexity.py:17 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""radon"", ""cc"", ""-s"", ""-a""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_d3192ea2dbcddb02_fbfb665b"", ""content_hash"": ""d3192ea2dbcddb02"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/analyze_missing_docstrings.py,24,24,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/analyze_missing_docstrings.py:24 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""Module""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_ed4bc97f4ebc6df3_2c86afa4"", ""content_hash"": ""ed4bc97f4ebc6df3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_ed4bc97f4ebc6df3_39164756""]}"
scripts/analyze_missing_docstrings.py,26,26,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/analyze_missing_docstrings.py:26 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""Module""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_ed4bc97f4ebc6df3_39164756"", ""content_hash"": ""ed4bc97f4ebc6df3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_ed4bc97f4ebc6df3_2c86afa4""]}"
scripts/analyze_missing_docstrings.py,32,32,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/analyze_missing_docstrings.py:32 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""Class""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_cc6437a0785bfabe_807186fd"", ""content_hash"": ""cc6437a0785bfabe"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_cc6437a0785bfabe_97186abb""]}"
scripts/analyze_missing_docstrings.py,34,34,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/analyze_missing_docstrings.py:34 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""Class""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_cc6437a0785bfabe_97186abb"", ""content_hash"": ""cc6437a0785bfabe"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_cc6437a0785bfabe_807186fd""]}"
scripts/analyze_missing_docstrings.py,46,46,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/analyze_missing_docstrings.py:46 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""Function""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_b9f21360b97200dd_f9b46d36"", ""content_hash"": ""b9f21360b97200dd"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_b9f21360b97200dd_dec4e01a""]}"
scripts/analyze_missing_docstrings.py,48,48,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/analyze_missing_docstrings.py:48 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""Function""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_b9f21360b97200dd_dec4e01a"", ""content_hash"": ""b9f21360b97200dd"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_b9f21360b97200dd_f9b46d36""]}"
scripts/analyze_missing_docstrings.py,55,55,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/analyze_missing_docstrings.py:55 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""AsyncFunction""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_da4c8858d7f888f8_091a2637"", ""content_hash"": ""da4c8858d7f888f8"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_da4c8858d7f888f8_beead8e9""]}"
scripts/analyze_missing_docstrings.py,57,57,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/analyze_missing_docstrings.py:57 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""AsyncFunction""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_da4c8858d7f888f8_beead8e9"", ""content_hash"": ""da4c8858d7f888f8"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_da4c8858d7f888f8_091a2637""]}"
scripts/analyze_missing_docstrings.py,107,107,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/analyze_missing_docstrings.py:107 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""__init__.py"", ""api.py"", ""core"", ""utils""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_4cf456d80b20d254_f5a11ee7"", ""content_hash"": ""4cf456d80b20d254"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/bench.py,395,395,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/bench.py:395 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""zk"", ""pir"", ""hdc""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_98526e12d4845de0_4b0cab5e"", ""content_hash"": ""98526e12d4845de0"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/bench.py,258,258,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/bench.py:258 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""--output-dir""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_2f99e260320cc2f3_c0418bf8"", ""content_hash"": ""2f99e260320cc2f3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/bench_hdc.py,207,207,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/bench_hdc.py:207 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""cosine"", ""euclidean"", ""hamming""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_138bf5195cce39fb_afb9909a"", ""content_hash"": ""138bf5195cce39fb"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/bench_hdc.py,543,543,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/bench_hdc.py:543 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""#1f77b4"", ""#ff7f0e"", ""#2ca02c""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_0ec395476bc4e7e8_650ffdc1"", ""content_hash"": ""0ec395476bc4e7e8"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_0ec395476bc4e7e8_07bb81e1"", ""TC_llm_filler_sequence_0ec395476bc4e7e8_caeaefef""]}"
scripts/generate_perf_report.py,171,171,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/generate_perf_report.py:171 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""#1f77b4"", ""#ff7f0e"", ""#2ca02c""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_0ec395476bc4e7e8_07bb81e1"", ""content_hash"": ""0ec395476bc4e7e8"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_0ec395476bc4e7e8_caeaefef"", ""TC_llm_filler_sequence_0ec395476bc4e7e8_650ffdc1""]}"
scripts/generate_perf_report.py,187,187,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/generate_perf_report.py:187 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""#1f77b4"", ""#ff7f0e"", ""#2ca02c""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_0ec395476bc4e7e8_caeaefef"", ""content_hash"": ""0ec395476bc4e7e8"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_0ec395476bc4e7e8_650ffdc1"", ""TC_llm_filler_sequence_0ec395476bc4e7e8_07bb81e1""]}"
scripts/implement_checklist.py,207,207,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/implement_checklist.py:207 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""pip"", ""install""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_c03cf63695c68009_5453d620"", ""content_hash"": ""c03cf63695c68009"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/implement_checklist.py,106,106,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/implement_checklist.py:106 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""import"", ""from"", ""#""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_83b154fb49605dce_0dd9728e"", ""content_hash"": ""83b154fb49605dce"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/organize_documentation.py,25,25,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/organize_documentation.py:25 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""AUDIT_IMPLEMENTATION_SUMMARY.md"", ""IMPLEMENTATION_REPORT.md"", ""LINT_FIX_IMPLEMENTATION_SUMMARY.md"", ""MVP_IMPLEMENTATION_PLAN.md"", ""MVP_SUCCESS_SUMMARY.md"", ""VALIDATION_REPORT.md""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_ee5e80961660d084_6d601a08"", ""content_hash"": ""ee5e80961660d084"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/remove_debug_prints.py,272,272,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/remove_debug_prints.py:272 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""devtools"", ""examples"", ""tests""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_f68b9ddc0f2c5631_31d7ed65"", ""content_hash"": ""f68b9ddc0f2c5631"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_f68b9ddc0f2c5631_8472bf70""]}"
scripts/remove_debug_prints.py,87,87,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: reverse_alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/remove_debug_prints.py:87 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""reverse_alphabetical"", ""values"": [""warn"", ""caution"", ""alert""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_f8d7b046428e42bb_bb06ab28"", ""content_hash"": ""f8d7b046428e42bb"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
scripts/remove_debug_prints.py,121,121,0,,llm_filler_json,3,1.00,JSON data contains placeholder/filler content,Review llm_filler_json issue at /Users/rohanvinaik/genomevault/scripts/remove_debug_prints.py:121 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""json_keys"": [], ""filler_type"": ""json_placeholders"", ""stable_id"": ""TC_llm_filler_json_b29648658c569d84_5f4cec9d"", ""content_hash"": ""b29648658c569d84"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_json_b29648658c569d84_4f931878""]}"
scripts/remove_debug_prints_simple.py,204,204,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: alphabetical,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/scripts/remove_debug_prints_simple.py:204 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""alphabetical"", ""values"": [""devtools"", ""examples"", ""tests""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_f68b9ddc0f2c5631_8472bf70"", ""content_hash"": ""f68b9ddc0f2c5631"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}, ""similar_issues"": [""TC_llm_filler_sequence_f68b9ddc0f2c5631_31d7ed65""]}"
tailchasing/calibrate.py,233,233,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/tailchasing/calibrate.py:233 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""tok"", ""ast"", ""mod"", ""git""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_7cc6f94a0185b4d3_339e02d9"", ""content_hash"": ""7cc6f94a0185b4d3"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
tailchasing/cli.py,113,113,0,,llm_filler_text,2,1.00,Lorem ipsum or placeholder text detected,Review llm_filler_text issue at /Users/rohanvinaik/genomevault/tailchasing/cli.py:113 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""text_snippet"": ""Validate configuration against test data"", ""pattern"": ""test\\s+data"", ""filler_type"": ""lorem_ipsum"", ""stable_id"": ""TC_llm_filler_text_93ed32f05dc18bf7_98eb13d6"", ""content_hash"": ""93ed32f05dc18bf7"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
tailchasing/cli.py,147,147,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/tailchasing/cli.py:147 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": [""json"", ""yaml"", ""text""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_5cc8a828370145cb_c7aad987"", ""content_hash"": ""5cc8a828370145cb"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
tailchasing/core/reporting.py,62,62,0,,llm_filler_sequence,2,1.00,Suspiciously uniform pattern: all_same_length,Review llm_filler_sequence issue at /Users/rohanvinaik/genomevault/tailchasing/core/reporting.py:62 | Consider refactoring to improve code quality | Add tests to prevent regression,"{""pattern"": ""all_same_length"", ""values"": ["" "", ""\u2581"", ""\u2582"", ""\u2583"", ""\u2584"", ""\u2585"", ""\u2586"", ""\u2587"", ""\u2588""], ""filler_type"": ""uniform"", ""stable_id"": ""TC_llm_filler_sequence_6cb76acfa7090ffb_7351660e"", ""content_hash"": ""6cb76acfa7090ffb"", ""provenance"": {""tracking_enabled"": true, ""git_commit"": ""c3f6143220963e22a8ee0303c48eb29add3f5b12"", ""git_branch"": ""clean-slate"", ""run_id"": ""25ce90bc3a744753"", ""is_regression"": false}}"
