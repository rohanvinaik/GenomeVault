apiVersion: v1
kind: ConfigMap
metadata:
  name: genomevault-config
  namespace: genomevault
data:
  # Core configuration
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  API_PORT: "8000"
  
  # Hypervector configuration
  HYPERVECTOR_DIMENSIONS: "10000"
  COMPRESSION_TIERS: "mini,clinical,full"
  
  # PIR configuration
  PIR_SERVER_COUNT: "5"
  PIR_SHARD_COUNT: "3"
  PIR_CACHE_SIZE: "1GB"
  
  # Blockchain configuration
  BLOCKCHAIN_NETWORK: "mainnet"
  BLOCK_TIME_SECONDS: "5"
  CONSENSUS_ALGORITHM: "tendermint"
  
  # Privacy configuration
  DIFFERENTIAL_PRIVACY_EPSILON: "1.0"
  DIFFERENTIAL_PRIVACY_DELTA: "1e-6"
  
  # Storage configuration
  STORAGE_BACKEND: "s3"
  BACKUP_RETENTION_DAYS: "30"
  
  # Monitoring configuration
  METRICS_ENABLED: "true"
  METRICS_PORT: "9090"
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: genomevault-scripts
  namespace: genomevault
data:
  healthcheck.sh: |
    #!/bin/bash
    # Health check script for GenomeVault services
    
    # Check API health
    curl -f http://localhost:8000/health || exit 1
    
    # Check metrics endpoint
    curl -f http://localhost:9090/metrics || exit 1
    
    # Check blockchain sync status
    SYNC_STATUS=$(curl -s http://localhost:26657/status | jq -r '.result.sync_info.catching_up')
    if [ "$SYNC_STATUS" = "true" ]; then
      echo "Node is still syncing"
      exit 1
    fi
    
    echo "All health checks passed"
    exit 0
    
  init-node.sh: |
    #!/bin/bash
    # Initialize GenomeVault node
    
    echo "Initializing GenomeVault node..."
    
    # Create required directories
    mkdir -p /data/genomevault/{blockchain,pir,backups,logs}
    
    # Initialize blockchain node
    if [ ! -f /data/genomevault/blockchain/config/genesis.json ]; then
      echo "Initializing blockchain..."
      genomevault-node init --home /data/genomevault/blockchain
    fi
    
    # Set up PIR shards
    if [ "$PIR_NODE_TYPE" = "server" ]; then
      echo "Setting up PIR server..."
      genomevault-pir-server init --data-dir /data/genomevault/pir
    fi
    
    # Configure monitoring
    echo "Configuring monitoring..."
    cp /config/prometheus.yml /etc/prometheus/
    
    echo "Node initialization complete"
