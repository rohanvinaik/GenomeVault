---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: genomevault-api
  namespace: genomevault
  labels:
    app: genomevault
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: genomevault
      component: api
  template:
    metadata:
      labels:
        app: genomevault
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: api
        image: genomevault/api:latest
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: genomevault-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: genomevault-config
              key: LOG_LEVEL
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: genomevault-blockchain
  namespace: genomevault
  labels:
    app: genomevault
    component: blockchain
spec:
  replicas: 3
  selector:
    matchLabels:
      app: genomevault
      component: blockchain
  template:
    metadata:
      labels:
        app: genomevault
        component: blockchain
    spec:
      containers:
      - name: blockchain
        image: genomevault/blockchain:latest
        ports:
        - containerPort: 26656
          name: p2p
        - containerPort: 26657
          name: rpc
        - containerPort: 26660
          name: metrics
        env:
        - name: BLOCKCHAIN_NETWORK
          valueFrom:
            configMapKeyRef:
              name: genomevault-config
              key: BLOCKCHAIN_NETWORK
        - name: CONSENSUS_ALGORITHM
          valueFrom:
            configMapKeyRef:
              name: genomevault-config
              key: CONSENSUS_ALGORITHM
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: blockchain-data
          mountPath: /data
      volumes:
      - name: blockchain-data
        persistentVolumeClaim:
          claimName: blockchain-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: genomevault-pir-server
  namespace: genomevault
  labels:
    app: genomevault
    component: pir-server
spec:
  replicas: 5
  selector:
    matchLabels:
      app: genomevault
      component: pir-server
  template:
    metadata:
      labels:
        app: genomevault
        component: pir-server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      containers:
      - name: pir-server
        image: genomevault/pir-server:latest
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: PIR_SHARD_COUNT
          valueFrom:
            configMapKeyRef:
              name: genomevault-config
              key: PIR_SHARD_COUNT
        - name: PIR_CACHE_SIZE
          valueFrom:
            configMapKeyRef:
              name: genomevault-config
              key: PIR_CACHE_SIZE
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
