version: '3.8'

services:
  # Local processing containers
  sequencing:
    build:
      context: ./local_processing/containers/sequencing
      dockerfile: Dockerfile
    image: GenomeVault/sequencing:latest
    volumes:
      - ./data/input:/data/input:ro
      - ./data/output:/data/output
    environment:
      - PROCESSING_MODE=secure
      - MAX_MEMORY=4G
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  transcriptomics:
    build:
      context: ./local_processing/containers/transcriptomics
      dockerfile: Dockerfile
    image: GenomeVault/transcriptomics:latest
    volumes:
      - ./data/input:/data/input:ro
      - ./data/output:/data/output
    environment:
      - PROCESSING_MODE=secure
      - MAX_MEMORY=2G
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  epigenetics:
    build:
      context: ./local_processing/containers/epigenetics
      dockerfile: Dockerfile
    image: GenomeVault/epigenetics:latest
    volumes:
      - ./data/input:/data/input:ro
      - ./data/output:/data/output
    environment:
      - PROCESSING_MODE=secure
      - MAX_MEMORY=2G
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  proteomics:
    build:
      context: ./local_processing/containers/proteomics
      dockerfile: Dockerfile
    image: GenomeVault/proteomics:latest
    volumes:
      - ./data/input:/data/input:ro
      - ./data/output:/data/output
    environment:
      - PROCESSING_MODE=secure
      - MAX_MEMORY=2G
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  # API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: GenomeVault/api:latest
    ports:
      - "8000:8000"
    environment:
      - NODE_TYPE=${NODE_TYPE:-light}
      - SIGNATORY_STATUS=${SIGNATORY_STATUS:-false}
      - PIR_SERVERS=${PIR_SERVERS:-localhost:9001,localhost:9002,localhost:9003}
    volumes:
      - ./config:/app/config:ro
      - ./data/cache:/app/cache
    depends_on:
      - redis
      - ipfs

  # Supporting services
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-GenomeVault}
    volumes:
      - redis_data:/data

  ipfs:
    image: ipfs/go-ipfs:latest
    environment:
      - IPFS_PROFILE=server
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    volumes:
      - ipfs_data:/data/ipfs

  # PIR servers (for development)
  pir-server-1:
    build:
      context: ./pir/server
      dockerfile: Dockerfile
    image: GenomeVault/pir-server:latest
    ports:
      - "9001:9001"
    environment:
      - SERVER_ID=1
      - SHARD_COUNT=3
      - SERVER_TYPE=LN

  pir-server-2:
    build:
      context: ./pir/server
      dockerfile: Dockerfile
    image: genomevault/pir-server:latest
    ports:
      - "9002:9002"
    environment:
      - SERVER_ID=2
      - SHARD_COUNT=3
      - SERVER_TYPE=TS
      - SIGNATORY_KEY=${TS_KEY_1}

  pir-server-3:
    build:
      context: ./pir/server
      dockerfile: Dockerfile
    image: genomevault/pir-server:latest
    ports:
      - "9003:9003"
    environment:
      - SERVER_ID=3
      - SHARD_COUNT=3
      - SERVER_TYPE=TS
      - SIGNATORY_KEY=${TS_KEY_2}

volumes:
  redis_data:
  ipfs_data:

networks:
  default:
    name: GenomeVault_network
