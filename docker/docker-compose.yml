version: '3.8'

services:
  zk-api:
    build:
      context: .
      dockerfile: Dockerfile.zk-api
    ports:
      - "8000:8000"
    environment:
      - ZK_CONFIG_PATH=/app/config/zk_config.yaml
      - LOG_LEVEL=INFO
      - MAX_WORKERS=4
    volumes:
      - ./config:/app/config:ro
      - zk_cache:/app/cache
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  zk-worker:
    build:
      context: .
      dockerfile: Dockerfile.zk-worker
    environment:
      - ZK_CONFIG_PATH=/app/config/zk_config.yaml
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://genome:vault@postgres:5432/genomevault
    volumes:
      - ./config:/app/config:ro
      - zk_cache:/app/cache
    depends_on:
      - redis
      - postgres
    deploy:
      replicas: 2
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=genomevault
      - POSTGRES_USER=genome
      - POSTGRES_PASSWORD=vault
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  zk_cache:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:
