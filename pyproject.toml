[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "genomevault"
version = "0.1.0"
description = "GenomeVault â€” privacy-preserving genomic compute (ZK/PIR/HDC)"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [{ name = "Rohan Vinaik" }]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Typing :: Typed",
]
dependencies = []

[project.optional-dependencies]
dev = [
  "ruff",
  "mypy",
  "pytest>=8.2",
  "pytest-asyncio>=1.1.0",
  "pytest-benchmark>=5.1.0",
  "pytest-cov",
  "pyupgrade",
  "radon"
]
ml = [
  "torch>=2.3",
  "scikit-learn>=1.6",
  "numpy>=1.21"
]
zk = [
  "pysnark>=0.6"
]
nanopore = [
  "ont-fast5-api>=4.0",
  "pyslow5>=0.7"
]
gpu = [
  "cupy-cuda12x>=12.0.0"
]
full = [
  "genomevault[ml,zk,nanopore,gpu]"
]

[tool.setuptools.packages.find]
where = ["."]
include = ["genomevault", "genomevault.*"]
exclude = ["scripts", "examples", "devtools", "tools", "attic"]

[project.scripts]
genomevault = "genomevault.cli:main"
gv = "genomevault.cli:main"

[tool.black]
line-length = 100
target-version = ["py311"]
extend-exclude = "^(.*/)?(migrations|build|dist|node_modules|.venv|venv|.mypy_cache|.ruff_cache|.pytest_cache)/"

[tool.ruff]
line-length = 120
target-version = "py39"
select = [
  "E",    # pycodestyle errors
  "F",    # pyflakes
  "I",    # isort
  "N",    # pep8-naming
  "UP",   # pyupgrade
  "S",    # flake8-bandit
  "B",    # flake8-bugbear
  "A",    # flake8-builtins
  "C4",   # flake8-comprehensions
  "DTZ",  # flake8-datetimez
  "T10",  # flake8-debugger
  "ISC",  # flake8-implicit-str-concat
  "ICN",  # flake8-import-conventions
  "PIE",  # flake8-pie
  "PT",   # flake8-pytest-style
  "RET",  # flake8-return
  "SIM",  # flake8-simplify
  "ARG",  # flake8-unused-arguments
  "PTH",  # flake8-use-pathlib
  "ERA",  # eradicate
  "PD",   # pandas-vet
  "PGH",  # pygrep-hooks
  "PL",   # Pylint
  "TRY",  # tryceratops
  "RUF",  # Ruff-specific rules
]
ignore = ["E501", "PLR0913"]
exclude = [
  "migrations",
  "build",
  "dist",
  "node_modules",
  ".venv",
  "venv",
  ".mypy_cache",
  ".ruff_cache",
  ".pytest_cache",
]

[tool.ruff.lint.isort]
known-first-party = ["genomevault"]
force-single-line = false
combine-as-imports = true
lines-after-imports = 2

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.11"
strict = true
plugins = ["numpy.typing.mypy_plugin"]
ignore_missing_imports = false
follow_imports = "silent"
show_error_codes = true
mypy_path = "typings"

[[tool.mypy.overrides]]
module = [
  "genomevault.nanopore.*",
  "genomevault.pir.examples.*",
  "genomevault.api.*",
  "tests.*",
]
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
